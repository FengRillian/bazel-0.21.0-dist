// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/java/com/google/devtools/build/lib/skylarkdebug/proto/skylark_debugging.proto

package com.google.devtools.build.lib.skylarkdebugging;

public final class SkylarkDebuggingProtos {
  private SkylarkDebuggingProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Describes the stepping behavior that should occur when execution of a thread
   * is continued.
   * </pre>
   *
   * Protobuf enum {@code skylark_debugging.Stepping}
   */
  public enum Stepping
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Do not step; continue execution until it completes or is paused for some
     * other reason (such as hitting another breakpoint).
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <pre>
     * If the thread is paused on a statement that contains a function call,
     * step into that function. Otherwise, this is the same as OVER.
     * </pre>
     *
     * <code>INTO = 1;</code>
     */
    INTO(1),
    /**
     * <pre>
     * Step over the next statement and any functions that it may call.
     * </pre>
     *
     * <code>OVER = 2;</code>
     */
    OVER(2),
    /**
     * <pre>
     * Continue execution until the current function has been exited and then
     * pause.
     * </pre>
     *
     * <code>OUT = 3;</code>
     */
    OUT(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Do not step; continue execution until it completes or is paused for some
     * other reason (such as hitting another breakpoint).
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <pre>
     * If the thread is paused on a statement that contains a function call,
     * step into that function. Otherwise, this is the same as OVER.
     * </pre>
     *
     * <code>INTO = 1;</code>
     */
    public static final int INTO_VALUE = 1;
    /**
     * <pre>
     * Step over the next statement and any functions that it may call.
     * </pre>
     *
     * <code>OVER = 2;</code>
     */
    public static final int OVER_VALUE = 2;
    /**
     * <pre>
     * Continue execution until the current function has been exited and then
     * pause.
     * </pre>
     *
     * <code>OUT = 3;</code>
     */
    public static final int OUT_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Stepping valueOf(int value) {
      return forNumber(value);
    }

    public static Stepping forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return INTO;
        case 2: return OVER;
        case 3: return OUT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Stepping>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Stepping> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Stepping>() {
            public Stepping findValueByNumber(int number) {
              return Stepping.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final Stepping[] VALUES = values();

    public static Stepping valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Stepping(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:skylark_debugging.Stepping)
  }

  /**
   * <pre>
   * The reason why a thread was paused.
   * </pre>
   *
   * Protobuf enum {@code skylark_debugging.PauseReason}
   */
  public enum PauseReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The debug server hasn't set any reason.
     * </pre>
     *
     * <code>UNSET = 0;</code>
     */
    UNSET(0),
    /**
     * <pre>
     * The stepping condition in a ContinueExecutionRequest was hit.
     * </pre>
     *
     * <code>STEPPING = 1;</code>
     */
    STEPPING(1),
    /**
     * <pre>
     * A PauseThreadRequest was sent with thread_id=0.
     * </pre>
     *
     * <code>ALL_THREADS_PAUSED = 2;</code>
     */
    ALL_THREADS_PAUSED(2),
    /**
     * <pre>
     * A PauseThreadRequest was sent with thread_id matching this thread.
     * </pre>
     *
     * <code>PAUSE_THREAD_REQUEST = 3;</code>
     */
    PAUSE_THREAD_REQUEST(3),
    /**
     * <pre>
     * A breakpoint was hit.
     * </pre>
     *
     * <code>HIT_BREAKPOINT = 4;</code>
     */
    HIT_BREAKPOINT(4),
    /**
     * <pre>
     * An error occurred while evaluating a breakpoint condition.
     * </pre>
     *
     * <code>CONDITIONAL_BREAKPOINT_ERROR = 5;</code>
     */
    CONDITIONAL_BREAKPOINT_ERROR(5),
    /**
     * <pre>
     * Debugging just started, and a StartDebuggingRequest has not yet been
     * received and processed.
     * </pre>
     *
     * <code>INITIALIZING = 6;</code>
     */
    INITIALIZING(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * The debug server hasn't set any reason.
     * </pre>
     *
     * <code>UNSET = 0;</code>
     */
    public static final int UNSET_VALUE = 0;
    /**
     * <pre>
     * The stepping condition in a ContinueExecutionRequest was hit.
     * </pre>
     *
     * <code>STEPPING = 1;</code>
     */
    public static final int STEPPING_VALUE = 1;
    /**
     * <pre>
     * A PauseThreadRequest was sent with thread_id=0.
     * </pre>
     *
     * <code>ALL_THREADS_PAUSED = 2;</code>
     */
    public static final int ALL_THREADS_PAUSED_VALUE = 2;
    /**
     * <pre>
     * A PauseThreadRequest was sent with thread_id matching this thread.
     * </pre>
     *
     * <code>PAUSE_THREAD_REQUEST = 3;</code>
     */
    public static final int PAUSE_THREAD_REQUEST_VALUE = 3;
    /**
     * <pre>
     * A breakpoint was hit.
     * </pre>
     *
     * <code>HIT_BREAKPOINT = 4;</code>
     */
    public static final int HIT_BREAKPOINT_VALUE = 4;
    /**
     * <pre>
     * An error occurred while evaluating a breakpoint condition.
     * </pre>
     *
     * <code>CONDITIONAL_BREAKPOINT_ERROR = 5;</code>
     */
    public static final int CONDITIONAL_BREAKPOINT_ERROR_VALUE = 5;
    /**
     * <pre>
     * Debugging just started, and a StartDebuggingRequest has not yet been
     * received and processed.
     * </pre>
     *
     * <code>INITIALIZING = 6;</code>
     */
    public static final int INITIALIZING_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PauseReason valueOf(int value) {
      return forNumber(value);
    }

    public static PauseReason forNumber(int value) {
      switch (value) {
        case 0: return UNSET;
        case 1: return STEPPING;
        case 2: return ALL_THREADS_PAUSED;
        case 3: return PAUSE_THREAD_REQUEST;
        case 4: return HIT_BREAKPOINT;
        case 5: return CONDITIONAL_BREAKPOINT_ERROR;
        case 6: return INITIALIZING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PauseReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PauseReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PauseReason>() {
            public PauseReason findValueByNumber(int number) {
              return PauseReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final PauseReason[] VALUES = values();

    public static PauseReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PauseReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:skylark_debugging.PauseReason)
  }

  public interface DebugRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.DebugRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A number (intended to be sequentially generated by the client) that
     * identifies the request. The response sent by the server will contain the
     * same sequence number so that the client can synchronize its activity if
     * desired.
     * </pre>
     *
     * <code>int64 sequence_number = 1;</code>
     */
    long getSequenceNumber();

    /**
     * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
     */
    boolean hasSetBreakpoints();
    /**
     * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest getSetBreakpoints();
    /**
     * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequestOrBuilder getSetBreakpointsOrBuilder();

    /**
     * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
     */
    boolean hasContinueExecution();
    /**
     * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest getContinueExecution();
    /**
     * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequestOrBuilder getContinueExecutionOrBuilder();

    /**
     * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
     */
    boolean hasEvaluate();
    /**
     * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest getEvaluate();
    /**
     * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequestOrBuilder getEvaluateOrBuilder();

    /**
     * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
     */
    boolean hasListFrames();
    /**
     * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest getListFrames();
    /**
     * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequestOrBuilder getListFramesOrBuilder();

    /**
     * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
     */
    boolean hasStartDebugging();
    /**
     * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest getStartDebugging();
    /**
     * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequestOrBuilder getStartDebuggingOrBuilder();

    /**
     * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
     */
    boolean hasPauseThread();
    /**
     * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest getPauseThread();
    /**
     * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequestOrBuilder getPauseThreadOrBuilder();

    /**
     * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
     */
    boolean hasGetChildren();
    /**
     * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest getGetChildren();
    /**
     * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequestOrBuilder getGetChildrenOrBuilder();

    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest.PayloadCase getPayloadCase();
  }
  /**
   * <pre>
   * A request sent by the debug client to the debug server.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.DebugRequest}
   */
  public  static final class DebugRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.DebugRequest)
      DebugRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DebugRequest.newBuilder() to construct.
    private DebugRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugRequest() {
      sequenceNumber_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              sequenceNumber_ = input.readInt64();
              break;
            }
            case 810: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.Builder subBuilder = null;
              if (payloadCase_ == 101) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 101;
              break;
            }
            case 818: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.Builder subBuilder = null;
              if (payloadCase_ == 102) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 102;
              break;
            }
            case 826: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.Builder subBuilder = null;
              if (payloadCase_ == 103) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 103;
              break;
            }
            case 834: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.Builder subBuilder = null;
              if (payloadCase_ == 104) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 104;
              break;
            }
            case 842: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.Builder subBuilder = null;
              if (payloadCase_ == 105) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 105;
              break;
            }
            case 850: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.Builder subBuilder = null;
              if (payloadCase_ == 106) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 106;
              break;
            }
            case 858: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.Builder subBuilder = null;
              if (payloadCase_ == 107) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 107;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_DebugRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_DebugRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest.Builder.class);
    }

    private int payloadCase_ = 0;
    private java.lang.Object payload_;
    public enum PayloadCase
        implements com.google.protobuf.Internal.EnumLite {
      SET_BREAKPOINTS(101),
      CONTINUE_EXECUTION(102),
      EVALUATE(103),
      LIST_FRAMES(104),
      START_DEBUGGING(105),
      PAUSE_THREAD(106),
      GET_CHILDREN(107),
      PAYLOAD_NOT_SET(0);
      private final int value;
      private PayloadCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadCase forNumber(int value) {
        switch (value) {
          case 101: return SET_BREAKPOINTS;
          case 102: return CONTINUE_EXECUTION;
          case 103: return EVALUATE;
          case 104: return LIST_FRAMES;
          case 105: return START_DEBUGGING;
          case 106: return PAUSE_THREAD;
          case 107: return GET_CHILDREN;
          case 0: return PAYLOAD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadCase
    getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    public static final int SEQUENCE_NUMBER_FIELD_NUMBER = 1;
    private long sequenceNumber_;
    /**
     * <pre>
     * A number (intended to be sequentially generated by the client) that
     * identifies the request. The response sent by the server will contain the
     * same sequence number so that the client can synchronize its activity if
     * desired.
     * </pre>
     *
     * <code>int64 sequence_number = 1;</code>
     */
    public long getSequenceNumber() {
      return sequenceNumber_;
    }

    public static final int SET_BREAKPOINTS_FIELD_NUMBER = 101;
    /**
     * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
     */
    public boolean hasSetBreakpoints() {
      return payloadCase_ == 101;
    }
    /**
     * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest getSetBreakpoints() {
      if (payloadCase_ == 101) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequestOrBuilder getSetBreakpointsOrBuilder() {
      if (payloadCase_ == 101) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.getDefaultInstance();
    }

    public static final int CONTINUE_EXECUTION_FIELD_NUMBER = 102;
    /**
     * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
     */
    public boolean hasContinueExecution() {
      return payloadCase_ == 102;
    }
    /**
     * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest getContinueExecution() {
      if (payloadCase_ == 102) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequestOrBuilder getContinueExecutionOrBuilder() {
      if (payloadCase_ == 102) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.getDefaultInstance();
    }

    public static final int EVALUATE_FIELD_NUMBER = 103;
    /**
     * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
     */
    public boolean hasEvaluate() {
      return payloadCase_ == 103;
    }
    /**
     * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest getEvaluate() {
      if (payloadCase_ == 103) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequestOrBuilder getEvaluateOrBuilder() {
      if (payloadCase_ == 103) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.getDefaultInstance();
    }

    public static final int LIST_FRAMES_FIELD_NUMBER = 104;
    /**
     * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
     */
    public boolean hasListFrames() {
      return payloadCase_ == 104;
    }
    /**
     * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest getListFrames() {
      if (payloadCase_ == 104) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequestOrBuilder getListFramesOrBuilder() {
      if (payloadCase_ == 104) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.getDefaultInstance();
    }

    public static final int START_DEBUGGING_FIELD_NUMBER = 105;
    /**
     * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
     */
    public boolean hasStartDebugging() {
      return payloadCase_ == 105;
    }
    /**
     * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest getStartDebugging() {
      if (payloadCase_ == 105) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequestOrBuilder getStartDebuggingOrBuilder() {
      if (payloadCase_ == 105) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.getDefaultInstance();
    }

    public static final int PAUSE_THREAD_FIELD_NUMBER = 106;
    /**
     * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
     */
    public boolean hasPauseThread() {
      return payloadCase_ == 106;
    }
    /**
     * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest getPauseThread() {
      if (payloadCase_ == 106) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequestOrBuilder getPauseThreadOrBuilder() {
      if (payloadCase_ == 106) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.getDefaultInstance();
    }

    public static final int GET_CHILDREN_FIELD_NUMBER = 107;
    /**
     * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
     */
    public boolean hasGetChildren() {
      return payloadCase_ == 107;
    }
    /**
     * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest getGetChildren() {
      if (payloadCase_ == 107) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequestOrBuilder getGetChildrenOrBuilder() {
      if (payloadCase_ == 107) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sequenceNumber_ != 0L) {
        output.writeInt64(1, sequenceNumber_);
      }
      if (payloadCase_ == 101) {
        output.writeMessage(101, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) payload_);
      }
      if (payloadCase_ == 102) {
        output.writeMessage(102, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) payload_);
      }
      if (payloadCase_ == 103) {
        output.writeMessage(103, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) payload_);
      }
      if (payloadCase_ == 104) {
        output.writeMessage(104, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) payload_);
      }
      if (payloadCase_ == 105) {
        output.writeMessage(105, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) payload_);
      }
      if (payloadCase_ == 106) {
        output.writeMessage(106, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) payload_);
      }
      if (payloadCase_ == 107) {
        output.writeMessage(107, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) payload_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sequenceNumber_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, sequenceNumber_);
      }
      if (payloadCase_ == 101) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) payload_);
      }
      if (payloadCase_ == 102) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(102, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) payload_);
      }
      if (payloadCase_ == 103) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(103, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) payload_);
      }
      if (payloadCase_ == 104) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(104, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) payload_);
      }
      if (payloadCase_ == 105) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(105, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) payload_);
      }
      if (payloadCase_ == 106) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(106, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) payload_);
      }
      if (payloadCase_ == 107) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(107, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) payload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest) obj;

      boolean result = true;
      result = result && (getSequenceNumber()
          == other.getSequenceNumber());
      result = result && getPayloadCase().equals(
          other.getPayloadCase());
      if (!result) return false;
      switch (payloadCase_) {
        case 101:
          result = result && getSetBreakpoints()
              .equals(other.getSetBreakpoints());
          break;
        case 102:
          result = result && getContinueExecution()
              .equals(other.getContinueExecution());
          break;
        case 103:
          result = result && getEvaluate()
              .equals(other.getEvaluate());
          break;
        case 104:
          result = result && getListFrames()
              .equals(other.getListFrames());
          break;
        case 105:
          result = result && getStartDebugging()
              .equals(other.getStartDebugging());
          break;
        case 106:
          result = result && getPauseThread()
              .equals(other.getPauseThread());
          break;
        case 107:
          result = result && getGetChildren()
              .equals(other.getGetChildren());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQUENCE_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSequenceNumber());
      switch (payloadCase_) {
        case 101:
          hash = (37 * hash) + SET_BREAKPOINTS_FIELD_NUMBER;
          hash = (53 * hash) + getSetBreakpoints().hashCode();
          break;
        case 102:
          hash = (37 * hash) + CONTINUE_EXECUTION_FIELD_NUMBER;
          hash = (53 * hash) + getContinueExecution().hashCode();
          break;
        case 103:
          hash = (37 * hash) + EVALUATE_FIELD_NUMBER;
          hash = (53 * hash) + getEvaluate().hashCode();
          break;
        case 104:
          hash = (37 * hash) + LIST_FRAMES_FIELD_NUMBER;
          hash = (53 * hash) + getListFrames().hashCode();
          break;
        case 105:
          hash = (37 * hash) + START_DEBUGGING_FIELD_NUMBER;
          hash = (53 * hash) + getStartDebugging().hashCode();
          break;
        case 106:
          hash = (37 * hash) + PAUSE_THREAD_FIELD_NUMBER;
          hash = (53 * hash) + getPauseThread().hashCode();
          break;
        case 107:
          hash = (37 * hash) + GET_CHILDREN_FIELD_NUMBER;
          hash = (53 * hash) + getGetChildren().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A request sent by the debug client to the debug server.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.DebugRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.DebugRequest)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_DebugRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_DebugRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sequenceNumber_ = 0L;

        payloadCase_ = 0;
        payload_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_DebugRequest_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest(this);
        result.sequenceNumber_ = sequenceNumber_;
        if (payloadCase_ == 101) {
          if (setBreakpointsBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = setBreakpointsBuilder_.build();
          }
        }
        if (payloadCase_ == 102) {
          if (continueExecutionBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = continueExecutionBuilder_.build();
          }
        }
        if (payloadCase_ == 103) {
          if (evaluateBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = evaluateBuilder_.build();
          }
        }
        if (payloadCase_ == 104) {
          if (listFramesBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = listFramesBuilder_.build();
          }
        }
        if (payloadCase_ == 105) {
          if (startDebuggingBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = startDebuggingBuilder_.build();
          }
        }
        if (payloadCase_ == 106) {
          if (pauseThreadBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = pauseThreadBuilder_.build();
          }
        }
        if (payloadCase_ == 107) {
          if (getChildrenBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = getChildrenBuilder_.build();
          }
        }
        result.payloadCase_ = payloadCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest.getDefaultInstance()) return this;
        if (other.getSequenceNumber() != 0L) {
          setSequenceNumber(other.getSequenceNumber());
        }
        switch (other.getPayloadCase()) {
          case SET_BREAKPOINTS: {
            mergeSetBreakpoints(other.getSetBreakpoints());
            break;
          }
          case CONTINUE_EXECUTION: {
            mergeContinueExecution(other.getContinueExecution());
            break;
          }
          case EVALUATE: {
            mergeEvaluate(other.getEvaluate());
            break;
          }
          case LIST_FRAMES: {
            mergeListFrames(other.getListFrames());
            break;
          }
          case START_DEBUGGING: {
            mergeStartDebugging(other.getStartDebugging());
            break;
          }
          case PAUSE_THREAD: {
            mergePauseThread(other.getPauseThread());
            break;
          }
          case GET_CHILDREN: {
            mergeGetChildren(other.getGetChildren());
            break;
          }
          case PAYLOAD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int payloadCase_ = 0;
      private java.lang.Object payload_;
      public PayloadCase
          getPayloadCase() {
        return PayloadCase.forNumber(
            payloadCase_);
      }

      public Builder clearPayload() {
        payloadCase_ = 0;
        payload_ = null;
        onChanged();
        return this;
      }


      private long sequenceNumber_ ;
      /**
       * <pre>
       * A number (intended to be sequentially generated by the client) that
       * identifies the request. The response sent by the server will contain the
       * same sequence number so that the client can synchronize its activity if
       * desired.
       * </pre>
       *
       * <code>int64 sequence_number = 1;</code>
       */
      public long getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <pre>
       * A number (intended to be sequentially generated by the client) that
       * identifies the request. The response sent by the server will contain the
       * same sequence number so that the client can synchronize its activity if
       * desired.
       * </pre>
       *
       * <code>int64 sequence_number = 1;</code>
       */
      public Builder setSequenceNumber(long value) {
        
        sequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A number (intended to be sequentially generated by the client) that
       * identifies the request. The response sent by the server will contain the
       * same sequence number so that the client can synchronize its activity if
       * desired.
       * </pre>
       *
       * <code>int64 sequence_number = 1;</code>
       */
      public Builder clearSequenceNumber() {
        
        sequenceNumber_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequestOrBuilder> setBreakpointsBuilder_;
      /**
       * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
       */
      public boolean hasSetBreakpoints() {
        return payloadCase_ == 101;
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest getSetBreakpoints() {
        if (setBreakpointsBuilder_ == null) {
          if (payloadCase_ == 101) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.getDefaultInstance();
        } else {
          if (payloadCase_ == 101) {
            return setBreakpointsBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
       */
      public Builder setSetBreakpoints(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest value) {
        if (setBreakpointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          setBreakpointsBuilder_.setMessage(value);
        }
        payloadCase_ = 101;
        return this;
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
       */
      public Builder setSetBreakpoints(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.Builder builderForValue) {
        if (setBreakpointsBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          setBreakpointsBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 101;
        return this;
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
       */
      public Builder mergeSetBreakpoints(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest value) {
        if (setBreakpointsBuilder_ == null) {
          if (payloadCase_ == 101 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 101) {
            setBreakpointsBuilder_.mergeFrom(value);
          }
          setBreakpointsBuilder_.setMessage(value);
        }
        payloadCase_ = 101;
        return this;
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
       */
      public Builder clearSetBreakpoints() {
        if (setBreakpointsBuilder_ == null) {
          if (payloadCase_ == 101) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 101) {
            payloadCase_ = 0;
            payload_ = null;
          }
          setBreakpointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.Builder getSetBreakpointsBuilder() {
        return getSetBreakpointsFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequestOrBuilder getSetBreakpointsOrBuilder() {
        if ((payloadCase_ == 101) && (setBreakpointsBuilder_ != null)) {
          return setBreakpointsBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 101) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsRequest set_breakpoints = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequestOrBuilder> 
          getSetBreakpointsFieldBuilder() {
        if (setBreakpointsBuilder_ == null) {
          if (!(payloadCase_ == 101)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.getDefaultInstance();
          }
          setBreakpointsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequestOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 101;
        onChanged();;
        return setBreakpointsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequestOrBuilder> continueExecutionBuilder_;
      /**
       * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
       */
      public boolean hasContinueExecution() {
        return payloadCase_ == 102;
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest getContinueExecution() {
        if (continueExecutionBuilder_ == null) {
          if (payloadCase_ == 102) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.getDefaultInstance();
        } else {
          if (payloadCase_ == 102) {
            return continueExecutionBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
       */
      public Builder setContinueExecution(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest value) {
        if (continueExecutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          continueExecutionBuilder_.setMessage(value);
        }
        payloadCase_ = 102;
        return this;
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
       */
      public Builder setContinueExecution(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.Builder builderForValue) {
        if (continueExecutionBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          continueExecutionBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 102;
        return this;
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
       */
      public Builder mergeContinueExecution(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest value) {
        if (continueExecutionBuilder_ == null) {
          if (payloadCase_ == 102 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 102) {
            continueExecutionBuilder_.mergeFrom(value);
          }
          continueExecutionBuilder_.setMessage(value);
        }
        payloadCase_ = 102;
        return this;
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
       */
      public Builder clearContinueExecution() {
        if (continueExecutionBuilder_ == null) {
          if (payloadCase_ == 102) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 102) {
            payloadCase_ = 0;
            payload_ = null;
          }
          continueExecutionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.Builder getContinueExecutionBuilder() {
        return getContinueExecutionFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequestOrBuilder getContinueExecutionOrBuilder() {
        if ((payloadCase_ == 102) && (continueExecutionBuilder_ != null)) {
          return continueExecutionBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 102) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionRequest continue_execution = 102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequestOrBuilder> 
          getContinueExecutionFieldBuilder() {
        if (continueExecutionBuilder_ == null) {
          if (!(payloadCase_ == 102)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.getDefaultInstance();
          }
          continueExecutionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequestOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 102;
        onChanged();;
        return continueExecutionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequestOrBuilder> evaluateBuilder_;
      /**
       * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
       */
      public boolean hasEvaluate() {
        return payloadCase_ == 103;
      }
      /**
       * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest getEvaluate() {
        if (evaluateBuilder_ == null) {
          if (payloadCase_ == 103) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.getDefaultInstance();
        } else {
          if (payloadCase_ == 103) {
            return evaluateBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
       */
      public Builder setEvaluate(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest value) {
        if (evaluateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          evaluateBuilder_.setMessage(value);
        }
        payloadCase_ = 103;
        return this;
      }
      /**
       * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
       */
      public Builder setEvaluate(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.Builder builderForValue) {
        if (evaluateBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          evaluateBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 103;
        return this;
      }
      /**
       * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
       */
      public Builder mergeEvaluate(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest value) {
        if (evaluateBuilder_ == null) {
          if (payloadCase_ == 103 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 103) {
            evaluateBuilder_.mergeFrom(value);
          }
          evaluateBuilder_.setMessage(value);
        }
        payloadCase_ = 103;
        return this;
      }
      /**
       * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
       */
      public Builder clearEvaluate() {
        if (evaluateBuilder_ == null) {
          if (payloadCase_ == 103) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 103) {
            payloadCase_ = 0;
            payload_ = null;
          }
          evaluateBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.Builder getEvaluateBuilder() {
        return getEvaluateFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequestOrBuilder getEvaluateOrBuilder() {
        if ((payloadCase_ == 103) && (evaluateBuilder_ != null)) {
          return evaluateBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 103) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.EvaluateRequest evaluate = 103;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequestOrBuilder> 
          getEvaluateFieldBuilder() {
        if (evaluateBuilder_ == null) {
          if (!(payloadCase_ == 103)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.getDefaultInstance();
          }
          evaluateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequestOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 103;
        onChanged();;
        return evaluateBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequestOrBuilder> listFramesBuilder_;
      /**
       * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
       */
      public boolean hasListFrames() {
        return payloadCase_ == 104;
      }
      /**
       * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest getListFrames() {
        if (listFramesBuilder_ == null) {
          if (payloadCase_ == 104) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.getDefaultInstance();
        } else {
          if (payloadCase_ == 104) {
            return listFramesBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
       */
      public Builder setListFrames(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest value) {
        if (listFramesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          listFramesBuilder_.setMessage(value);
        }
        payloadCase_ = 104;
        return this;
      }
      /**
       * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
       */
      public Builder setListFrames(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.Builder builderForValue) {
        if (listFramesBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          listFramesBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 104;
        return this;
      }
      /**
       * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
       */
      public Builder mergeListFrames(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest value) {
        if (listFramesBuilder_ == null) {
          if (payloadCase_ == 104 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 104) {
            listFramesBuilder_.mergeFrom(value);
          }
          listFramesBuilder_.setMessage(value);
        }
        payloadCase_ = 104;
        return this;
      }
      /**
       * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
       */
      public Builder clearListFrames() {
        if (listFramesBuilder_ == null) {
          if (payloadCase_ == 104) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 104) {
            payloadCase_ = 0;
            payload_ = null;
          }
          listFramesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.Builder getListFramesBuilder() {
        return getListFramesFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequestOrBuilder getListFramesOrBuilder() {
        if ((payloadCase_ == 104) && (listFramesBuilder_ != null)) {
          return listFramesBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 104) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.ListFramesRequest list_frames = 104;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequestOrBuilder> 
          getListFramesFieldBuilder() {
        if (listFramesBuilder_ == null) {
          if (!(payloadCase_ == 104)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.getDefaultInstance();
          }
          listFramesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequestOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 104;
        onChanged();;
        return listFramesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequestOrBuilder> startDebuggingBuilder_;
      /**
       * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
       */
      public boolean hasStartDebugging() {
        return payloadCase_ == 105;
      }
      /**
       * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest getStartDebugging() {
        if (startDebuggingBuilder_ == null) {
          if (payloadCase_ == 105) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.getDefaultInstance();
        } else {
          if (payloadCase_ == 105) {
            return startDebuggingBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
       */
      public Builder setStartDebugging(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest value) {
        if (startDebuggingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          startDebuggingBuilder_.setMessage(value);
        }
        payloadCase_ = 105;
        return this;
      }
      /**
       * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
       */
      public Builder setStartDebugging(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.Builder builderForValue) {
        if (startDebuggingBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          startDebuggingBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 105;
        return this;
      }
      /**
       * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
       */
      public Builder mergeStartDebugging(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest value) {
        if (startDebuggingBuilder_ == null) {
          if (payloadCase_ == 105 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 105) {
            startDebuggingBuilder_.mergeFrom(value);
          }
          startDebuggingBuilder_.setMessage(value);
        }
        payloadCase_ = 105;
        return this;
      }
      /**
       * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
       */
      public Builder clearStartDebugging() {
        if (startDebuggingBuilder_ == null) {
          if (payloadCase_ == 105) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 105) {
            payloadCase_ = 0;
            payload_ = null;
          }
          startDebuggingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.Builder getStartDebuggingBuilder() {
        return getStartDebuggingFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequestOrBuilder getStartDebuggingOrBuilder() {
        if ((payloadCase_ == 105) && (startDebuggingBuilder_ != null)) {
          return startDebuggingBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 105) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.StartDebuggingRequest start_debugging = 105;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequestOrBuilder> 
          getStartDebuggingFieldBuilder() {
        if (startDebuggingBuilder_ == null) {
          if (!(payloadCase_ == 105)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.getDefaultInstance();
          }
          startDebuggingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequestOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 105;
        onChanged();;
        return startDebuggingBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequestOrBuilder> pauseThreadBuilder_;
      /**
       * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
       */
      public boolean hasPauseThread() {
        return payloadCase_ == 106;
      }
      /**
       * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest getPauseThread() {
        if (pauseThreadBuilder_ == null) {
          if (payloadCase_ == 106) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.getDefaultInstance();
        } else {
          if (payloadCase_ == 106) {
            return pauseThreadBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
       */
      public Builder setPauseThread(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest value) {
        if (pauseThreadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          pauseThreadBuilder_.setMessage(value);
        }
        payloadCase_ = 106;
        return this;
      }
      /**
       * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
       */
      public Builder setPauseThread(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.Builder builderForValue) {
        if (pauseThreadBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          pauseThreadBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 106;
        return this;
      }
      /**
       * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
       */
      public Builder mergePauseThread(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest value) {
        if (pauseThreadBuilder_ == null) {
          if (payloadCase_ == 106 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 106) {
            pauseThreadBuilder_.mergeFrom(value);
          }
          pauseThreadBuilder_.setMessage(value);
        }
        payloadCase_ = 106;
        return this;
      }
      /**
       * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
       */
      public Builder clearPauseThread() {
        if (pauseThreadBuilder_ == null) {
          if (payloadCase_ == 106) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 106) {
            payloadCase_ = 0;
            payload_ = null;
          }
          pauseThreadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.Builder getPauseThreadBuilder() {
        return getPauseThreadFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequestOrBuilder getPauseThreadOrBuilder() {
        if ((payloadCase_ == 106) && (pauseThreadBuilder_ != null)) {
          return pauseThreadBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 106) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.PauseThreadRequest pause_thread = 106;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequestOrBuilder> 
          getPauseThreadFieldBuilder() {
        if (pauseThreadBuilder_ == null) {
          if (!(payloadCase_ == 106)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.getDefaultInstance();
          }
          pauseThreadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequestOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 106;
        onChanged();;
        return pauseThreadBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequestOrBuilder> getChildrenBuilder_;
      /**
       * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
       */
      public boolean hasGetChildren() {
        return payloadCase_ == 107;
      }
      /**
       * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest getGetChildren() {
        if (getChildrenBuilder_ == null) {
          if (payloadCase_ == 107) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.getDefaultInstance();
        } else {
          if (payloadCase_ == 107) {
            return getChildrenBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
       */
      public Builder setGetChildren(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest value) {
        if (getChildrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          getChildrenBuilder_.setMessage(value);
        }
        payloadCase_ = 107;
        return this;
      }
      /**
       * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
       */
      public Builder setGetChildren(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.Builder builderForValue) {
        if (getChildrenBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          getChildrenBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 107;
        return this;
      }
      /**
       * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
       */
      public Builder mergeGetChildren(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest value) {
        if (getChildrenBuilder_ == null) {
          if (payloadCase_ == 107 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 107) {
            getChildrenBuilder_.mergeFrom(value);
          }
          getChildrenBuilder_.setMessage(value);
        }
        payloadCase_ = 107;
        return this;
      }
      /**
       * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
       */
      public Builder clearGetChildren() {
        if (getChildrenBuilder_ == null) {
          if (payloadCase_ == 107) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 107) {
            payloadCase_ = 0;
            payload_ = null;
          }
          getChildrenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.Builder getGetChildrenBuilder() {
        return getGetChildrenFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequestOrBuilder getGetChildrenOrBuilder() {
        if ((payloadCase_ == 107) && (getChildrenBuilder_ != null)) {
          return getChildrenBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 107) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.GetChildrenRequest get_children = 107;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequestOrBuilder> 
          getGetChildrenFieldBuilder() {
        if (getChildrenBuilder_ == null) {
          if (!(payloadCase_ == 107)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.getDefaultInstance();
          }
          getChildrenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequestOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 107;
        onChanged();;
        return getChildrenBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.DebugRequest)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.DebugRequest)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DebugRequest>
        PARSER = new com.google.protobuf.AbstractParser<DebugRequest>() {
      @java.lang.Override
      public DebugRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DebugRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SetBreakpointsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.SetBreakpointsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The breakpoints that describe where the debug server should pause
     * evaluation.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
     */
    java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint> 
        getBreakpointList();
    /**
     * <pre>
     * The breakpoints that describe where the debug server should pause
     * evaluation.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint getBreakpoint(int index);
    /**
     * <pre>
     * The breakpoints that describe where the debug server should pause
     * evaluation.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
     */
    int getBreakpointCount();
    /**
     * <pre>
     * The breakpoints that describe where the debug server should pause
     * evaluation.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
     */
    java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.BreakpointOrBuilder> 
        getBreakpointOrBuilderList();
    /**
     * <pre>
     * The breakpoints that describe where the debug server should pause
     * evaluation.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.BreakpointOrBuilder getBreakpointOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A request to update the breakpoints used by the debug server.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.SetBreakpointsRequest}
   */
  public  static final class SetBreakpointsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.SetBreakpointsRequest)
      SetBreakpointsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SetBreakpointsRequest.newBuilder() to construct.
    private SetBreakpointsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SetBreakpointsRequest() {
      breakpoint_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SetBreakpointsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                breakpoint_ = new java.util.ArrayList<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint>();
                mutable_bitField0_ |= 0x00000001;
              }
              breakpoint_.add(
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          breakpoint_ = java.util.Collections.unmodifiableList(breakpoint_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_SetBreakpointsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_SetBreakpointsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.Builder.class);
    }

    public static final int BREAKPOINT_FIELD_NUMBER = 1;
    private java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint> breakpoint_;
    /**
     * <pre>
     * The breakpoints that describe where the debug server should pause
     * evaluation.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
     */
    public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint> getBreakpointList() {
      return breakpoint_;
    }
    /**
     * <pre>
     * The breakpoints that describe where the debug server should pause
     * evaluation.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
     */
    public java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.BreakpointOrBuilder> 
        getBreakpointOrBuilderList() {
      return breakpoint_;
    }
    /**
     * <pre>
     * The breakpoints that describe where the debug server should pause
     * evaluation.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
     */
    public int getBreakpointCount() {
      return breakpoint_.size();
    }
    /**
     * <pre>
     * The breakpoints that describe where the debug server should pause
     * evaluation.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint getBreakpoint(int index) {
      return breakpoint_.get(index);
    }
    /**
     * <pre>
     * The breakpoints that describe where the debug server should pause
     * evaluation.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.BreakpointOrBuilder getBreakpointOrBuilder(
        int index) {
      return breakpoint_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < breakpoint_.size(); i++) {
        output.writeMessage(1, breakpoint_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < breakpoint_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, breakpoint_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) obj;

      boolean result = true;
      result = result && getBreakpointList()
          .equals(other.getBreakpointList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getBreakpointCount() > 0) {
        hash = (37 * hash) + BREAKPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getBreakpointList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A request to update the breakpoints used by the debug server.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.SetBreakpointsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.SetBreakpointsRequest)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_SetBreakpointsRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_SetBreakpointsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBreakpointFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (breakpointBuilder_ == null) {
          breakpoint_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          breakpointBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_SetBreakpointsRequest_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest(this);
        int from_bitField0_ = bitField0_;
        if (breakpointBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            breakpoint_ = java.util.Collections.unmodifiableList(breakpoint_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.breakpoint_ = breakpoint_;
        } else {
          result.breakpoint_ = breakpointBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest.getDefaultInstance()) return this;
        if (breakpointBuilder_ == null) {
          if (!other.breakpoint_.isEmpty()) {
            if (breakpoint_.isEmpty()) {
              breakpoint_ = other.breakpoint_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBreakpointIsMutable();
              breakpoint_.addAll(other.breakpoint_);
            }
            onChanged();
          }
        } else {
          if (!other.breakpoint_.isEmpty()) {
            if (breakpointBuilder_.isEmpty()) {
              breakpointBuilder_.dispose();
              breakpointBuilder_ = null;
              breakpoint_ = other.breakpoint_;
              bitField0_ = (bitField0_ & ~0x00000001);
              breakpointBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBreakpointFieldBuilder() : null;
            } else {
              breakpointBuilder_.addAllMessages(other.breakpoint_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint> breakpoint_ =
        java.util.Collections.emptyList();
      private void ensureBreakpointIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          breakpoint_ = new java.util.ArrayList<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint>(breakpoint_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.BreakpointOrBuilder> breakpointBuilder_;

      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint> getBreakpointList() {
        if (breakpointBuilder_ == null) {
          return java.util.Collections.unmodifiableList(breakpoint_);
        } else {
          return breakpointBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public int getBreakpointCount() {
        if (breakpointBuilder_ == null) {
          return breakpoint_.size();
        } else {
          return breakpointBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint getBreakpoint(int index) {
        if (breakpointBuilder_ == null) {
          return breakpoint_.get(index);
        } else {
          return breakpointBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public Builder setBreakpoint(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint value) {
        if (breakpointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBreakpointIsMutable();
          breakpoint_.set(index, value);
          onChanged();
        } else {
          breakpointBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public Builder setBreakpoint(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.Builder builderForValue) {
        if (breakpointBuilder_ == null) {
          ensureBreakpointIsMutable();
          breakpoint_.set(index, builderForValue.build());
          onChanged();
        } else {
          breakpointBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public Builder addBreakpoint(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint value) {
        if (breakpointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBreakpointIsMutable();
          breakpoint_.add(value);
          onChanged();
        } else {
          breakpointBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public Builder addBreakpoint(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint value) {
        if (breakpointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBreakpointIsMutable();
          breakpoint_.add(index, value);
          onChanged();
        } else {
          breakpointBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public Builder addBreakpoint(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.Builder builderForValue) {
        if (breakpointBuilder_ == null) {
          ensureBreakpointIsMutable();
          breakpoint_.add(builderForValue.build());
          onChanged();
        } else {
          breakpointBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public Builder addBreakpoint(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.Builder builderForValue) {
        if (breakpointBuilder_ == null) {
          ensureBreakpointIsMutable();
          breakpoint_.add(index, builderForValue.build());
          onChanged();
        } else {
          breakpointBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public Builder addAllBreakpoint(
          java.lang.Iterable<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint> values) {
        if (breakpointBuilder_ == null) {
          ensureBreakpointIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, breakpoint_);
          onChanged();
        } else {
          breakpointBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public Builder clearBreakpoint() {
        if (breakpointBuilder_ == null) {
          breakpoint_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          breakpointBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public Builder removeBreakpoint(int index) {
        if (breakpointBuilder_ == null) {
          ensureBreakpointIsMutable();
          breakpoint_.remove(index);
          onChanged();
        } else {
          breakpointBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.Builder getBreakpointBuilder(
          int index) {
        return getBreakpointFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.BreakpointOrBuilder getBreakpointOrBuilder(
          int index) {
        if (breakpointBuilder_ == null) {
          return breakpoint_.get(index);  } else {
          return breakpointBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.BreakpointOrBuilder> 
           getBreakpointOrBuilderList() {
        if (breakpointBuilder_ != null) {
          return breakpointBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(breakpoint_);
        }
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.Builder addBreakpointBuilder() {
        return getBreakpointFieldBuilder().addBuilder(
            com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.getDefaultInstance());
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.Builder addBreakpointBuilder(
          int index) {
        return getBreakpointFieldBuilder().addBuilder(
            index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.getDefaultInstance());
      }
      /**
       * <pre>
       * The breakpoints that describe where the debug server should pause
       * evaluation.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Breakpoint breakpoint = 1;</code>
       */
      public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.Builder> 
           getBreakpointBuilderList() {
        return getBreakpointFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.BreakpointOrBuilder> 
          getBreakpointFieldBuilder() {
        if (breakpointBuilder_ == null) {
          breakpointBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.BreakpointOrBuilder>(
                  breakpoint_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          breakpoint_ = null;
        }
        return breakpointBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.SetBreakpointsRequest)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.SetBreakpointsRequest)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SetBreakpointsRequest>
        PARSER = new com.google.protobuf.AbstractParser<SetBreakpointsRequest>() {
      @java.lang.Override
      public SetBreakpointsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetBreakpointsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SetBreakpointsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SetBreakpointsRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ContinueExecutionRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.ContinueExecutionRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 thread_id = 1;</code>
     */
    long getThreadId();

    /**
     * <pre>
     * Describes the stepping behavior to use when continuing execution.
     * </pre>
     *
     * <code>.skylark_debugging.Stepping stepping = 2;</code>
     */
    int getSteppingValue();
    /**
     * <pre>
     * Describes the stepping behavior to use when continuing execution.
     * </pre>
     *
     * <code>.skylark_debugging.Stepping stepping = 2;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Stepping getStepping();
  }
  /**
   * <pre>
   * A request to continue execution on a paused or stepping thread. (A stepping
   * thread is a thread that is running as the result of a previous
   * ContinueExecutionRequest with non-NONE stepping.)
   * A paused thread will be resumed with the given stepping, unless thread_id is
   * 0. A stepping thread will continue to run with its stepping condition
   * removed, as if it were already paused.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.ContinueExecutionRequest}
   */
  public  static final class ContinueExecutionRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.ContinueExecutionRequest)
      ContinueExecutionRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContinueExecutionRequest.newBuilder() to construct.
    private ContinueExecutionRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContinueExecutionRequest() {
      threadId_ = 0L;
      stepping_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ContinueExecutionRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              threadId_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              stepping_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ContinueExecutionRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ContinueExecutionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.Builder.class);
    }

    public static final int THREAD_ID_FIELD_NUMBER = 1;
    private long threadId_;
    /**
     * <code>int64 thread_id = 1;</code>
     */
    public long getThreadId() {
      return threadId_;
    }

    public static final int STEPPING_FIELD_NUMBER = 2;
    private int stepping_;
    /**
     * <pre>
     * Describes the stepping behavior to use when continuing execution.
     * </pre>
     *
     * <code>.skylark_debugging.Stepping stepping = 2;</code>
     */
    public int getSteppingValue() {
      return stepping_;
    }
    /**
     * <pre>
     * Describes the stepping behavior to use when continuing execution.
     * </pre>
     *
     * <code>.skylark_debugging.Stepping stepping = 2;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Stepping getStepping() {
      @SuppressWarnings("deprecation")
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Stepping result = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Stepping.valueOf(stepping_);
      return result == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Stepping.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (threadId_ != 0L) {
        output.writeInt64(1, threadId_);
      }
      if (stepping_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Stepping.NONE.getNumber()) {
        output.writeEnum(2, stepping_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (threadId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, threadId_);
      }
      if (stepping_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Stepping.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, stepping_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) obj;

      boolean result = true;
      result = result && (getThreadId()
          == other.getThreadId());
      result = result && stepping_ == other.stepping_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + THREAD_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getThreadId());
      hash = (37 * hash) + STEPPING_FIELD_NUMBER;
      hash = (53 * hash) + stepping_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A request to continue execution on a paused or stepping thread. (A stepping
     * thread is a thread that is running as the result of a previous
     * ContinueExecutionRequest with non-NONE stepping.)
     * A paused thread will be resumed with the given stepping, unless thread_id is
     * 0. A stepping thread will continue to run with its stepping condition
     * removed, as if it were already paused.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.ContinueExecutionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.ContinueExecutionRequest)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ContinueExecutionRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ContinueExecutionRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        threadId_ = 0L;

        stepping_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ContinueExecutionRequest_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest(this);
        result.threadId_ = threadId_;
        result.stepping_ = stepping_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest.getDefaultInstance()) return this;
        if (other.getThreadId() != 0L) {
          setThreadId(other.getThreadId());
        }
        if (other.stepping_ != 0) {
          setSteppingValue(other.getSteppingValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long threadId_ ;
      /**
       * <code>int64 thread_id = 1;</code>
       */
      public long getThreadId() {
        return threadId_;
      }
      /**
       * <code>int64 thread_id = 1;</code>
       */
      public Builder setThreadId(long value) {
        
        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 thread_id = 1;</code>
       */
      public Builder clearThreadId() {
        
        threadId_ = 0L;
        onChanged();
        return this;
      }

      private int stepping_ = 0;
      /**
       * <pre>
       * Describes the stepping behavior to use when continuing execution.
       * </pre>
       *
       * <code>.skylark_debugging.Stepping stepping = 2;</code>
       */
      public int getSteppingValue() {
        return stepping_;
      }
      /**
       * <pre>
       * Describes the stepping behavior to use when continuing execution.
       * </pre>
       *
       * <code>.skylark_debugging.Stepping stepping = 2;</code>
       */
      public Builder setSteppingValue(int value) {
        stepping_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the stepping behavior to use when continuing execution.
       * </pre>
       *
       * <code>.skylark_debugging.Stepping stepping = 2;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Stepping getStepping() {
        @SuppressWarnings("deprecation")
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Stepping result = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Stepping.valueOf(stepping_);
        return result == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Stepping.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Describes the stepping behavior to use when continuing execution.
       * </pre>
       *
       * <code>.skylark_debugging.Stepping stepping = 2;</code>
       */
      public Builder setStepping(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Stepping value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        stepping_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the stepping behavior to use when continuing execution.
       * </pre>
       *
       * <code>.skylark_debugging.Stepping stepping = 2;</code>
       */
      public Builder clearStepping() {
        
        stepping_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.ContinueExecutionRequest)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.ContinueExecutionRequest)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ContinueExecutionRequest>
        PARSER = new com.google.protobuf.AbstractParser<ContinueExecutionRequest>() {
      @java.lang.Override
      public ContinueExecutionRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ContinueExecutionRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ContinueExecutionRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContinueExecutionRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EvaluateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.EvaluateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The identifier of the thread in whose execution context the expression
     * should be evaluated.
     * </pre>
     *
     * <code>int64 thread_id = 1;</code>
     */
    long getThreadId();

    /**
     * <pre>
     * The Skylark statement to evaluate.
     * </pre>
     *
     * <code>string statement = 2;</code>
     */
    java.lang.String getStatement();
    /**
     * <pre>
     * The Skylark statement to evaluate.
     * </pre>
     *
     * <code>string statement = 2;</code>
     */
    com.google.protobuf.ByteString
        getStatementBytes();
  }
  /**
   * <pre>
   * A request to evaluate a Skylark statement in a thread's current environment.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.EvaluateRequest}
   */
  public  static final class EvaluateRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.EvaluateRequest)
      EvaluateRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EvaluateRequest.newBuilder() to construct.
    private EvaluateRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EvaluateRequest() {
      threadId_ = 0L;
      statement_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EvaluateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              threadId_ = input.readInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              statement_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_EvaluateRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_EvaluateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.Builder.class);
    }

    public static final int THREAD_ID_FIELD_NUMBER = 1;
    private long threadId_;
    /**
     * <pre>
     * The identifier of the thread in whose execution context the expression
     * should be evaluated.
     * </pre>
     *
     * <code>int64 thread_id = 1;</code>
     */
    public long getThreadId() {
      return threadId_;
    }

    public static final int STATEMENT_FIELD_NUMBER = 2;
    private volatile java.lang.Object statement_;
    /**
     * <pre>
     * The Skylark statement to evaluate.
     * </pre>
     *
     * <code>string statement = 2;</code>
     */
    public java.lang.String getStatement() {
      java.lang.Object ref = statement_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        statement_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The Skylark statement to evaluate.
     * </pre>
     *
     * <code>string statement = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStatementBytes() {
      java.lang.Object ref = statement_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        statement_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (threadId_ != 0L) {
        output.writeInt64(1, threadId_);
      }
      if (!getStatementBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, statement_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (threadId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, threadId_);
      }
      if (!getStatementBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, statement_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) obj;

      boolean result = true;
      result = result && (getThreadId()
          == other.getThreadId());
      result = result && getStatement()
          .equals(other.getStatement());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + THREAD_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getThreadId());
      hash = (37 * hash) + STATEMENT_FIELD_NUMBER;
      hash = (53 * hash) + getStatement().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A request to evaluate a Skylark statement in a thread's current environment.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.EvaluateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.EvaluateRequest)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_EvaluateRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_EvaluateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        threadId_ = 0L;

        statement_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_EvaluateRequest_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest(this);
        result.threadId_ = threadId_;
        result.statement_ = statement_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest.getDefaultInstance()) return this;
        if (other.getThreadId() != 0L) {
          setThreadId(other.getThreadId());
        }
        if (!other.getStatement().isEmpty()) {
          statement_ = other.statement_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long threadId_ ;
      /**
       * <pre>
       * The identifier of the thread in whose execution context the expression
       * should be evaluated.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public long getThreadId() {
        return threadId_;
      }
      /**
       * <pre>
       * The identifier of the thread in whose execution context the expression
       * should be evaluated.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public Builder setThreadId(long value) {
        
        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The identifier of the thread in whose execution context the expression
       * should be evaluated.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public Builder clearThreadId() {
        
        threadId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object statement_ = "";
      /**
       * <pre>
       * The Skylark statement to evaluate.
       * </pre>
       *
       * <code>string statement = 2;</code>
       */
      public java.lang.String getStatement() {
        java.lang.Object ref = statement_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          statement_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The Skylark statement to evaluate.
       * </pre>
       *
       * <code>string statement = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStatementBytes() {
        java.lang.Object ref = statement_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          statement_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The Skylark statement to evaluate.
       * </pre>
       *
       * <code>string statement = 2;</code>
       */
      public Builder setStatement(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        statement_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Skylark statement to evaluate.
       * </pre>
       *
       * <code>string statement = 2;</code>
       */
      public Builder clearStatement() {
        
        statement_ = getDefaultInstance().getStatement();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Skylark statement to evaluate.
       * </pre>
       *
       * <code>string statement = 2;</code>
       */
      public Builder setStatementBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        statement_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.EvaluateRequest)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.EvaluateRequest)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EvaluateRequest>
        PARSER = new com.google.protobuf.AbstractParser<EvaluateRequest>() {
      @java.lang.Override
      public EvaluateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EvaluateRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EvaluateRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EvaluateRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ListFramesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.ListFramesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The identifier of the thread whose stack frames should be listed.
     * </pre>
     *
     * <code>int64 thread_id = 1;</code>
     */
    long getThreadId();
  }
  /**
   * <pre>
   * A request to list the stack frames of a thread.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.ListFramesRequest}
   */
  public  static final class ListFramesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.ListFramesRequest)
      ListFramesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListFramesRequest.newBuilder() to construct.
    private ListFramesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListFramesRequest() {
      threadId_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ListFramesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              threadId_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ListFramesRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ListFramesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.Builder.class);
    }

    public static final int THREAD_ID_FIELD_NUMBER = 1;
    private long threadId_;
    /**
     * <pre>
     * The identifier of the thread whose stack frames should be listed.
     * </pre>
     *
     * <code>int64 thread_id = 1;</code>
     */
    public long getThreadId() {
      return threadId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (threadId_ != 0L) {
        output.writeInt64(1, threadId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (threadId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, threadId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) obj;

      boolean result = true;
      result = result && (getThreadId()
          == other.getThreadId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + THREAD_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getThreadId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A request to list the stack frames of a thread.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.ListFramesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.ListFramesRequest)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ListFramesRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ListFramesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        threadId_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ListFramesRequest_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest(this);
        result.threadId_ = threadId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest.getDefaultInstance()) return this;
        if (other.getThreadId() != 0L) {
          setThreadId(other.getThreadId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long threadId_ ;
      /**
       * <pre>
       * The identifier of the thread whose stack frames should be listed.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public long getThreadId() {
        return threadId_;
      }
      /**
       * <pre>
       * The identifier of the thread whose stack frames should be listed.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public Builder setThreadId(long value) {
        
        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The identifier of the thread whose stack frames should be listed.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public Builder clearThreadId() {
        
        threadId_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.ListFramesRequest)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.ListFramesRequest)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListFramesRequest>
        PARSER = new com.google.protobuf.AbstractParser<ListFramesRequest>() {
      @java.lang.Override
      public ListFramesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ListFramesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ListFramesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListFramesRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StartDebuggingRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.StartDebuggingRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * A request to begin the debugging session. Skylark execution will block until
   * this request is made, to allow initial setup after the connection is
   * established (e.g. setting breakpoints).
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.StartDebuggingRequest}
   */
  public  static final class StartDebuggingRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.StartDebuggingRequest)
      StartDebuggingRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StartDebuggingRequest.newBuilder() to construct.
    private StartDebuggingRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StartDebuggingRequest() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StartDebuggingRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_StartDebuggingRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_StartDebuggingRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A request to begin the debugging session. Skylark execution will block until
     * this request is made, to allow initial setup after the connection is
     * established (e.g. setting breakpoints).
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.StartDebuggingRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.StartDebuggingRequest)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_StartDebuggingRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_StartDebuggingRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_StartDebuggingRequest_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.StartDebuggingRequest)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.StartDebuggingRequest)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StartDebuggingRequest>
        PARSER = new com.google.protobuf.AbstractParser<StartDebuggingRequest>() {
      @java.lang.Override
      public StartDebuggingRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StartDebuggingRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StartDebuggingRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StartDebuggingRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PauseThreadRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.PauseThreadRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The identifier of the thread to be paused.
     * If not set (i.e. zero), all current Skylark threads will be paused, and
     * until a ContinueExecutionRequest is sent, any future Skylark threads will
     * also start off paused.
     * </pre>
     *
     * <code>int64 thread_id = 1;</code>
     */
    long getThreadId();
  }
  /**
   * <pre>
   * A request to pause execution of a thread, or all threads.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.PauseThreadRequest}
   */
  public  static final class PauseThreadRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.PauseThreadRequest)
      PauseThreadRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PauseThreadRequest.newBuilder() to construct.
    private PauseThreadRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PauseThreadRequest() {
      threadId_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PauseThreadRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              threadId_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PauseThreadRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PauseThreadRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.Builder.class);
    }

    public static final int THREAD_ID_FIELD_NUMBER = 1;
    private long threadId_;
    /**
     * <pre>
     * The identifier of the thread to be paused.
     * If not set (i.e. zero), all current Skylark threads will be paused, and
     * until a ContinueExecutionRequest is sent, any future Skylark threads will
     * also start off paused.
     * </pre>
     *
     * <code>int64 thread_id = 1;</code>
     */
    public long getThreadId() {
      return threadId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (threadId_ != 0L) {
        output.writeInt64(1, threadId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (threadId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, threadId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) obj;

      boolean result = true;
      result = result && (getThreadId()
          == other.getThreadId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + THREAD_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getThreadId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A request to pause execution of a thread, or all threads.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.PauseThreadRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.PauseThreadRequest)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PauseThreadRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PauseThreadRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        threadId_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PauseThreadRequest_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest(this);
        result.threadId_ = threadId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest.getDefaultInstance()) return this;
        if (other.getThreadId() != 0L) {
          setThreadId(other.getThreadId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long threadId_ ;
      /**
       * <pre>
       * The identifier of the thread to be paused.
       * If not set (i.e. zero), all current Skylark threads will be paused, and
       * until a ContinueExecutionRequest is sent, any future Skylark threads will
       * also start off paused.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public long getThreadId() {
        return threadId_;
      }
      /**
       * <pre>
       * The identifier of the thread to be paused.
       * If not set (i.e. zero), all current Skylark threads will be paused, and
       * until a ContinueExecutionRequest is sent, any future Skylark threads will
       * also start off paused.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public Builder setThreadId(long value) {
        
        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The identifier of the thread to be paused.
       * If not set (i.e. zero), all current Skylark threads will be paused, and
       * until a ContinueExecutionRequest is sent, any future Skylark threads will
       * also start off paused.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public Builder clearThreadId() {
        
        threadId_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.PauseThreadRequest)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.PauseThreadRequest)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PauseThreadRequest>
        PARSER = new com.google.protobuf.AbstractParser<PauseThreadRequest>() {
      @java.lang.Override
      public PauseThreadRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PauseThreadRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PauseThreadRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PauseThreadRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetChildrenRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.GetChildrenRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The identifier of the relevant thread.
     * </pre>
     *
     * <code>int64 thread_id = 1;</code>
     */
    long getThreadId();

    /**
     * <pre>
     * The identifier of the value for which children are being requested. If the
     * value has no children, an empty list will be returned in
     * GetChildrenResponse.
     * </pre>
     *
     * <code>int64 value_id = 2;</code>
     */
    long getValueId();
  }
  /**
   * <pre>
   * A request to list the children of a previously-communicated Value, such as
   * its elements (for a list or dictionary), its fields (for a struct), and so
   * forth.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.GetChildrenRequest}
   */
  public  static final class GetChildrenRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.GetChildrenRequest)
      GetChildrenRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetChildrenRequest.newBuilder() to construct.
    private GetChildrenRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetChildrenRequest() {
      threadId_ = 0L;
      valueId_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetChildrenRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              threadId_ = input.readInt64();
              break;
            }
            case 16: {

              valueId_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_GetChildrenRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_GetChildrenRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.Builder.class);
    }

    public static final int THREAD_ID_FIELD_NUMBER = 1;
    private long threadId_;
    /**
     * <pre>
     * The identifier of the relevant thread.
     * </pre>
     *
     * <code>int64 thread_id = 1;</code>
     */
    public long getThreadId() {
      return threadId_;
    }

    public static final int VALUE_ID_FIELD_NUMBER = 2;
    private long valueId_;
    /**
     * <pre>
     * The identifier of the value for which children are being requested. If the
     * value has no children, an empty list will be returned in
     * GetChildrenResponse.
     * </pre>
     *
     * <code>int64 value_id = 2;</code>
     */
    public long getValueId() {
      return valueId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (threadId_ != 0L) {
        output.writeInt64(1, threadId_);
      }
      if (valueId_ != 0L) {
        output.writeInt64(2, valueId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (threadId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, threadId_);
      }
      if (valueId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, valueId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) obj;

      boolean result = true;
      result = result && (getThreadId()
          == other.getThreadId());
      result = result && (getValueId()
          == other.getValueId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + THREAD_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getThreadId());
      hash = (37 * hash) + VALUE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getValueId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A request to list the children of a previously-communicated Value, such as
     * its elements (for a list or dictionary), its fields (for a struct), and so
     * forth.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.GetChildrenRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.GetChildrenRequest)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_GetChildrenRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_GetChildrenRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        threadId_ = 0L;

        valueId_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_GetChildrenRequest_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest(this);
        result.threadId_ = threadId_;
        result.valueId_ = valueId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest.getDefaultInstance()) return this;
        if (other.getThreadId() != 0L) {
          setThreadId(other.getThreadId());
        }
        if (other.getValueId() != 0L) {
          setValueId(other.getValueId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long threadId_ ;
      /**
       * <pre>
       * The identifier of the relevant thread.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public long getThreadId() {
        return threadId_;
      }
      /**
       * <pre>
       * The identifier of the relevant thread.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public Builder setThreadId(long value) {
        
        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The identifier of the relevant thread.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public Builder clearThreadId() {
        
        threadId_ = 0L;
        onChanged();
        return this;
      }

      private long valueId_ ;
      /**
       * <pre>
       * The identifier of the value for which children are being requested. If the
       * value has no children, an empty list will be returned in
       * GetChildrenResponse.
       * </pre>
       *
       * <code>int64 value_id = 2;</code>
       */
      public long getValueId() {
        return valueId_;
      }
      /**
       * <pre>
       * The identifier of the value for which children are being requested. If the
       * value has no children, an empty list will be returned in
       * GetChildrenResponse.
       * </pre>
       *
       * <code>int64 value_id = 2;</code>
       */
      public Builder setValueId(long value) {
        
        valueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The identifier of the value for which children are being requested. If the
       * value has no children, an empty list will be returned in
       * GetChildrenResponse.
       * </pre>
       *
       * <code>int64 value_id = 2;</code>
       */
      public Builder clearValueId() {
        
        valueId_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.GetChildrenRequest)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.GetChildrenRequest)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetChildrenRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetChildrenRequest>() {
      @java.lang.Override
      public GetChildrenRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetChildrenRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetChildrenRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetChildrenRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.DebugEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * If non-zero, this event is a response to a DebugRequest with the same
     * sequence number.
     * </pre>
     *
     * <code>int64 sequence_number = 1;</code>
     */
    long getSequenceNumber();

    /**
     * <code>.skylark_debugging.Error error = 99;</code>
     */
    boolean hasError();
    /**
     * <code>.skylark_debugging.Error error = 99;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error getError();
    /**
     * <code>.skylark_debugging.Error error = 99;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
     */
    boolean hasSetBreakpoints();
    /**
     * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse getSetBreakpoints();
    /**
     * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponseOrBuilder getSetBreakpointsOrBuilder();

    /**
     * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
     */
    boolean hasContinueExecution();
    /**
     * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse getContinueExecution();
    /**
     * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponseOrBuilder getContinueExecutionOrBuilder();

    /**
     * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
     */
    boolean hasEvaluate();
    /**
     * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse getEvaluate();
    /**
     * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponseOrBuilder getEvaluateOrBuilder();

    /**
     * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
     */
    boolean hasListFrames();
    /**
     * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse getListFrames();
    /**
     * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponseOrBuilder getListFramesOrBuilder();

    /**
     * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
     */
    boolean hasStartDebugging();
    /**
     * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse getStartDebugging();
    /**
     * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponseOrBuilder getStartDebuggingOrBuilder();

    /**
     * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
     */
    boolean hasPauseThread();
    /**
     * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse getPauseThread();
    /**
     * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponseOrBuilder getPauseThreadOrBuilder();

    /**
     * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
     */
    boolean hasGetChildren();
    /**
     * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse getGetChildren();
    /**
     * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponseOrBuilder getGetChildrenOrBuilder();

    /**
     * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
     */
    boolean hasThreadPaused();
    /**
     * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent getThreadPaused();
    /**
     * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEventOrBuilder getThreadPausedOrBuilder();

    /**
     * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
     */
    boolean hasThreadContinued();
    /**
     * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent getThreadContinued();
    /**
     * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEventOrBuilder getThreadContinuedOrBuilder();

    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent.PayloadCase getPayloadCase();
  }
  /**
   * <pre>
   * There are two kinds of events: "responses", which correspond to a
   * DebugRequest sent by the client, and other asynchronous events that may be
   * sent by the server to notify the client of activity in the Skylark code being
   * debugged.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.DebugEvent}
   */
  public  static final class DebugEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.DebugEvent)
      DebugEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DebugEvent.newBuilder() to construct.
    private DebugEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugEvent() {
      sequenceNumber_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              sequenceNumber_ = input.readInt64();
              break;
            }
            case 794: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder subBuilder = null;
              if (payloadCase_ == 99) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 99;
              break;
            }
            case 810: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.Builder subBuilder = null;
              if (payloadCase_ == 101) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 101;
              break;
            }
            case 818: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.Builder subBuilder = null;
              if (payloadCase_ == 102) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 102;
              break;
            }
            case 826: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.Builder subBuilder = null;
              if (payloadCase_ == 103) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 103;
              break;
            }
            case 834: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.Builder subBuilder = null;
              if (payloadCase_ == 104) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 104;
              break;
            }
            case 842: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.Builder subBuilder = null;
              if (payloadCase_ == 105) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 105;
              break;
            }
            case 850: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.Builder subBuilder = null;
              if (payloadCase_ == 106) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 106;
              break;
            }
            case 858: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.Builder subBuilder = null;
              if (payloadCase_ == 107) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 107;
              break;
            }
            case 8010: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.Builder subBuilder = null;
              if (payloadCase_ == 1001) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 1001;
              break;
            }
            case 8018: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.Builder subBuilder = null;
              if (payloadCase_ == 1002) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) payload_).toBuilder();
              }
              payload_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 1002;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_DebugEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_DebugEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent.Builder.class);
    }

    private int payloadCase_ = 0;
    private java.lang.Object payload_;
    public enum PayloadCase
        implements com.google.protobuf.Internal.EnumLite {
      ERROR(99),
      SET_BREAKPOINTS(101),
      CONTINUE_EXECUTION(102),
      EVALUATE(103),
      LIST_FRAMES(104),
      START_DEBUGGING(105),
      PAUSE_THREAD(106),
      GET_CHILDREN(107),
      THREAD_PAUSED(1001),
      THREAD_CONTINUED(1002),
      PAYLOAD_NOT_SET(0);
      private final int value;
      private PayloadCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadCase forNumber(int value) {
        switch (value) {
          case 99: return ERROR;
          case 101: return SET_BREAKPOINTS;
          case 102: return CONTINUE_EXECUTION;
          case 103: return EVALUATE;
          case 104: return LIST_FRAMES;
          case 105: return START_DEBUGGING;
          case 106: return PAUSE_THREAD;
          case 107: return GET_CHILDREN;
          case 1001: return THREAD_PAUSED;
          case 1002: return THREAD_CONTINUED;
          case 0: return PAYLOAD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadCase
    getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    public static final int SEQUENCE_NUMBER_FIELD_NUMBER = 1;
    private long sequenceNumber_;
    /**
     * <pre>
     * If non-zero, this event is a response to a DebugRequest with the same
     * sequence number.
     * </pre>
     *
     * <code>int64 sequence_number = 1;</code>
     */
    public long getSequenceNumber() {
      return sequenceNumber_;
    }

    public static final int ERROR_FIELD_NUMBER = 99;
    /**
     * <code>.skylark_debugging.Error error = 99;</code>
     */
    public boolean hasError() {
      return payloadCase_ == 99;
    }
    /**
     * <code>.skylark_debugging.Error error = 99;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error getError() {
      if (payloadCase_ == 99) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.Error error = 99;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder getErrorOrBuilder() {
      if (payloadCase_ == 99) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.getDefaultInstance();
    }

    public static final int SET_BREAKPOINTS_FIELD_NUMBER = 101;
    /**
     * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
     */
    public boolean hasSetBreakpoints() {
      return payloadCase_ == 101;
    }
    /**
     * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse getSetBreakpoints() {
      if (payloadCase_ == 101) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponseOrBuilder getSetBreakpointsOrBuilder() {
      if (payloadCase_ == 101) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.getDefaultInstance();
    }

    public static final int CONTINUE_EXECUTION_FIELD_NUMBER = 102;
    /**
     * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
     */
    public boolean hasContinueExecution() {
      return payloadCase_ == 102;
    }
    /**
     * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse getContinueExecution() {
      if (payloadCase_ == 102) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponseOrBuilder getContinueExecutionOrBuilder() {
      if (payloadCase_ == 102) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.getDefaultInstance();
    }

    public static final int EVALUATE_FIELD_NUMBER = 103;
    /**
     * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
     */
    public boolean hasEvaluate() {
      return payloadCase_ == 103;
    }
    /**
     * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse getEvaluate() {
      if (payloadCase_ == 103) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponseOrBuilder getEvaluateOrBuilder() {
      if (payloadCase_ == 103) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.getDefaultInstance();
    }

    public static final int LIST_FRAMES_FIELD_NUMBER = 104;
    /**
     * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
     */
    public boolean hasListFrames() {
      return payloadCase_ == 104;
    }
    /**
     * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse getListFrames() {
      if (payloadCase_ == 104) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponseOrBuilder getListFramesOrBuilder() {
      if (payloadCase_ == 104) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.getDefaultInstance();
    }

    public static final int START_DEBUGGING_FIELD_NUMBER = 105;
    /**
     * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
     */
    public boolean hasStartDebugging() {
      return payloadCase_ == 105;
    }
    /**
     * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse getStartDebugging() {
      if (payloadCase_ == 105) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponseOrBuilder getStartDebuggingOrBuilder() {
      if (payloadCase_ == 105) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.getDefaultInstance();
    }

    public static final int PAUSE_THREAD_FIELD_NUMBER = 106;
    /**
     * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
     */
    public boolean hasPauseThread() {
      return payloadCase_ == 106;
    }
    /**
     * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse getPauseThread() {
      if (payloadCase_ == 106) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponseOrBuilder getPauseThreadOrBuilder() {
      if (payloadCase_ == 106) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.getDefaultInstance();
    }

    public static final int GET_CHILDREN_FIELD_NUMBER = 107;
    /**
     * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
     */
    public boolean hasGetChildren() {
      return payloadCase_ == 107;
    }
    /**
     * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse getGetChildren() {
      if (payloadCase_ == 107) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponseOrBuilder getGetChildrenOrBuilder() {
      if (payloadCase_ == 107) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.getDefaultInstance();
    }

    public static final int THREAD_PAUSED_FIELD_NUMBER = 1001;
    /**
     * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
     */
    public boolean hasThreadPaused() {
      return payloadCase_ == 1001;
    }
    /**
     * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent getThreadPaused() {
      if (payloadCase_ == 1001) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEventOrBuilder getThreadPausedOrBuilder() {
      if (payloadCase_ == 1001) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.getDefaultInstance();
    }

    public static final int THREAD_CONTINUED_FIELD_NUMBER = 1002;
    /**
     * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
     */
    public boolean hasThreadContinued() {
      return payloadCase_ == 1002;
    }
    /**
     * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent getThreadContinued() {
      if (payloadCase_ == 1002) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.getDefaultInstance();
    }
    /**
     * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEventOrBuilder getThreadContinuedOrBuilder() {
      if (payloadCase_ == 1002) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) payload_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sequenceNumber_ != 0L) {
        output.writeInt64(1, sequenceNumber_);
      }
      if (payloadCase_ == 99) {
        output.writeMessage(99, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) payload_);
      }
      if (payloadCase_ == 101) {
        output.writeMessage(101, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) payload_);
      }
      if (payloadCase_ == 102) {
        output.writeMessage(102, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) payload_);
      }
      if (payloadCase_ == 103) {
        output.writeMessage(103, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) payload_);
      }
      if (payloadCase_ == 104) {
        output.writeMessage(104, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) payload_);
      }
      if (payloadCase_ == 105) {
        output.writeMessage(105, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) payload_);
      }
      if (payloadCase_ == 106) {
        output.writeMessage(106, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) payload_);
      }
      if (payloadCase_ == 107) {
        output.writeMessage(107, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) payload_);
      }
      if (payloadCase_ == 1001) {
        output.writeMessage(1001, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) payload_);
      }
      if (payloadCase_ == 1002) {
        output.writeMessage(1002, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) payload_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sequenceNumber_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, sequenceNumber_);
      }
      if (payloadCase_ == 99) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(99, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) payload_);
      }
      if (payloadCase_ == 101) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) payload_);
      }
      if (payloadCase_ == 102) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(102, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) payload_);
      }
      if (payloadCase_ == 103) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(103, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) payload_);
      }
      if (payloadCase_ == 104) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(104, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) payload_);
      }
      if (payloadCase_ == 105) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(105, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) payload_);
      }
      if (payloadCase_ == 106) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(106, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) payload_);
      }
      if (payloadCase_ == 107) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(107, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) payload_);
      }
      if (payloadCase_ == 1001) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1001, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) payload_);
      }
      if (payloadCase_ == 1002) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1002, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) payload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent) obj;

      boolean result = true;
      result = result && (getSequenceNumber()
          == other.getSequenceNumber());
      result = result && getPayloadCase().equals(
          other.getPayloadCase());
      if (!result) return false;
      switch (payloadCase_) {
        case 99:
          result = result && getError()
              .equals(other.getError());
          break;
        case 101:
          result = result && getSetBreakpoints()
              .equals(other.getSetBreakpoints());
          break;
        case 102:
          result = result && getContinueExecution()
              .equals(other.getContinueExecution());
          break;
        case 103:
          result = result && getEvaluate()
              .equals(other.getEvaluate());
          break;
        case 104:
          result = result && getListFrames()
              .equals(other.getListFrames());
          break;
        case 105:
          result = result && getStartDebugging()
              .equals(other.getStartDebugging());
          break;
        case 106:
          result = result && getPauseThread()
              .equals(other.getPauseThread());
          break;
        case 107:
          result = result && getGetChildren()
              .equals(other.getGetChildren());
          break;
        case 1001:
          result = result && getThreadPaused()
              .equals(other.getThreadPaused());
          break;
        case 1002:
          result = result && getThreadContinued()
              .equals(other.getThreadContinued());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQUENCE_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSequenceNumber());
      switch (payloadCase_) {
        case 99:
          hash = (37 * hash) + ERROR_FIELD_NUMBER;
          hash = (53 * hash) + getError().hashCode();
          break;
        case 101:
          hash = (37 * hash) + SET_BREAKPOINTS_FIELD_NUMBER;
          hash = (53 * hash) + getSetBreakpoints().hashCode();
          break;
        case 102:
          hash = (37 * hash) + CONTINUE_EXECUTION_FIELD_NUMBER;
          hash = (53 * hash) + getContinueExecution().hashCode();
          break;
        case 103:
          hash = (37 * hash) + EVALUATE_FIELD_NUMBER;
          hash = (53 * hash) + getEvaluate().hashCode();
          break;
        case 104:
          hash = (37 * hash) + LIST_FRAMES_FIELD_NUMBER;
          hash = (53 * hash) + getListFrames().hashCode();
          break;
        case 105:
          hash = (37 * hash) + START_DEBUGGING_FIELD_NUMBER;
          hash = (53 * hash) + getStartDebugging().hashCode();
          break;
        case 106:
          hash = (37 * hash) + PAUSE_THREAD_FIELD_NUMBER;
          hash = (53 * hash) + getPauseThread().hashCode();
          break;
        case 107:
          hash = (37 * hash) + GET_CHILDREN_FIELD_NUMBER;
          hash = (53 * hash) + getGetChildren().hashCode();
          break;
        case 1001:
          hash = (37 * hash) + THREAD_PAUSED_FIELD_NUMBER;
          hash = (53 * hash) + getThreadPaused().hashCode();
          break;
        case 1002:
          hash = (37 * hash) + THREAD_CONTINUED_FIELD_NUMBER;
          hash = (53 * hash) + getThreadContinued().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * There are two kinds of events: "responses", which correspond to a
     * DebugRequest sent by the client, and other asynchronous events that may be
     * sent by the server to notify the client of activity in the Skylark code being
     * debugged.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.DebugEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.DebugEvent)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_DebugEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_DebugEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sequenceNumber_ = 0L;

        payloadCase_ = 0;
        payload_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_DebugEvent_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent(this);
        result.sequenceNumber_ = sequenceNumber_;
        if (payloadCase_ == 99) {
          if (errorBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = errorBuilder_.build();
          }
        }
        if (payloadCase_ == 101) {
          if (setBreakpointsBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = setBreakpointsBuilder_.build();
          }
        }
        if (payloadCase_ == 102) {
          if (continueExecutionBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = continueExecutionBuilder_.build();
          }
        }
        if (payloadCase_ == 103) {
          if (evaluateBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = evaluateBuilder_.build();
          }
        }
        if (payloadCase_ == 104) {
          if (listFramesBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = listFramesBuilder_.build();
          }
        }
        if (payloadCase_ == 105) {
          if (startDebuggingBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = startDebuggingBuilder_.build();
          }
        }
        if (payloadCase_ == 106) {
          if (pauseThreadBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = pauseThreadBuilder_.build();
          }
        }
        if (payloadCase_ == 107) {
          if (getChildrenBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = getChildrenBuilder_.build();
          }
        }
        if (payloadCase_ == 1001) {
          if (threadPausedBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = threadPausedBuilder_.build();
          }
        }
        if (payloadCase_ == 1002) {
          if (threadContinuedBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = threadContinuedBuilder_.build();
          }
        }
        result.payloadCase_ = payloadCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent.getDefaultInstance()) return this;
        if (other.getSequenceNumber() != 0L) {
          setSequenceNumber(other.getSequenceNumber());
        }
        switch (other.getPayloadCase()) {
          case ERROR: {
            mergeError(other.getError());
            break;
          }
          case SET_BREAKPOINTS: {
            mergeSetBreakpoints(other.getSetBreakpoints());
            break;
          }
          case CONTINUE_EXECUTION: {
            mergeContinueExecution(other.getContinueExecution());
            break;
          }
          case EVALUATE: {
            mergeEvaluate(other.getEvaluate());
            break;
          }
          case LIST_FRAMES: {
            mergeListFrames(other.getListFrames());
            break;
          }
          case START_DEBUGGING: {
            mergeStartDebugging(other.getStartDebugging());
            break;
          }
          case PAUSE_THREAD: {
            mergePauseThread(other.getPauseThread());
            break;
          }
          case GET_CHILDREN: {
            mergeGetChildren(other.getGetChildren());
            break;
          }
          case THREAD_PAUSED: {
            mergeThreadPaused(other.getThreadPaused());
            break;
          }
          case THREAD_CONTINUED: {
            mergeThreadContinued(other.getThreadContinued());
            break;
          }
          case PAYLOAD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int payloadCase_ = 0;
      private java.lang.Object payload_;
      public PayloadCase
          getPayloadCase() {
        return PayloadCase.forNumber(
            payloadCase_);
      }

      public Builder clearPayload() {
        payloadCase_ = 0;
        payload_ = null;
        onChanged();
        return this;
      }


      private long sequenceNumber_ ;
      /**
       * <pre>
       * If non-zero, this event is a response to a DebugRequest with the same
       * sequence number.
       * </pre>
       *
       * <code>int64 sequence_number = 1;</code>
       */
      public long getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <pre>
       * If non-zero, this event is a response to a DebugRequest with the same
       * sequence number.
       * </pre>
       *
       * <code>int64 sequence_number = 1;</code>
       */
      public Builder setSequenceNumber(long value) {
        
        sequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If non-zero, this event is a response to a DebugRequest with the same
       * sequence number.
       * </pre>
       *
       * <code>int64 sequence_number = 1;</code>
       */
      public Builder clearSequenceNumber() {
        
        sequenceNumber_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>.skylark_debugging.Error error = 99;</code>
       */
      public boolean hasError() {
        return payloadCase_ == 99;
      }
      /**
       * <code>.skylark_debugging.Error error = 99;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error getError() {
        if (errorBuilder_ == null) {
          if (payloadCase_ == 99) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.getDefaultInstance();
        } else {
          if (payloadCase_ == 99) {
            return errorBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.Error error = 99;</code>
       */
      public Builder setError(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }
        payloadCase_ = 99;
        return this;
      }
      /**
       * <code>.skylark_debugging.Error error = 99;</code>
       */
      public Builder setError(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 99;
        return this;
      }
      /**
       * <code>.skylark_debugging.Error error = 99;</code>
       */
      public Builder mergeError(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error value) {
        if (errorBuilder_ == null) {
          if (payloadCase_ == 99 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 99) {
            errorBuilder_.mergeFrom(value);
          }
          errorBuilder_.setMessage(value);
        }
        payloadCase_ = 99;
        return this;
      }
      /**
       * <code>.skylark_debugging.Error error = 99;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          if (payloadCase_ == 99) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 99) {
            payloadCase_ = 0;
            payload_ = null;
          }
          errorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.Error error = 99;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder getErrorBuilder() {
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.Error error = 99;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder getErrorOrBuilder() {
        if ((payloadCase_ == 99) && (errorBuilder_ != null)) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 99) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.Error error = 99;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          if (!(payloadCase_ == 99)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.getDefaultInstance();
          }
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 99;
        onChanged();;
        return errorBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponseOrBuilder> setBreakpointsBuilder_;
      /**
       * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
       */
      public boolean hasSetBreakpoints() {
        return payloadCase_ == 101;
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse getSetBreakpoints() {
        if (setBreakpointsBuilder_ == null) {
          if (payloadCase_ == 101) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.getDefaultInstance();
        } else {
          if (payloadCase_ == 101) {
            return setBreakpointsBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
       */
      public Builder setSetBreakpoints(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse value) {
        if (setBreakpointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          setBreakpointsBuilder_.setMessage(value);
        }
        payloadCase_ = 101;
        return this;
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
       */
      public Builder setSetBreakpoints(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.Builder builderForValue) {
        if (setBreakpointsBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          setBreakpointsBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 101;
        return this;
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
       */
      public Builder mergeSetBreakpoints(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse value) {
        if (setBreakpointsBuilder_ == null) {
          if (payloadCase_ == 101 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 101) {
            setBreakpointsBuilder_.mergeFrom(value);
          }
          setBreakpointsBuilder_.setMessage(value);
        }
        payloadCase_ = 101;
        return this;
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
       */
      public Builder clearSetBreakpoints() {
        if (setBreakpointsBuilder_ == null) {
          if (payloadCase_ == 101) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 101) {
            payloadCase_ = 0;
            payload_ = null;
          }
          setBreakpointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.Builder getSetBreakpointsBuilder() {
        return getSetBreakpointsFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponseOrBuilder getSetBreakpointsOrBuilder() {
        if ((payloadCase_ == 101) && (setBreakpointsBuilder_ != null)) {
          return setBreakpointsBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 101) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.SetBreakpointsResponse set_breakpoints = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponseOrBuilder> 
          getSetBreakpointsFieldBuilder() {
        if (setBreakpointsBuilder_ == null) {
          if (!(payloadCase_ == 101)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.getDefaultInstance();
          }
          setBreakpointsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponseOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 101;
        onChanged();;
        return setBreakpointsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponseOrBuilder> continueExecutionBuilder_;
      /**
       * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
       */
      public boolean hasContinueExecution() {
        return payloadCase_ == 102;
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse getContinueExecution() {
        if (continueExecutionBuilder_ == null) {
          if (payloadCase_ == 102) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.getDefaultInstance();
        } else {
          if (payloadCase_ == 102) {
            return continueExecutionBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
       */
      public Builder setContinueExecution(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse value) {
        if (continueExecutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          continueExecutionBuilder_.setMessage(value);
        }
        payloadCase_ = 102;
        return this;
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
       */
      public Builder setContinueExecution(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.Builder builderForValue) {
        if (continueExecutionBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          continueExecutionBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 102;
        return this;
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
       */
      public Builder mergeContinueExecution(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse value) {
        if (continueExecutionBuilder_ == null) {
          if (payloadCase_ == 102 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 102) {
            continueExecutionBuilder_.mergeFrom(value);
          }
          continueExecutionBuilder_.setMessage(value);
        }
        payloadCase_ = 102;
        return this;
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
       */
      public Builder clearContinueExecution() {
        if (continueExecutionBuilder_ == null) {
          if (payloadCase_ == 102) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 102) {
            payloadCase_ = 0;
            payload_ = null;
          }
          continueExecutionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.Builder getContinueExecutionBuilder() {
        return getContinueExecutionFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponseOrBuilder getContinueExecutionOrBuilder() {
        if ((payloadCase_ == 102) && (continueExecutionBuilder_ != null)) {
          return continueExecutionBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 102) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.ContinueExecutionResponse continue_execution = 102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponseOrBuilder> 
          getContinueExecutionFieldBuilder() {
        if (continueExecutionBuilder_ == null) {
          if (!(payloadCase_ == 102)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.getDefaultInstance();
          }
          continueExecutionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponseOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 102;
        onChanged();;
        return continueExecutionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponseOrBuilder> evaluateBuilder_;
      /**
       * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
       */
      public boolean hasEvaluate() {
        return payloadCase_ == 103;
      }
      /**
       * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse getEvaluate() {
        if (evaluateBuilder_ == null) {
          if (payloadCase_ == 103) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.getDefaultInstance();
        } else {
          if (payloadCase_ == 103) {
            return evaluateBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
       */
      public Builder setEvaluate(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse value) {
        if (evaluateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          evaluateBuilder_.setMessage(value);
        }
        payloadCase_ = 103;
        return this;
      }
      /**
       * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
       */
      public Builder setEvaluate(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.Builder builderForValue) {
        if (evaluateBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          evaluateBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 103;
        return this;
      }
      /**
       * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
       */
      public Builder mergeEvaluate(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse value) {
        if (evaluateBuilder_ == null) {
          if (payloadCase_ == 103 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 103) {
            evaluateBuilder_.mergeFrom(value);
          }
          evaluateBuilder_.setMessage(value);
        }
        payloadCase_ = 103;
        return this;
      }
      /**
       * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
       */
      public Builder clearEvaluate() {
        if (evaluateBuilder_ == null) {
          if (payloadCase_ == 103) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 103) {
            payloadCase_ = 0;
            payload_ = null;
          }
          evaluateBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.Builder getEvaluateBuilder() {
        return getEvaluateFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponseOrBuilder getEvaluateOrBuilder() {
        if ((payloadCase_ == 103) && (evaluateBuilder_ != null)) {
          return evaluateBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 103) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.EvaluateResponse evaluate = 103;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponseOrBuilder> 
          getEvaluateFieldBuilder() {
        if (evaluateBuilder_ == null) {
          if (!(payloadCase_ == 103)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.getDefaultInstance();
          }
          evaluateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponseOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 103;
        onChanged();;
        return evaluateBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponseOrBuilder> listFramesBuilder_;
      /**
       * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
       */
      public boolean hasListFrames() {
        return payloadCase_ == 104;
      }
      /**
       * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse getListFrames() {
        if (listFramesBuilder_ == null) {
          if (payloadCase_ == 104) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.getDefaultInstance();
        } else {
          if (payloadCase_ == 104) {
            return listFramesBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
       */
      public Builder setListFrames(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse value) {
        if (listFramesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          listFramesBuilder_.setMessage(value);
        }
        payloadCase_ = 104;
        return this;
      }
      /**
       * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
       */
      public Builder setListFrames(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.Builder builderForValue) {
        if (listFramesBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          listFramesBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 104;
        return this;
      }
      /**
       * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
       */
      public Builder mergeListFrames(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse value) {
        if (listFramesBuilder_ == null) {
          if (payloadCase_ == 104 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 104) {
            listFramesBuilder_.mergeFrom(value);
          }
          listFramesBuilder_.setMessage(value);
        }
        payloadCase_ = 104;
        return this;
      }
      /**
       * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
       */
      public Builder clearListFrames() {
        if (listFramesBuilder_ == null) {
          if (payloadCase_ == 104) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 104) {
            payloadCase_ = 0;
            payload_ = null;
          }
          listFramesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.Builder getListFramesBuilder() {
        return getListFramesFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponseOrBuilder getListFramesOrBuilder() {
        if ((payloadCase_ == 104) && (listFramesBuilder_ != null)) {
          return listFramesBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 104) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.ListFramesResponse list_frames = 104;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponseOrBuilder> 
          getListFramesFieldBuilder() {
        if (listFramesBuilder_ == null) {
          if (!(payloadCase_ == 104)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.getDefaultInstance();
          }
          listFramesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponseOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 104;
        onChanged();;
        return listFramesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponseOrBuilder> startDebuggingBuilder_;
      /**
       * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
       */
      public boolean hasStartDebugging() {
        return payloadCase_ == 105;
      }
      /**
       * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse getStartDebugging() {
        if (startDebuggingBuilder_ == null) {
          if (payloadCase_ == 105) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.getDefaultInstance();
        } else {
          if (payloadCase_ == 105) {
            return startDebuggingBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
       */
      public Builder setStartDebugging(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse value) {
        if (startDebuggingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          startDebuggingBuilder_.setMessage(value);
        }
        payloadCase_ = 105;
        return this;
      }
      /**
       * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
       */
      public Builder setStartDebugging(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.Builder builderForValue) {
        if (startDebuggingBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          startDebuggingBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 105;
        return this;
      }
      /**
       * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
       */
      public Builder mergeStartDebugging(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse value) {
        if (startDebuggingBuilder_ == null) {
          if (payloadCase_ == 105 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 105) {
            startDebuggingBuilder_.mergeFrom(value);
          }
          startDebuggingBuilder_.setMessage(value);
        }
        payloadCase_ = 105;
        return this;
      }
      /**
       * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
       */
      public Builder clearStartDebugging() {
        if (startDebuggingBuilder_ == null) {
          if (payloadCase_ == 105) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 105) {
            payloadCase_ = 0;
            payload_ = null;
          }
          startDebuggingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.Builder getStartDebuggingBuilder() {
        return getStartDebuggingFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponseOrBuilder getStartDebuggingOrBuilder() {
        if ((payloadCase_ == 105) && (startDebuggingBuilder_ != null)) {
          return startDebuggingBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 105) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.StartDebuggingResponse start_debugging = 105;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponseOrBuilder> 
          getStartDebuggingFieldBuilder() {
        if (startDebuggingBuilder_ == null) {
          if (!(payloadCase_ == 105)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.getDefaultInstance();
          }
          startDebuggingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponseOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 105;
        onChanged();;
        return startDebuggingBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponseOrBuilder> pauseThreadBuilder_;
      /**
       * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
       */
      public boolean hasPauseThread() {
        return payloadCase_ == 106;
      }
      /**
       * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse getPauseThread() {
        if (pauseThreadBuilder_ == null) {
          if (payloadCase_ == 106) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.getDefaultInstance();
        } else {
          if (payloadCase_ == 106) {
            return pauseThreadBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
       */
      public Builder setPauseThread(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse value) {
        if (pauseThreadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          pauseThreadBuilder_.setMessage(value);
        }
        payloadCase_ = 106;
        return this;
      }
      /**
       * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
       */
      public Builder setPauseThread(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.Builder builderForValue) {
        if (pauseThreadBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          pauseThreadBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 106;
        return this;
      }
      /**
       * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
       */
      public Builder mergePauseThread(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse value) {
        if (pauseThreadBuilder_ == null) {
          if (payloadCase_ == 106 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 106) {
            pauseThreadBuilder_.mergeFrom(value);
          }
          pauseThreadBuilder_.setMessage(value);
        }
        payloadCase_ = 106;
        return this;
      }
      /**
       * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
       */
      public Builder clearPauseThread() {
        if (pauseThreadBuilder_ == null) {
          if (payloadCase_ == 106) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 106) {
            payloadCase_ = 0;
            payload_ = null;
          }
          pauseThreadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.Builder getPauseThreadBuilder() {
        return getPauseThreadFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponseOrBuilder getPauseThreadOrBuilder() {
        if ((payloadCase_ == 106) && (pauseThreadBuilder_ != null)) {
          return pauseThreadBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 106) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.PauseThreadResponse pause_thread = 106;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponseOrBuilder> 
          getPauseThreadFieldBuilder() {
        if (pauseThreadBuilder_ == null) {
          if (!(payloadCase_ == 106)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.getDefaultInstance();
          }
          pauseThreadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponseOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 106;
        onChanged();;
        return pauseThreadBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponseOrBuilder> getChildrenBuilder_;
      /**
       * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
       */
      public boolean hasGetChildren() {
        return payloadCase_ == 107;
      }
      /**
       * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse getGetChildren() {
        if (getChildrenBuilder_ == null) {
          if (payloadCase_ == 107) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.getDefaultInstance();
        } else {
          if (payloadCase_ == 107) {
            return getChildrenBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
       */
      public Builder setGetChildren(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse value) {
        if (getChildrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          getChildrenBuilder_.setMessage(value);
        }
        payloadCase_ = 107;
        return this;
      }
      /**
       * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
       */
      public Builder setGetChildren(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.Builder builderForValue) {
        if (getChildrenBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          getChildrenBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 107;
        return this;
      }
      /**
       * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
       */
      public Builder mergeGetChildren(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse value) {
        if (getChildrenBuilder_ == null) {
          if (payloadCase_ == 107 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 107) {
            getChildrenBuilder_.mergeFrom(value);
          }
          getChildrenBuilder_.setMessage(value);
        }
        payloadCase_ = 107;
        return this;
      }
      /**
       * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
       */
      public Builder clearGetChildren() {
        if (getChildrenBuilder_ == null) {
          if (payloadCase_ == 107) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 107) {
            payloadCase_ = 0;
            payload_ = null;
          }
          getChildrenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.Builder getGetChildrenBuilder() {
        return getGetChildrenFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponseOrBuilder getGetChildrenOrBuilder() {
        if ((payloadCase_ == 107) && (getChildrenBuilder_ != null)) {
          return getChildrenBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 107) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.GetChildrenResponse get_children = 107;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponseOrBuilder> 
          getGetChildrenFieldBuilder() {
        if (getChildrenBuilder_ == null) {
          if (!(payloadCase_ == 107)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.getDefaultInstance();
          }
          getChildrenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponseOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 107;
        onChanged();;
        return getChildrenBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEventOrBuilder> threadPausedBuilder_;
      /**
       * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
       */
      public boolean hasThreadPaused() {
        return payloadCase_ == 1001;
      }
      /**
       * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent getThreadPaused() {
        if (threadPausedBuilder_ == null) {
          if (payloadCase_ == 1001) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.getDefaultInstance();
        } else {
          if (payloadCase_ == 1001) {
            return threadPausedBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
       */
      public Builder setThreadPaused(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent value) {
        if (threadPausedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          threadPausedBuilder_.setMessage(value);
        }
        payloadCase_ = 1001;
        return this;
      }
      /**
       * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
       */
      public Builder setThreadPaused(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.Builder builderForValue) {
        if (threadPausedBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          threadPausedBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 1001;
        return this;
      }
      /**
       * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
       */
      public Builder mergeThreadPaused(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent value) {
        if (threadPausedBuilder_ == null) {
          if (payloadCase_ == 1001 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 1001) {
            threadPausedBuilder_.mergeFrom(value);
          }
          threadPausedBuilder_.setMessage(value);
        }
        payloadCase_ = 1001;
        return this;
      }
      /**
       * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
       */
      public Builder clearThreadPaused() {
        if (threadPausedBuilder_ == null) {
          if (payloadCase_ == 1001) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 1001) {
            payloadCase_ = 0;
            payload_ = null;
          }
          threadPausedBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.Builder getThreadPausedBuilder() {
        return getThreadPausedFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEventOrBuilder getThreadPausedOrBuilder() {
        if ((payloadCase_ == 1001) && (threadPausedBuilder_ != null)) {
          return threadPausedBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 1001) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.ThreadPausedEvent thread_paused = 1001;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEventOrBuilder> 
          getThreadPausedFieldBuilder() {
        if (threadPausedBuilder_ == null) {
          if (!(payloadCase_ == 1001)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.getDefaultInstance();
          }
          threadPausedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEventOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 1001;
        onChanged();;
        return threadPausedBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEventOrBuilder> threadContinuedBuilder_;
      /**
       * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
       */
      public boolean hasThreadContinued() {
        return payloadCase_ == 1002;
      }
      /**
       * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent getThreadContinued() {
        if (threadContinuedBuilder_ == null) {
          if (payloadCase_ == 1002) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.getDefaultInstance();
        } else {
          if (payloadCase_ == 1002) {
            return threadContinuedBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
       */
      public Builder setThreadContinued(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent value) {
        if (threadContinuedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          threadContinuedBuilder_.setMessage(value);
        }
        payloadCase_ = 1002;
        return this;
      }
      /**
       * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
       */
      public Builder setThreadContinued(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.Builder builderForValue) {
        if (threadContinuedBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          threadContinuedBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 1002;
        return this;
      }
      /**
       * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
       */
      public Builder mergeThreadContinued(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent value) {
        if (threadContinuedBuilder_ == null) {
          if (payloadCase_ == 1002 &&
              payload_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.getDefaultInstance()) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 1002) {
            threadContinuedBuilder_.mergeFrom(value);
          }
          threadContinuedBuilder_.setMessage(value);
        }
        payloadCase_ = 1002;
        return this;
      }
      /**
       * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
       */
      public Builder clearThreadContinued() {
        if (threadContinuedBuilder_ == null) {
          if (payloadCase_ == 1002) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 1002) {
            payloadCase_ = 0;
            payload_ = null;
          }
          threadContinuedBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.Builder getThreadContinuedBuilder() {
        return getThreadContinuedFieldBuilder().getBuilder();
      }
      /**
       * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEventOrBuilder getThreadContinuedOrBuilder() {
        if ((payloadCase_ == 1002) && (threadContinuedBuilder_ != null)) {
          return threadContinuedBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 1002) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) payload_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.getDefaultInstance();
        }
      }
      /**
       * <code>.skylark_debugging.ThreadContinuedEvent thread_continued = 1002;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEventOrBuilder> 
          getThreadContinuedFieldBuilder() {
        if (threadContinuedBuilder_ == null) {
          if (!(payloadCase_ == 1002)) {
            payload_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.getDefaultInstance();
          }
          threadContinuedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEventOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 1002;
        onChanged();;
        return threadContinuedBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.DebugEvent)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.DebugEvent)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DebugEvent>
        PARSER = new com.google.protobuf.AbstractParser<DebugEvent>() {
      @java.lang.Override
      public DebugEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DebugEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.DebugEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ErrorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.Error)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A message describing the error that occurred.
     * </pre>
     *
     * <code>string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <pre>
     * A message describing the error that occurred.
     * </pre>
     *
     * <code>string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * <pre>
   * A response that indicates that an error occurred while handling a debugging
   * request.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.Error}
   */
  public  static final class Error extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.Error)
      ErrorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Error.newBuilder() to construct.
    private Error(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Error() {
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Error(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Error_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Error_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder.class);
    }

    public static final int MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object message_;
    /**
     * <pre>
     * A message describing the error that occurred.
     * </pre>
     *
     * <code>string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A message describing the error that occurred.
     * </pre>
     *
     * <code>string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) obj;

      boolean result = true;
      result = result && getMessage()
          .equals(other.getMessage());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A response that indicates that an error occurred while handling a debugging
     * request.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.Error}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.Error)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Error_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Error_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        message_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Error_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error(this);
        result.message_ = message_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <pre>
       * A message describing the error that occurred.
       * </pre>
       *
       * <code>string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A message describing the error that occurred.
       * </pre>
       *
       * <code>string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A message describing the error that occurred.
       * </pre>
       *
       * <code>string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A message describing the error that occurred.
       * </pre>
       *
       * <code>string message = 1;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A message describing the error that occurred.
       * </pre>
       *
       * <code>string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.Error)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.Error)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Error>
        PARSER = new com.google.protobuf.AbstractParser<Error>() {
      @java.lang.Override
      public Error parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Error(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Error> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Error> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SetBreakpointsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.SetBreakpointsResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * The response to a SetBreakpointsRequest.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.SetBreakpointsResponse}
   */
  public  static final class SetBreakpointsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.SetBreakpointsResponse)
      SetBreakpointsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SetBreakpointsResponse.newBuilder() to construct.
    private SetBreakpointsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SetBreakpointsResponse() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SetBreakpointsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_SetBreakpointsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_SetBreakpointsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The response to a SetBreakpointsRequest.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.SetBreakpointsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.SetBreakpointsResponse)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_SetBreakpointsResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_SetBreakpointsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_SetBreakpointsResponse_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.SetBreakpointsResponse)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.SetBreakpointsResponse)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SetBreakpointsResponse>
        PARSER = new com.google.protobuf.AbstractParser<SetBreakpointsResponse>() {
      @java.lang.Override
      public SetBreakpointsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetBreakpointsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SetBreakpointsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SetBreakpointsResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.SetBreakpointsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ContinueExecutionResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.ContinueExecutionResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * The response to a ContinueExecutionRequest.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.ContinueExecutionResponse}
   */
  public  static final class ContinueExecutionResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.ContinueExecutionResponse)
      ContinueExecutionResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContinueExecutionResponse.newBuilder() to construct.
    private ContinueExecutionResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContinueExecutionResponse() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ContinueExecutionResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ContinueExecutionResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ContinueExecutionResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The response to a ContinueExecutionRequest.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.ContinueExecutionResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.ContinueExecutionResponse)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ContinueExecutionResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ContinueExecutionResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ContinueExecutionResponse_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.ContinueExecutionResponse)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.ContinueExecutionResponse)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ContinueExecutionResponse>
        PARSER = new com.google.protobuf.AbstractParser<ContinueExecutionResponse>() {
      @java.lang.Override
      public ContinueExecutionResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ContinueExecutionResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ContinueExecutionResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContinueExecutionResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ContinueExecutionResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EvaluateResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.EvaluateResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The result of evaluating a statement.
     * </pre>
     *
     * <code>.skylark_debugging.Value result = 1;</code>
     */
    boolean hasResult();
    /**
     * <pre>
     * The result of evaluating a statement.
     * </pre>
     *
     * <code>.skylark_debugging.Value result = 1;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value getResult();
    /**
     * <pre>
     * The result of evaluating a statement.
     * </pre>
     *
     * <code>.skylark_debugging.Value result = 1;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder getResultOrBuilder();
  }
  /**
   * <pre>
   * The response to an EvaluateRequest.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.EvaluateResponse}
   */
  public  static final class EvaluateResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.EvaluateResponse)
      EvaluateResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EvaluateResponse.newBuilder() to construct.
    private EvaluateResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EvaluateResponse() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EvaluateResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder subBuilder = null;
              if (result_ != null) {
                subBuilder = result_.toBuilder();
              }
              result_ = input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(result_);
                result_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_EvaluateResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_EvaluateResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value result_;
    /**
     * <pre>
     * The result of evaluating a statement.
     * </pre>
     *
     * <code>.skylark_debugging.Value result = 1;</code>
     */
    public boolean hasResult() {
      return result_ != null;
    }
    /**
     * <pre>
     * The result of evaluating a statement.
     * </pre>
     *
     * <code>.skylark_debugging.Value result = 1;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value getResult() {
      return result_ == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.getDefaultInstance() : result_;
    }
    /**
     * <pre>
     * The result of evaluating a statement.
     * </pre>
     *
     * <code>.skylark_debugging.Value result = 1;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder getResultOrBuilder() {
      return getResult();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != null) {
        output.writeMessage(1, getResult());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResult());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && getResult()
            .equals(other.getResult());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + getResult().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The response to an EvaluateRequest.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.EvaluateResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.EvaluateResponse)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_EvaluateResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_EvaluateResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (resultBuilder_ == null) {
          result_ = null;
        } else {
          result_ = null;
          resultBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_EvaluateResponse_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse(this);
        if (resultBuilder_ == null) {
          result.result_ = result_;
        } else {
          result.result_ = resultBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          mergeResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value result_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder> resultBuilder_;
      /**
       * <pre>
       * The result of evaluating a statement.
       * </pre>
       *
       * <code>.skylark_debugging.Value result = 1;</code>
       */
      public boolean hasResult() {
        return resultBuilder_ != null || result_ != null;
      }
      /**
       * <pre>
       * The result of evaluating a statement.
       * </pre>
       *
       * <code>.skylark_debugging.Value result = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value getResult() {
        if (resultBuilder_ == null) {
          return result_ == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.getDefaultInstance() : result_;
        } else {
          return resultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The result of evaluating a statement.
       * </pre>
       *
       * <code>.skylark_debugging.Value result = 1;</code>
       */
      public Builder setResult(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          result_ = value;
          onChanged();
        } else {
          resultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The result of evaluating a statement.
       * </pre>
       *
       * <code>.skylark_debugging.Value result = 1;</code>
       */
      public Builder setResult(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder builderForValue) {
        if (resultBuilder_ == null) {
          result_ = builderForValue.build();
          onChanged();
        } else {
          resultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The result of evaluating a statement.
       * </pre>
       *
       * <code>.skylark_debugging.Value result = 1;</code>
       */
      public Builder mergeResult(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value value) {
        if (resultBuilder_ == null) {
          if (result_ != null) {
            result_ =
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.newBuilder(result_).mergeFrom(value).buildPartial();
          } else {
            result_ = value;
          }
          onChanged();
        } else {
          resultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The result of evaluating a statement.
       * </pre>
       *
       * <code>.skylark_debugging.Value result = 1;</code>
       */
      public Builder clearResult() {
        if (resultBuilder_ == null) {
          result_ = null;
          onChanged();
        } else {
          result_ = null;
          resultBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The result of evaluating a statement.
       * </pre>
       *
       * <code>.skylark_debugging.Value result = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder getResultBuilder() {
        
        onChanged();
        return getResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The result of evaluating a statement.
       * </pre>
       *
       * <code>.skylark_debugging.Value result = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder getResultOrBuilder() {
        if (resultBuilder_ != null) {
          return resultBuilder_.getMessageOrBuilder();
        } else {
          return result_ == null ?
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.getDefaultInstance() : result_;
        }
      }
      /**
       * <pre>
       * The result of evaluating a statement.
       * </pre>
       *
       * <code>.skylark_debugging.Value result = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder> 
          getResultFieldBuilder() {
        if (resultBuilder_ == null) {
          resultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder>(
                  getResult(),
                  getParentForChildren(),
                  isClean());
          result_ = null;
        }
        return resultBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.EvaluateResponse)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.EvaluateResponse)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EvaluateResponse>
        PARSER = new com.google.protobuf.AbstractParser<EvaluateResponse>() {
      @java.lang.Override
      public EvaluateResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EvaluateResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EvaluateResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EvaluateResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.EvaluateResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ListFramesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.ListFramesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The list of stack frames. The first element in the list represents the
     * topmost frame (that is, the current innermost function).
     * </pre>
     *
     * <code>repeated .skylark_debugging.Frame frame = 1;</code>
     */
    java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame> 
        getFrameList();
    /**
     * <pre>
     * The list of stack frames. The first element in the list represents the
     * topmost frame (that is, the current innermost function).
     * </pre>
     *
     * <code>repeated .skylark_debugging.Frame frame = 1;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame getFrame(int index);
    /**
     * <pre>
     * The list of stack frames. The first element in the list represents the
     * topmost frame (that is, the current innermost function).
     * </pre>
     *
     * <code>repeated .skylark_debugging.Frame frame = 1;</code>
     */
    int getFrameCount();
    /**
     * <pre>
     * The list of stack frames. The first element in the list represents the
     * topmost frame (that is, the current innermost function).
     * </pre>
     *
     * <code>repeated .skylark_debugging.Frame frame = 1;</code>
     */
    java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.FrameOrBuilder> 
        getFrameOrBuilderList();
    /**
     * <pre>
     * The list of stack frames. The first element in the list represents the
     * topmost frame (that is, the current innermost function).
     * </pre>
     *
     * <code>repeated .skylark_debugging.Frame frame = 1;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.FrameOrBuilder getFrameOrBuilder(
        int index);
  }
  /**
   * <pre>
   * The response to a ListFramesRequest.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.ListFramesResponse}
   */
  public  static final class ListFramesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.ListFramesResponse)
      ListFramesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListFramesResponse.newBuilder() to construct.
    private ListFramesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListFramesResponse() {
      frame_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ListFramesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                frame_ = new java.util.ArrayList<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame>();
                mutable_bitField0_ |= 0x00000001;
              }
              frame_.add(
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          frame_ = java.util.Collections.unmodifiableList(frame_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ListFramesResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ListFramesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.Builder.class);
    }

    public static final int FRAME_FIELD_NUMBER = 1;
    private java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame> frame_;
    /**
     * <pre>
     * The list of stack frames. The first element in the list represents the
     * topmost frame (that is, the current innermost function).
     * </pre>
     *
     * <code>repeated .skylark_debugging.Frame frame = 1;</code>
     */
    public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame> getFrameList() {
      return frame_;
    }
    /**
     * <pre>
     * The list of stack frames. The first element in the list represents the
     * topmost frame (that is, the current innermost function).
     * </pre>
     *
     * <code>repeated .skylark_debugging.Frame frame = 1;</code>
     */
    public java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.FrameOrBuilder> 
        getFrameOrBuilderList() {
      return frame_;
    }
    /**
     * <pre>
     * The list of stack frames. The first element in the list represents the
     * topmost frame (that is, the current innermost function).
     * </pre>
     *
     * <code>repeated .skylark_debugging.Frame frame = 1;</code>
     */
    public int getFrameCount() {
      return frame_.size();
    }
    /**
     * <pre>
     * The list of stack frames. The first element in the list represents the
     * topmost frame (that is, the current innermost function).
     * </pre>
     *
     * <code>repeated .skylark_debugging.Frame frame = 1;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame getFrame(int index) {
      return frame_.get(index);
    }
    /**
     * <pre>
     * The list of stack frames. The first element in the list represents the
     * topmost frame (that is, the current innermost function).
     * </pre>
     *
     * <code>repeated .skylark_debugging.Frame frame = 1;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.FrameOrBuilder getFrameOrBuilder(
        int index) {
      return frame_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < frame_.size(); i++) {
        output.writeMessage(1, frame_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < frame_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, frame_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) obj;

      boolean result = true;
      result = result && getFrameList()
          .equals(other.getFrameList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFrameCount() > 0) {
        hash = (37 * hash) + FRAME_FIELD_NUMBER;
        hash = (53 * hash) + getFrameList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The response to a ListFramesRequest.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.ListFramesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.ListFramesResponse)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ListFramesResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ListFramesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFrameFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (frameBuilder_ == null) {
          frame_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          frameBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ListFramesResponse_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse(this);
        int from_bitField0_ = bitField0_;
        if (frameBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            frame_ = java.util.Collections.unmodifiableList(frame_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.frame_ = frame_;
        } else {
          result.frame_ = frameBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse.getDefaultInstance()) return this;
        if (frameBuilder_ == null) {
          if (!other.frame_.isEmpty()) {
            if (frame_.isEmpty()) {
              frame_ = other.frame_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFrameIsMutable();
              frame_.addAll(other.frame_);
            }
            onChanged();
          }
        } else {
          if (!other.frame_.isEmpty()) {
            if (frameBuilder_.isEmpty()) {
              frameBuilder_.dispose();
              frameBuilder_ = null;
              frame_ = other.frame_;
              bitField0_ = (bitField0_ & ~0x00000001);
              frameBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFrameFieldBuilder() : null;
            } else {
              frameBuilder_.addAllMessages(other.frame_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame> frame_ =
        java.util.Collections.emptyList();
      private void ensureFrameIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          frame_ = new java.util.ArrayList<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame>(frame_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.FrameOrBuilder> frameBuilder_;

      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame> getFrameList() {
        if (frameBuilder_ == null) {
          return java.util.Collections.unmodifiableList(frame_);
        } else {
          return frameBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public int getFrameCount() {
        if (frameBuilder_ == null) {
          return frame_.size();
        } else {
          return frameBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame getFrame(int index) {
        if (frameBuilder_ == null) {
          return frame_.get(index);
        } else {
          return frameBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public Builder setFrame(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame value) {
        if (frameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFrameIsMutable();
          frame_.set(index, value);
          onChanged();
        } else {
          frameBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public Builder setFrame(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.Builder builderForValue) {
        if (frameBuilder_ == null) {
          ensureFrameIsMutable();
          frame_.set(index, builderForValue.build());
          onChanged();
        } else {
          frameBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public Builder addFrame(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame value) {
        if (frameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFrameIsMutable();
          frame_.add(value);
          onChanged();
        } else {
          frameBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public Builder addFrame(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame value) {
        if (frameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFrameIsMutable();
          frame_.add(index, value);
          onChanged();
        } else {
          frameBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public Builder addFrame(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.Builder builderForValue) {
        if (frameBuilder_ == null) {
          ensureFrameIsMutable();
          frame_.add(builderForValue.build());
          onChanged();
        } else {
          frameBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public Builder addFrame(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.Builder builderForValue) {
        if (frameBuilder_ == null) {
          ensureFrameIsMutable();
          frame_.add(index, builderForValue.build());
          onChanged();
        } else {
          frameBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public Builder addAllFrame(
          java.lang.Iterable<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame> values) {
        if (frameBuilder_ == null) {
          ensureFrameIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, frame_);
          onChanged();
        } else {
          frameBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public Builder clearFrame() {
        if (frameBuilder_ == null) {
          frame_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          frameBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public Builder removeFrame(int index) {
        if (frameBuilder_ == null) {
          ensureFrameIsMutable();
          frame_.remove(index);
          onChanged();
        } else {
          frameBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.Builder getFrameBuilder(
          int index) {
        return getFrameFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.FrameOrBuilder getFrameOrBuilder(
          int index) {
        if (frameBuilder_ == null) {
          return frame_.get(index);  } else {
          return frameBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.FrameOrBuilder> 
           getFrameOrBuilderList() {
        if (frameBuilder_ != null) {
          return frameBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(frame_);
        }
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.Builder addFrameBuilder() {
        return getFrameFieldBuilder().addBuilder(
            com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.getDefaultInstance());
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.Builder addFrameBuilder(
          int index) {
        return getFrameFieldBuilder().addBuilder(
            index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.getDefaultInstance());
      }
      /**
       * <pre>
       * The list of stack frames. The first element in the list represents the
       * topmost frame (that is, the current innermost function).
       * </pre>
       *
       * <code>repeated .skylark_debugging.Frame frame = 1;</code>
       */
      public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.Builder> 
           getFrameBuilderList() {
        return getFrameFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.FrameOrBuilder> 
          getFrameFieldBuilder() {
        if (frameBuilder_ == null) {
          frameBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.FrameOrBuilder>(
                  frame_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          frame_ = null;
        }
        return frameBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.ListFramesResponse)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.ListFramesResponse)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListFramesResponse>
        PARSER = new com.google.protobuf.AbstractParser<ListFramesResponse>() {
      @java.lang.Override
      public ListFramesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ListFramesResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ListFramesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListFramesResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ListFramesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StartDebuggingResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.StartDebuggingResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * The response to a StartDebuggingRequest.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.StartDebuggingResponse}
   */
  public  static final class StartDebuggingResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.StartDebuggingResponse)
      StartDebuggingResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StartDebuggingResponse.newBuilder() to construct.
    private StartDebuggingResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StartDebuggingResponse() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StartDebuggingResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_StartDebuggingResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_StartDebuggingResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The response to a StartDebuggingRequest.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.StartDebuggingResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.StartDebuggingResponse)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_StartDebuggingResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_StartDebuggingResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_StartDebuggingResponse_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.StartDebuggingResponse)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.StartDebuggingResponse)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StartDebuggingResponse>
        PARSER = new com.google.protobuf.AbstractParser<StartDebuggingResponse>() {
      @java.lang.Override
      public StartDebuggingResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StartDebuggingResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StartDebuggingResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StartDebuggingResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.StartDebuggingResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PauseThreadResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.PauseThreadResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * The response to a PauseThreadRequest. This is an acknowledgement that the
   * request was received. Actual pausing of individual threads happens
   * asynchronously, and will be communicated via ThreadPausedEvent(s).
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.PauseThreadResponse}
   */
  public  static final class PauseThreadResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.PauseThreadResponse)
      PauseThreadResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PauseThreadResponse.newBuilder() to construct.
    private PauseThreadResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PauseThreadResponse() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PauseThreadResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PauseThreadResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PauseThreadResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The response to a PauseThreadRequest. This is an acknowledgement that the
     * request was received. Actual pausing of individual threads happens
     * asynchronously, and will be communicated via ThreadPausedEvent(s).
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.PauseThreadResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.PauseThreadResponse)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PauseThreadResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PauseThreadResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PauseThreadResponse_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.PauseThreadResponse)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.PauseThreadResponse)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PauseThreadResponse>
        PARSER = new com.google.protobuf.AbstractParser<PauseThreadResponse>() {
      @java.lang.Override
      public PauseThreadResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PauseThreadResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PauseThreadResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PauseThreadResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseThreadResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetChildrenResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.GetChildrenResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .skylark_debugging.Value children = 1;</code>
     */
    java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value> 
        getChildrenList();
    /**
     * <code>repeated .skylark_debugging.Value children = 1;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value getChildren(int index);
    /**
     * <code>repeated .skylark_debugging.Value children = 1;</code>
     */
    int getChildrenCount();
    /**
     * <code>repeated .skylark_debugging.Value children = 1;</code>
     */
    java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder> 
        getChildrenOrBuilderList();
    /**
     * <code>repeated .skylark_debugging.Value children = 1;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder getChildrenOrBuilder(
        int index);
  }
  /**
   * <pre>
   * The response to a GetChildrenRequest.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.GetChildrenResponse}
   */
  public  static final class GetChildrenResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.GetChildrenResponse)
      GetChildrenResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetChildrenResponse.newBuilder() to construct.
    private GetChildrenResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetChildrenResponse() {
      children_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetChildrenResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                children_ = new java.util.ArrayList<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value>();
                mutable_bitField0_ |= 0x00000001;
              }
              children_.add(
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          children_ = java.util.Collections.unmodifiableList(children_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_GetChildrenResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_GetChildrenResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.Builder.class);
    }

    public static final int CHILDREN_FIELD_NUMBER = 1;
    private java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value> children_;
    /**
     * <code>repeated .skylark_debugging.Value children = 1;</code>
     */
    public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value> getChildrenList() {
      return children_;
    }
    /**
     * <code>repeated .skylark_debugging.Value children = 1;</code>
     */
    public java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder> 
        getChildrenOrBuilderList() {
      return children_;
    }
    /**
     * <code>repeated .skylark_debugging.Value children = 1;</code>
     */
    public int getChildrenCount() {
      return children_.size();
    }
    /**
     * <code>repeated .skylark_debugging.Value children = 1;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value getChildren(int index) {
      return children_.get(index);
    }
    /**
     * <code>repeated .skylark_debugging.Value children = 1;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder getChildrenOrBuilder(
        int index) {
      return children_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < children_.size(); i++) {
        output.writeMessage(1, children_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < children_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, children_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) obj;

      boolean result = true;
      result = result && getChildrenList()
          .equals(other.getChildrenList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getChildrenCount() > 0) {
        hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
        hash = (53 * hash) + getChildrenList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The response to a GetChildrenRequest.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.GetChildrenResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.GetChildrenResponse)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_GetChildrenResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_GetChildrenResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChildrenFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_GetChildrenResponse_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse(this);
        int from_bitField0_ = bitField0_;
        if (childrenBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            children_ = java.util.Collections.unmodifiableList(children_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.children_ = children_;
        } else {
          result.children_ = childrenBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse.getDefaultInstance()) return this;
        if (childrenBuilder_ == null) {
          if (!other.children_.isEmpty()) {
            if (children_.isEmpty()) {
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChildrenIsMutable();
              children_.addAll(other.children_);
            }
            onChanged();
          }
        } else {
          if (!other.children_.isEmpty()) {
            if (childrenBuilder_.isEmpty()) {
              childrenBuilder_.dispose();
              childrenBuilder_ = null;
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000001);
              childrenBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChildrenFieldBuilder() : null;
            } else {
              childrenBuilder_.addAllMessages(other.children_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value> children_ =
        java.util.Collections.emptyList();
      private void ensureChildrenIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          children_ = new java.util.ArrayList<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value>(children_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder> childrenBuilder_;

      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value> getChildrenList() {
        if (childrenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(children_);
        } else {
          return childrenBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public int getChildrenCount() {
        if (childrenBuilder_ == null) {
          return children_.size();
        } else {
          return childrenBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value getChildren(int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);
        } else {
          return childrenBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public Builder setChildren(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.set(index, value);
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public Builder setChildren(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.set(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public Builder addChildren(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public Builder addChildren(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(index, value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public Builder addChildren(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public Builder addChildren(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public Builder addAllChildren(
          java.lang.Iterable<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value> values) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, children_);
          onChanged();
        } else {
          childrenBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public Builder clearChildren() {
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public Builder removeChildren(int index) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.remove(index);
          onChanged();
        } else {
          childrenBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder getChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder getChildrenOrBuilder(
          int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);  } else {
          return childrenBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder> 
           getChildrenOrBuilderList() {
        if (childrenBuilder_ != null) {
          return childrenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(children_);
        }
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder addChildrenBuilder() {
        return getChildrenFieldBuilder().addBuilder(
            com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.getDefaultInstance());
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder addChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().addBuilder(
            index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.getDefaultInstance());
      }
      /**
       * <code>repeated .skylark_debugging.Value children = 1;</code>
       */
      public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder> 
           getChildrenBuilderList() {
        return getChildrenFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder> 
          getChildrenFieldBuilder() {
        if (childrenBuilder_ == null) {
          childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder>(
                  children_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          children_ = null;
        }
        return childrenBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.GetChildrenResponse)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.GetChildrenResponse)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetChildrenResponse>
        PARSER = new com.google.protobuf.AbstractParser<GetChildrenResponse>() {
      @java.lang.Override
      public GetChildrenResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetChildrenResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetChildrenResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetChildrenResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.GetChildrenResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ThreadPausedEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.ThreadPausedEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The thread that was paused.
     * </pre>
     *
     * <code>.skylark_debugging.PausedThread thread = 1;</code>
     */
    boolean hasThread();
    /**
     * <pre>
     * The thread that was paused.
     * </pre>
     *
     * <code>.skylark_debugging.PausedThread thread = 1;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread getThread();
    /**
     * <pre>
     * The thread that was paused.
     * </pre>
     *
     * <code>.skylark_debugging.PausedThread thread = 1;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThreadOrBuilder getThreadOrBuilder();
  }
  /**
   * <pre>
   * An event indicating that a thread was paused during execution.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.ThreadPausedEvent}
   */
  public  static final class ThreadPausedEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.ThreadPausedEvent)
      ThreadPausedEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ThreadPausedEvent.newBuilder() to construct.
    private ThreadPausedEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ThreadPausedEvent() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ThreadPausedEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.Builder subBuilder = null;
              if (thread_ != null) {
                subBuilder = thread_.toBuilder();
              }
              thread_ = input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(thread_);
                thread_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ThreadPausedEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ThreadPausedEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.Builder.class);
    }

    public static final int THREAD_FIELD_NUMBER = 1;
    private com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread thread_;
    /**
     * <pre>
     * The thread that was paused.
     * </pre>
     *
     * <code>.skylark_debugging.PausedThread thread = 1;</code>
     */
    public boolean hasThread() {
      return thread_ != null;
    }
    /**
     * <pre>
     * The thread that was paused.
     * </pre>
     *
     * <code>.skylark_debugging.PausedThread thread = 1;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread getThread() {
      return thread_ == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.getDefaultInstance() : thread_;
    }
    /**
     * <pre>
     * The thread that was paused.
     * </pre>
     *
     * <code>.skylark_debugging.PausedThread thread = 1;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThreadOrBuilder getThreadOrBuilder() {
      return getThread();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (thread_ != null) {
        output.writeMessage(1, getThread());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (thread_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getThread());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) obj;

      boolean result = true;
      result = result && (hasThread() == other.hasThread());
      if (hasThread()) {
        result = result && getThread()
            .equals(other.getThread());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasThread()) {
        hash = (37 * hash) + THREAD_FIELD_NUMBER;
        hash = (53 * hash) + getThread().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An event indicating that a thread was paused during execution.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.ThreadPausedEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.ThreadPausedEvent)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ThreadPausedEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ThreadPausedEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (threadBuilder_ == null) {
          thread_ = null;
        } else {
          thread_ = null;
          threadBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ThreadPausedEvent_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent(this);
        if (threadBuilder_ == null) {
          result.thread_ = thread_;
        } else {
          result.thread_ = threadBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent.getDefaultInstance()) return this;
        if (other.hasThread()) {
          mergeThread(other.getThread());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread thread_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThreadOrBuilder> threadBuilder_;
      /**
       * <pre>
       * The thread that was paused.
       * </pre>
       *
       * <code>.skylark_debugging.PausedThread thread = 1;</code>
       */
      public boolean hasThread() {
        return threadBuilder_ != null || thread_ != null;
      }
      /**
       * <pre>
       * The thread that was paused.
       * </pre>
       *
       * <code>.skylark_debugging.PausedThread thread = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread getThread() {
        if (threadBuilder_ == null) {
          return thread_ == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.getDefaultInstance() : thread_;
        } else {
          return threadBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The thread that was paused.
       * </pre>
       *
       * <code>.skylark_debugging.PausedThread thread = 1;</code>
       */
      public Builder setThread(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread value) {
        if (threadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          thread_ = value;
          onChanged();
        } else {
          threadBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The thread that was paused.
       * </pre>
       *
       * <code>.skylark_debugging.PausedThread thread = 1;</code>
       */
      public Builder setThread(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.Builder builderForValue) {
        if (threadBuilder_ == null) {
          thread_ = builderForValue.build();
          onChanged();
        } else {
          threadBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The thread that was paused.
       * </pre>
       *
       * <code>.skylark_debugging.PausedThread thread = 1;</code>
       */
      public Builder mergeThread(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread value) {
        if (threadBuilder_ == null) {
          if (thread_ != null) {
            thread_ =
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.newBuilder(thread_).mergeFrom(value).buildPartial();
          } else {
            thread_ = value;
          }
          onChanged();
        } else {
          threadBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The thread that was paused.
       * </pre>
       *
       * <code>.skylark_debugging.PausedThread thread = 1;</code>
       */
      public Builder clearThread() {
        if (threadBuilder_ == null) {
          thread_ = null;
          onChanged();
        } else {
          thread_ = null;
          threadBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The thread that was paused.
       * </pre>
       *
       * <code>.skylark_debugging.PausedThread thread = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.Builder getThreadBuilder() {
        
        onChanged();
        return getThreadFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The thread that was paused.
       * </pre>
       *
       * <code>.skylark_debugging.PausedThread thread = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThreadOrBuilder getThreadOrBuilder() {
        if (threadBuilder_ != null) {
          return threadBuilder_.getMessageOrBuilder();
        } else {
          return thread_ == null ?
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.getDefaultInstance() : thread_;
        }
      }
      /**
       * <pre>
       * The thread that was paused.
       * </pre>
       *
       * <code>.skylark_debugging.PausedThread thread = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThreadOrBuilder> 
          getThreadFieldBuilder() {
        if (threadBuilder_ == null) {
          threadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThreadOrBuilder>(
                  getThread(),
                  getParentForChildren(),
                  isClean());
          thread_ = null;
        }
        return threadBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.ThreadPausedEvent)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.ThreadPausedEvent)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ThreadPausedEvent>
        PARSER = new com.google.protobuf.AbstractParser<ThreadPausedEvent>() {
      @java.lang.Override
      public ThreadPausedEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ThreadPausedEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ThreadPausedEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ThreadPausedEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadPausedEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ThreadContinuedEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.ThreadContinuedEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The identifier of the thread that continued executing.
     * </pre>
     *
     * <code>int64 thread_id = 1;</code>
     */
    long getThreadId();
  }
  /**
   * <pre>
   * An event indicating that a thread has continued execution after being paused.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.ThreadContinuedEvent}
   */
  public  static final class ThreadContinuedEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.ThreadContinuedEvent)
      ThreadContinuedEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ThreadContinuedEvent.newBuilder() to construct.
    private ThreadContinuedEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ThreadContinuedEvent() {
      threadId_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ThreadContinuedEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              threadId_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ThreadContinuedEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ThreadContinuedEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.Builder.class);
    }

    public static final int THREAD_ID_FIELD_NUMBER = 1;
    private long threadId_;
    /**
     * <pre>
     * The identifier of the thread that continued executing.
     * </pre>
     *
     * <code>int64 thread_id = 1;</code>
     */
    public long getThreadId() {
      return threadId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (threadId_ != 0L) {
        output.writeInt64(1, threadId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (threadId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, threadId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) obj;

      boolean result = true;
      result = result && (getThreadId()
          == other.getThreadId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + THREAD_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getThreadId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An event indicating that a thread has continued execution after being paused.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.ThreadContinuedEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.ThreadContinuedEvent)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ThreadContinuedEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ThreadContinuedEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        threadId_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_ThreadContinuedEvent_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent(this);
        result.threadId_ = threadId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent.getDefaultInstance()) return this;
        if (other.getThreadId() != 0L) {
          setThreadId(other.getThreadId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long threadId_ ;
      /**
       * <pre>
       * The identifier of the thread that continued executing.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public long getThreadId() {
        return threadId_;
      }
      /**
       * <pre>
       * The identifier of the thread that continued executing.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public Builder setThreadId(long value) {
        
        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The identifier of the thread that continued executing.
       * </pre>
       *
       * <code>int64 thread_id = 1;</code>
       */
      public Builder clearThreadId() {
        
        threadId_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.ThreadContinuedEvent)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.ThreadContinuedEvent)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ThreadContinuedEvent>
        PARSER = new com.google.protobuf.AbstractParser<ThreadContinuedEvent>() {
      @java.lang.Override
      public ThreadContinuedEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ThreadContinuedEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ThreadContinuedEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ThreadContinuedEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ThreadContinuedEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BreakpointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.Breakpoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A breakpoint that is triggered when a particular line is reached.
     * Column index will be ignored for breakpoints. The debugger only supports
     * one breakpoint per line. If multiple breakpoints are supplied for a
     * single line, only the last such breakpoint is accepted.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 1;</code>
     */
    boolean hasLocation();
    /**
     * <pre>
     * A breakpoint that is triggered when a particular line is reached.
     * Column index will be ignored for breakpoints. The debugger only supports
     * one breakpoint per line. If multiple breakpoints are supplied for a
     * single line, only the last such breakpoint is accepted.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 1;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location getLocation();
    /**
     * <pre>
     * A breakpoint that is triggered when a particular line is reached.
     * Column index will be ignored for breakpoints. The debugger only supports
     * one breakpoint per line. If multiple breakpoints are supplied for a
     * single line, only the last such breakpoint is accepted.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 1;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder getLocationOrBuilder();

    /**
     * <pre>
     * An optional condition for the breakpoint. When present, the breakpoint will
     * be triggered iff both the primary condition holds and this expression
     * evaluates to True. It is unspecified how many times this expression will be
     * evaluated, so it should be free of side-effects.
     * </pre>
     *
     * <code>string expression = 2;</code>
     */
    java.lang.String getExpression();
    /**
     * <pre>
     * An optional condition for the breakpoint. When present, the breakpoint will
     * be triggered iff both the primary condition holds and this expression
     * evaluates to True. It is unspecified how many times this expression will be
     * evaluated, so it should be free of side-effects.
     * </pre>
     *
     * <code>string expression = 2;</code>
     */
    com.google.protobuf.ByteString
        getExpressionBytes();

    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.ConditionCase getConditionCase();
  }
  /**
   * <pre>
   * A location where the debug server will pause execution.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.Breakpoint}
   */
  public  static final class Breakpoint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.Breakpoint)
      BreakpointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Breakpoint.newBuilder() to construct.
    private Breakpoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Breakpoint() {
      expression_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Breakpoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder subBuilder = null;
              if (conditionCase_ == 1) {
                subBuilder = ((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) condition_).toBuilder();
              }
              condition_ =
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) condition_);
                condition_ = subBuilder.buildPartial();
              }
              conditionCase_ = 1;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              expression_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Breakpoint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Breakpoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.Builder.class);
    }

    private int conditionCase_ = 0;
    private java.lang.Object condition_;
    public enum ConditionCase
        implements com.google.protobuf.Internal.EnumLite {
      LOCATION(1),
      CONDITION_NOT_SET(0);
      private final int value;
      private ConditionCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ConditionCase valueOf(int value) {
        return forNumber(value);
      }

      public static ConditionCase forNumber(int value) {
        switch (value) {
          case 1: return LOCATION;
          case 0: return CONDITION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ConditionCase
    getConditionCase() {
      return ConditionCase.forNumber(
          conditionCase_);
    }

    public static final int LOCATION_FIELD_NUMBER = 1;
    /**
     * <pre>
     * A breakpoint that is triggered when a particular line is reached.
     * Column index will be ignored for breakpoints. The debugger only supports
     * one breakpoint per line. If multiple breakpoints are supplied for a
     * single line, only the last such breakpoint is accepted.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 1;</code>
     */
    public boolean hasLocation() {
      return conditionCase_ == 1;
    }
    /**
     * <pre>
     * A breakpoint that is triggered when a particular line is reached.
     * Column index will be ignored for breakpoints. The debugger only supports
     * one breakpoint per line. If multiple breakpoints are supplied for a
     * single line, only the last such breakpoint is accepted.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 1;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location getLocation() {
      if (conditionCase_ == 1) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) condition_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance();
    }
    /**
     * <pre>
     * A breakpoint that is triggered when a particular line is reached.
     * Column index will be ignored for breakpoints. The debugger only supports
     * one breakpoint per line. If multiple breakpoints are supplied for a
     * single line, only the last such breakpoint is accepted.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 1;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder getLocationOrBuilder() {
      if (conditionCase_ == 1) {
         return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) condition_;
      }
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance();
    }

    public static final int EXPRESSION_FIELD_NUMBER = 2;
    private volatile java.lang.Object expression_;
    /**
     * <pre>
     * An optional condition for the breakpoint. When present, the breakpoint will
     * be triggered iff both the primary condition holds and this expression
     * evaluates to True. It is unspecified how many times this expression will be
     * evaluated, so it should be free of side-effects.
     * </pre>
     *
     * <code>string expression = 2;</code>
     */
    public java.lang.String getExpression() {
      java.lang.Object ref = expression_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        expression_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * An optional condition for the breakpoint. When present, the breakpoint will
     * be triggered iff both the primary condition holds and this expression
     * evaluates to True. It is unspecified how many times this expression will be
     * evaluated, so it should be free of side-effects.
     * </pre>
     *
     * <code>string expression = 2;</code>
     */
    public com.google.protobuf.ByteString
        getExpressionBytes() {
      java.lang.Object ref = expression_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        expression_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (conditionCase_ == 1) {
        output.writeMessage(1, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) condition_);
      }
      if (!getExpressionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, expression_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (conditionCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) condition_);
      }
      if (!getExpressionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, expression_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint) obj;

      boolean result = true;
      result = result && getExpression()
          .equals(other.getExpression());
      result = result && getConditionCase().equals(
          other.getConditionCase());
      if (!result) return false;
      switch (conditionCase_) {
        case 1:
          result = result && getLocation()
              .equals(other.getLocation());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EXPRESSION_FIELD_NUMBER;
      hash = (53 * hash) + getExpression().hashCode();
      switch (conditionCase_) {
        case 1:
          hash = (37 * hash) + LOCATION_FIELD_NUMBER;
          hash = (53 * hash) + getLocation().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A location where the debug server will pause execution.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.Breakpoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.Breakpoint)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.BreakpointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Breakpoint_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Breakpoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        expression_ = "";

        conditionCase_ = 0;
        condition_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Breakpoint_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint(this);
        if (conditionCase_ == 1) {
          if (locationBuilder_ == null) {
            result.condition_ = condition_;
          } else {
            result.condition_ = locationBuilder_.build();
          }
        }
        result.expression_ = expression_;
        result.conditionCase_ = conditionCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint.getDefaultInstance()) return this;
        if (!other.getExpression().isEmpty()) {
          expression_ = other.expression_;
          onChanged();
        }
        switch (other.getConditionCase()) {
          case LOCATION: {
            mergeLocation(other.getLocation());
            break;
          }
          case CONDITION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int conditionCase_ = 0;
      private java.lang.Object condition_;
      public ConditionCase
          getConditionCase() {
        return ConditionCase.forNumber(
            conditionCase_);
      }

      public Builder clearCondition() {
        conditionCase_ = 0;
        condition_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder> locationBuilder_;
      /**
       * <pre>
       * A breakpoint that is triggered when a particular line is reached.
       * Column index will be ignored for breakpoints. The debugger only supports
       * one breakpoint per line. If multiple breakpoints are supplied for a
       * single line, only the last such breakpoint is accepted.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 1;</code>
       */
      public boolean hasLocation() {
        return conditionCase_ == 1;
      }
      /**
       * <pre>
       * A breakpoint that is triggered when a particular line is reached.
       * Column index will be ignored for breakpoints. The debugger only supports
       * one breakpoint per line. If multiple breakpoints are supplied for a
       * single line, only the last such breakpoint is accepted.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location getLocation() {
        if (locationBuilder_ == null) {
          if (conditionCase_ == 1) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) condition_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance();
        } else {
          if (conditionCase_ == 1) {
            return locationBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A breakpoint that is triggered when a particular line is reached.
       * Column index will be ignored for breakpoints. The debugger only supports
       * one breakpoint per line. If multiple breakpoints are supplied for a
       * single line, only the last such breakpoint is accepted.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 1;</code>
       */
      public Builder setLocation(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          condition_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        conditionCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A breakpoint that is triggered when a particular line is reached.
       * Column index will be ignored for breakpoints. The debugger only supports
       * one breakpoint per line. If multiple breakpoints are supplied for a
       * single line, only the last such breakpoint is accepted.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 1;</code>
       */
      public Builder setLocation(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder builderForValue) {
        if (locationBuilder_ == null) {
          condition_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        conditionCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A breakpoint that is triggered when a particular line is reached.
       * Column index will be ignored for breakpoints. The debugger only supports
       * one breakpoint per line. If multiple breakpoints are supplied for a
       * single line, only the last such breakpoint is accepted.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 1;</code>
       */
      public Builder mergeLocation(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location value) {
        if (locationBuilder_ == null) {
          if (conditionCase_ == 1 &&
              condition_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance()) {
            condition_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.newBuilder((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) condition_)
                .mergeFrom(value).buildPartial();
          } else {
            condition_ = value;
          }
          onChanged();
        } else {
          if (conditionCase_ == 1) {
            locationBuilder_.mergeFrom(value);
          }
          locationBuilder_.setMessage(value);
        }
        conditionCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A breakpoint that is triggered when a particular line is reached.
       * Column index will be ignored for breakpoints. The debugger only supports
       * one breakpoint per line. If multiple breakpoints are supplied for a
       * single line, only the last such breakpoint is accepted.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 1;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          if (conditionCase_ == 1) {
            conditionCase_ = 0;
            condition_ = null;
            onChanged();
          }
        } else {
          if (conditionCase_ == 1) {
            conditionCase_ = 0;
            condition_ = null;
          }
          locationBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A breakpoint that is triggered when a particular line is reached.
       * Column index will be ignored for breakpoints. The debugger only supports
       * one breakpoint per line. If multiple breakpoints are supplied for a
       * single line, only the last such breakpoint is accepted.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder getLocationBuilder() {
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A breakpoint that is triggered when a particular line is reached.
       * Column index will be ignored for breakpoints. The debugger only supports
       * one breakpoint per line. If multiple breakpoints are supplied for a
       * single line, only the last such breakpoint is accepted.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 1;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder getLocationOrBuilder() {
        if ((conditionCase_ == 1) && (locationBuilder_ != null)) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          if (conditionCase_ == 1) {
            return (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) condition_;
          }
          return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A breakpoint that is triggered when a particular line is reached.
       * Column index will be ignored for breakpoints. The debugger only supports
       * one breakpoint per line. If multiple breakpoints are supplied for a
       * single line, only the last such breakpoint is accepted.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          if (!(conditionCase_ == 1)) {
            condition_ = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance();
          }
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder>(
                  (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) condition_,
                  getParentForChildren(),
                  isClean());
          condition_ = null;
        }
        conditionCase_ = 1;
        onChanged();;
        return locationBuilder_;
      }

      private java.lang.Object expression_ = "";
      /**
       * <pre>
       * An optional condition for the breakpoint. When present, the breakpoint will
       * be triggered iff both the primary condition holds and this expression
       * evaluates to True. It is unspecified how many times this expression will be
       * evaluated, so it should be free of side-effects.
       * </pre>
       *
       * <code>string expression = 2;</code>
       */
      public java.lang.String getExpression() {
        java.lang.Object ref = expression_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          expression_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * An optional condition for the breakpoint. When present, the breakpoint will
       * be triggered iff both the primary condition holds and this expression
       * evaluates to True. It is unspecified how many times this expression will be
       * evaluated, so it should be free of side-effects.
       * </pre>
       *
       * <code>string expression = 2;</code>
       */
      public com.google.protobuf.ByteString
          getExpressionBytes() {
        java.lang.Object ref = expression_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          expression_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * An optional condition for the breakpoint. When present, the breakpoint will
       * be triggered iff both the primary condition holds and this expression
       * evaluates to True. It is unspecified how many times this expression will be
       * evaluated, so it should be free of side-effects.
       * </pre>
       *
       * <code>string expression = 2;</code>
       */
      public Builder setExpression(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        expression_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional condition for the breakpoint. When present, the breakpoint will
       * be triggered iff both the primary condition holds and this expression
       * evaluates to True. It is unspecified how many times this expression will be
       * evaluated, so it should be free of side-effects.
       * </pre>
       *
       * <code>string expression = 2;</code>
       */
      public Builder clearExpression() {
        
        expression_ = getDefaultInstance().getExpression();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional condition for the breakpoint. When present, the breakpoint will
       * be triggered iff both the primary condition holds and this expression
       * evaluates to True. It is unspecified how many times this expression will be
       * evaluated, so it should be free of side-effects.
       * </pre>
       *
       * <code>string expression = 2;</code>
       */
      public Builder setExpressionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        expression_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.Breakpoint)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.Breakpoint)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Breakpoint>
        PARSER = new com.google.protobuf.AbstractParser<Breakpoint>() {
      @java.lang.Override
      public Breakpoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Breakpoint(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Breakpoint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Breakpoint> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Breakpoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FrameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.Frame)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name of the function that this frame represents.
     * </pre>
     *
     * <code>string function_name = 1;</code>
     */
    java.lang.String getFunctionName();
    /**
     * <pre>
     * The name of the function that this frame represents.
     * </pre>
     *
     * <code>string function_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getFunctionNameBytes();

    /**
     * <pre>
     * The scopes that contain value bindings accessible in this frame.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Scope scope = 2;</code>
     */
    java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope> 
        getScopeList();
    /**
     * <pre>
     * The scopes that contain value bindings accessible in this frame.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Scope scope = 2;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope getScope(int index);
    /**
     * <pre>
     * The scopes that contain value bindings accessible in this frame.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Scope scope = 2;</code>
     */
    int getScopeCount();
    /**
     * <pre>
     * The scopes that contain value bindings accessible in this frame.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Scope scope = 2;</code>
     */
    java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ScopeOrBuilder> 
        getScopeOrBuilderList();
    /**
     * <pre>
     * The scopes that contain value bindings accessible in this frame.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Scope scope = 2;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ScopeOrBuilder getScopeOrBuilder(
        int index);

    /**
     * <pre>
     * The source location where the frame is currently paused. May not be set in
     * some situations.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 3;</code>
     */
    boolean hasLocation();
    /**
     * <pre>
     * The source location where the frame is currently paused. May not be set in
     * some situations.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 3;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location getLocation();
    /**
     * <pre>
     * The source location where the frame is currently paused. May not be set in
     * some situations.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 3;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder getLocationOrBuilder();
  }
  /**
   * <pre>
   * A single frame in a thread's stack trace.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.Frame}
   */
  public  static final class Frame extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.Frame)
      FrameOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Frame.newBuilder() to construct.
    private Frame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Frame() {
      functionName_ = "";
      scope_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Frame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              functionName_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                scope_ = new java.util.ArrayList<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope>();
                mutable_bitField0_ |= 0x00000002;
              }
              scope_.add(
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.parser(), extensionRegistry));
              break;
            }
            case 26: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder subBuilder = null;
              if (location_ != null) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          scope_ = java.util.Collections.unmodifiableList(scope_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Frame_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Frame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.Builder.class);
    }

    private int bitField0_;
    public static final int FUNCTION_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object functionName_;
    /**
     * <pre>
     * The name of the function that this frame represents.
     * </pre>
     *
     * <code>string function_name = 1;</code>
     */
    public java.lang.String getFunctionName() {
      java.lang.Object ref = functionName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        functionName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the function that this frame represents.
     * </pre>
     *
     * <code>string function_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFunctionNameBytes() {
      java.lang.Object ref = functionName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        functionName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCOPE_FIELD_NUMBER = 2;
    private java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope> scope_;
    /**
     * <pre>
     * The scopes that contain value bindings accessible in this frame.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Scope scope = 2;</code>
     */
    public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope> getScopeList() {
      return scope_;
    }
    /**
     * <pre>
     * The scopes that contain value bindings accessible in this frame.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Scope scope = 2;</code>
     */
    public java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ScopeOrBuilder> 
        getScopeOrBuilderList() {
      return scope_;
    }
    /**
     * <pre>
     * The scopes that contain value bindings accessible in this frame.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Scope scope = 2;</code>
     */
    public int getScopeCount() {
      return scope_.size();
    }
    /**
     * <pre>
     * The scopes that contain value bindings accessible in this frame.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Scope scope = 2;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope getScope(int index) {
      return scope_.get(index);
    }
    /**
     * <pre>
     * The scopes that contain value bindings accessible in this frame.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Scope scope = 2;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ScopeOrBuilder getScopeOrBuilder(
        int index) {
      return scope_.get(index);
    }

    public static final int LOCATION_FIELD_NUMBER = 3;
    private com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location location_;
    /**
     * <pre>
     * The source location where the frame is currently paused. May not be set in
     * some situations.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 3;</code>
     */
    public boolean hasLocation() {
      return location_ != null;
    }
    /**
     * <pre>
     * The source location where the frame is currently paused. May not be set in
     * some situations.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 3;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location getLocation() {
      return location_ == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance() : location_;
    }
    /**
     * <pre>
     * The source location where the frame is currently paused. May not be set in
     * some situations.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 3;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder getLocationOrBuilder() {
      return getLocation();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFunctionNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, functionName_);
      }
      for (int i = 0; i < scope_.size(); i++) {
        output.writeMessage(2, scope_.get(i));
      }
      if (location_ != null) {
        output.writeMessage(3, getLocation());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFunctionNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, functionName_);
      }
      for (int i = 0; i < scope_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, scope_.get(i));
      }
      if (location_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLocation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame) obj;

      boolean result = true;
      result = result && getFunctionName()
          .equals(other.getFunctionName());
      result = result && getScopeList()
          .equals(other.getScopeList());
      result = result && (hasLocation() == other.hasLocation());
      if (hasLocation()) {
        result = result && getLocation()
            .equals(other.getLocation());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FUNCTION_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getFunctionName().hashCode();
      if (getScopeCount() > 0) {
        hash = (37 * hash) + SCOPE_FIELD_NUMBER;
        hash = (53 * hash) + getScopeList().hashCode();
      }
      if (hasLocation()) {
        hash = (37 * hash) + LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLocation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A single frame in a thread's stack trace.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.Frame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.Frame)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.FrameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Frame_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Frame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getScopeFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        functionName_ = "";

        if (scopeBuilder_ == null) {
          scope_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          scopeBuilder_.clear();
        }
        if (locationBuilder_ == null) {
          location_ = null;
        } else {
          location_ = null;
          locationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Frame_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.functionName_ = functionName_;
        if (scopeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            scope_ = java.util.Collections.unmodifiableList(scope_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.scope_ = scope_;
        } else {
          result.scope_ = scopeBuilder_.build();
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame.getDefaultInstance()) return this;
        if (!other.getFunctionName().isEmpty()) {
          functionName_ = other.functionName_;
          onChanged();
        }
        if (scopeBuilder_ == null) {
          if (!other.scope_.isEmpty()) {
            if (scope_.isEmpty()) {
              scope_ = other.scope_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureScopeIsMutable();
              scope_.addAll(other.scope_);
            }
            onChanged();
          }
        } else {
          if (!other.scope_.isEmpty()) {
            if (scopeBuilder_.isEmpty()) {
              scopeBuilder_.dispose();
              scopeBuilder_ = null;
              scope_ = other.scope_;
              bitField0_ = (bitField0_ & ~0x00000002);
              scopeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getScopeFieldBuilder() : null;
            } else {
              scopeBuilder_.addAllMessages(other.scope_);
            }
          }
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object functionName_ = "";
      /**
       * <pre>
       * The name of the function that this frame represents.
       * </pre>
       *
       * <code>string function_name = 1;</code>
       */
      public java.lang.String getFunctionName() {
        java.lang.Object ref = functionName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          functionName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the function that this frame represents.
       * </pre>
       *
       * <code>string function_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFunctionNameBytes() {
        java.lang.Object ref = functionName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          functionName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the function that this frame represents.
       * </pre>
       *
       * <code>string function_name = 1;</code>
       */
      public Builder setFunctionName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        functionName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the function that this frame represents.
       * </pre>
       *
       * <code>string function_name = 1;</code>
       */
      public Builder clearFunctionName() {
        
        functionName_ = getDefaultInstance().getFunctionName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the function that this frame represents.
       * </pre>
       *
       * <code>string function_name = 1;</code>
       */
      public Builder setFunctionNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        functionName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope> scope_ =
        java.util.Collections.emptyList();
      private void ensureScopeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          scope_ = new java.util.ArrayList<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope>(scope_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ScopeOrBuilder> scopeBuilder_;

      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope> getScopeList() {
        if (scopeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(scope_);
        } else {
          return scopeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public int getScopeCount() {
        if (scopeBuilder_ == null) {
          return scope_.size();
        } else {
          return scopeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope getScope(int index) {
        if (scopeBuilder_ == null) {
          return scope_.get(index);
        } else {
          return scopeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public Builder setScope(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope value) {
        if (scopeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScopeIsMutable();
          scope_.set(index, value);
          onChanged();
        } else {
          scopeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public Builder setScope(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.Builder builderForValue) {
        if (scopeBuilder_ == null) {
          ensureScopeIsMutable();
          scope_.set(index, builderForValue.build());
          onChanged();
        } else {
          scopeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public Builder addScope(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope value) {
        if (scopeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScopeIsMutable();
          scope_.add(value);
          onChanged();
        } else {
          scopeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public Builder addScope(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope value) {
        if (scopeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScopeIsMutable();
          scope_.add(index, value);
          onChanged();
        } else {
          scopeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public Builder addScope(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.Builder builderForValue) {
        if (scopeBuilder_ == null) {
          ensureScopeIsMutable();
          scope_.add(builderForValue.build());
          onChanged();
        } else {
          scopeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public Builder addScope(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.Builder builderForValue) {
        if (scopeBuilder_ == null) {
          ensureScopeIsMutable();
          scope_.add(index, builderForValue.build());
          onChanged();
        } else {
          scopeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public Builder addAllScope(
          java.lang.Iterable<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope> values) {
        if (scopeBuilder_ == null) {
          ensureScopeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, scope_);
          onChanged();
        } else {
          scopeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public Builder clearScope() {
        if (scopeBuilder_ == null) {
          scope_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          scopeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public Builder removeScope(int index) {
        if (scopeBuilder_ == null) {
          ensureScopeIsMutable();
          scope_.remove(index);
          onChanged();
        } else {
          scopeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.Builder getScopeBuilder(
          int index) {
        return getScopeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ScopeOrBuilder getScopeOrBuilder(
          int index) {
        if (scopeBuilder_ == null) {
          return scope_.get(index);  } else {
          return scopeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ScopeOrBuilder> 
           getScopeOrBuilderList() {
        if (scopeBuilder_ != null) {
          return scopeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(scope_);
        }
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.Builder addScopeBuilder() {
        return getScopeFieldBuilder().addBuilder(
            com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.getDefaultInstance());
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.Builder addScopeBuilder(
          int index) {
        return getScopeFieldBuilder().addBuilder(
            index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.getDefaultInstance());
      }
      /**
       * <pre>
       * The scopes that contain value bindings accessible in this frame.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Scope scope = 2;</code>
       */
      public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.Builder> 
           getScopeBuilderList() {
        return getScopeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ScopeOrBuilder> 
          getScopeFieldBuilder() {
        if (scopeBuilder_ == null) {
          scopeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ScopeOrBuilder>(
                  scope_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          scope_ = null;
        }
        return scopeBuilder_;
      }

      private com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location location_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder> locationBuilder_;
      /**
       * <pre>
       * The source location where the frame is currently paused. May not be set in
       * some situations.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 3;</code>
       */
      public boolean hasLocation() {
        return locationBuilder_ != null || location_ != null;
      }
      /**
       * <pre>
       * The source location where the frame is currently paused. May not be set in
       * some situations.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 3;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location getLocation() {
        if (locationBuilder_ == null) {
          return location_ == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance() : location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The source location where the frame is currently paused. May not be set in
       * some situations.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 3;</code>
       */
      public Builder setLocation(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The source location where the frame is currently paused. May not be set in
       * some situations.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 3;</code>
       */
      public Builder setLocation(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The source location where the frame is currently paused. May not be set in
       * some situations.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 3;</code>
       */
      public Builder mergeLocation(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location value) {
        if (locationBuilder_ == null) {
          if (location_ != null) {
            location_ =
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The source location where the frame is currently paused. May not be set in
       * some situations.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 3;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = null;
          onChanged();
        } else {
          location_ = null;
          locationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The source location where the frame is currently paused. May not be set in
       * some situations.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 3;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder getLocationBuilder() {
        
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The source location where the frame is currently paused. May not be set in
       * some situations.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 3;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_ == null ?
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance() : location_;
        }
      }
      /**
       * <pre>
       * The source location where the frame is currently paused. May not be set in
       * some situations.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.Frame)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.Frame)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Frame>
        PARSER = new com.google.protobuf.AbstractParser<Frame>() {
      @java.lang.Override
      public Frame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Frame(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Frame> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Frame> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Frame getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.Location)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The path of the Skylark source file.
     * </pre>
     *
     * <code>string path = 1;</code>
     */
    java.lang.String getPath();
    /**
     * <pre>
     * The path of the Skylark source file.
     * </pre>
     *
     * <code>string path = 1;</code>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * A 1-indexed line number in the file denoted by path.
     * </pre>
     *
     * <code>uint32 line_number = 2;</code>
     */
    int getLineNumber();

    /**
     * <pre>
     * A 1-indexed column number in the file denoted by path. 0 (/unset) indicates
     * column number is unknown or irrelevant.
     * </pre>
     *
     * <code>uint32 column_number = 3;</code>
     */
    int getColumnNumber();
  }
  /**
   * <pre>
   * A location in Skylark source code.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.Location}
   */
  public  static final class Location extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.Location)
      LocationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Location.newBuilder() to construct.
    private Location(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Location() {
      path_ = "";
      lineNumber_ = 0;
      columnNumber_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Location(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              path_ = s;
              break;
            }
            case 16: {

              lineNumber_ = input.readUInt32();
              break;
            }
            case 24: {

              columnNumber_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Location_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Location_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder.class);
    }

    public static final int PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object path_;
    /**
     * <pre>
     * The path of the Skylark source file.
     * </pre>
     *
     * <code>string path = 1;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The path of the Skylark source file.
     * </pre>
     *
     * <code>string path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINE_NUMBER_FIELD_NUMBER = 2;
    private int lineNumber_;
    /**
     * <pre>
     * A 1-indexed line number in the file denoted by path.
     * </pre>
     *
     * <code>uint32 line_number = 2;</code>
     */
    public int getLineNumber() {
      return lineNumber_;
    }

    public static final int COLUMN_NUMBER_FIELD_NUMBER = 3;
    private int columnNumber_;
    /**
     * <pre>
     * A 1-indexed column number in the file denoted by path. 0 (/unset) indicates
     * column number is unknown or irrelevant.
     * </pre>
     *
     * <code>uint32 column_number = 3;</code>
     */
    public int getColumnNumber() {
      return columnNumber_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, path_);
      }
      if (lineNumber_ != 0) {
        output.writeUInt32(2, lineNumber_);
      }
      if (columnNumber_ != 0) {
        output.writeUInt32(3, columnNumber_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, path_);
      }
      if (lineNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, lineNumber_);
      }
      if (columnNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, columnNumber_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) obj;

      boolean result = true;
      result = result && getPath()
          .equals(other.getPath());
      result = result && (getLineNumber()
          == other.getLineNumber());
      result = result && (getColumnNumber()
          == other.getColumnNumber());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPath().hashCode();
      hash = (37 * hash) + LINE_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getLineNumber();
      hash = (37 * hash) + COLUMN_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getColumnNumber();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A location in Skylark source code.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.Location}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.Location)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Location_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Location_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        path_ = "";

        lineNumber_ = 0;

        columnNumber_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Location_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location(this);
        result.path_ = path_;
        result.lineNumber_ = lineNumber_;
        result.columnNumber_ = columnNumber_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance()) return this;
        if (!other.getPath().isEmpty()) {
          path_ = other.path_;
          onChanged();
        }
        if (other.getLineNumber() != 0) {
          setLineNumber(other.getLineNumber());
        }
        if (other.getColumnNumber() != 0) {
          setColumnNumber(other.getColumnNumber());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * The path of the Skylark source file.
       * </pre>
       *
       * <code>string path = 1;</code>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The path of the Skylark source file.
       * </pre>
       *
       * <code>string path = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The path of the Skylark source file.
       * </pre>
       *
       * <code>string path = 1;</code>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The path of the Skylark source file.
       * </pre>
       *
       * <code>string path = 1;</code>
       */
      public Builder clearPath() {
        
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The path of the Skylark source file.
       * </pre>
       *
       * <code>string path = 1;</code>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        path_ = value;
        onChanged();
        return this;
      }

      private int lineNumber_ ;
      /**
       * <pre>
       * A 1-indexed line number in the file denoted by path.
       * </pre>
       *
       * <code>uint32 line_number = 2;</code>
       */
      public int getLineNumber() {
        return lineNumber_;
      }
      /**
       * <pre>
       * A 1-indexed line number in the file denoted by path.
       * </pre>
       *
       * <code>uint32 line_number = 2;</code>
       */
      public Builder setLineNumber(int value) {
        
        lineNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A 1-indexed line number in the file denoted by path.
       * </pre>
       *
       * <code>uint32 line_number = 2;</code>
       */
      public Builder clearLineNumber() {
        
        lineNumber_ = 0;
        onChanged();
        return this;
      }

      private int columnNumber_ ;
      /**
       * <pre>
       * A 1-indexed column number in the file denoted by path. 0 (/unset) indicates
       * column number is unknown or irrelevant.
       * </pre>
       *
       * <code>uint32 column_number = 3;</code>
       */
      public int getColumnNumber() {
        return columnNumber_;
      }
      /**
       * <pre>
       * A 1-indexed column number in the file denoted by path. 0 (/unset) indicates
       * column number is unknown or irrelevant.
       * </pre>
       *
       * <code>uint32 column_number = 3;</code>
       */
      public Builder setColumnNumber(int value) {
        
        columnNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A 1-indexed column number in the file denoted by path. 0 (/unset) indicates
       * column number is unknown or irrelevant.
       * </pre>
       *
       * <code>uint32 column_number = 3;</code>
       */
      public Builder clearColumnNumber() {
        
        columnNumber_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.Location)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.Location)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Location>
        PARSER = new com.google.protobuf.AbstractParser<Location>() {
      @java.lang.Override
      public Location parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Location(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Location> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Location> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScopeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.Scope)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A human-readable name of the scope, such as "global" or "local".
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * A human-readable name of the scope, such as "global" or "local".
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The variable bindings that are defined in this scope.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Value binding = 2;</code>
     */
    java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value> 
        getBindingList();
    /**
     * <pre>
     * The variable bindings that are defined in this scope.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Value binding = 2;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value getBinding(int index);
    /**
     * <pre>
     * The variable bindings that are defined in this scope.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Value binding = 2;</code>
     */
    int getBindingCount();
    /**
     * <pre>
     * The variable bindings that are defined in this scope.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Value binding = 2;</code>
     */
    java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder> 
        getBindingOrBuilderList();
    /**
     * <pre>
     * The variable bindings that are defined in this scope.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Value binding = 2;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder getBindingOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A scope that contains value bindings accessible in a frame.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.Scope}
   */
  public  static final class Scope extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.Scope)
      ScopeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Scope.newBuilder() to construct.
    private Scope(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Scope() {
      name_ = "";
      binding_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Scope(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                binding_ = new java.util.ArrayList<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value>();
                mutable_bitField0_ |= 0x00000002;
              }
              binding_.add(
                  input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          binding_ = java.util.Collections.unmodifiableList(binding_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Scope_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Scope_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * A human-readable name of the scope, such as "global" or "local".
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A human-readable name of the scope, such as "global" or "local".
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BINDING_FIELD_NUMBER = 2;
    private java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value> binding_;
    /**
     * <pre>
     * The variable bindings that are defined in this scope.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Value binding = 2;</code>
     */
    public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value> getBindingList() {
      return binding_;
    }
    /**
     * <pre>
     * The variable bindings that are defined in this scope.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Value binding = 2;</code>
     */
    public java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder> 
        getBindingOrBuilderList() {
      return binding_;
    }
    /**
     * <pre>
     * The variable bindings that are defined in this scope.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Value binding = 2;</code>
     */
    public int getBindingCount() {
      return binding_.size();
    }
    /**
     * <pre>
     * The variable bindings that are defined in this scope.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Value binding = 2;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value getBinding(int index) {
      return binding_.get(index);
    }
    /**
     * <pre>
     * The variable bindings that are defined in this scope.
     * </pre>
     *
     * <code>repeated .skylark_debugging.Value binding = 2;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder getBindingOrBuilder(
        int index) {
      return binding_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      for (int i = 0; i < binding_.size(); i++) {
        output.writeMessage(2, binding_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (int i = 0; i < binding_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, binding_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getBindingList()
          .equals(other.getBindingList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getBindingCount() > 0) {
        hash = (37 * hash) + BINDING_FIELD_NUMBER;
        hash = (53 * hash) + getBindingList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A scope that contains value bindings accessible in a frame.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.Scope}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.Scope)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ScopeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Scope_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Scope_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBindingFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        if (bindingBuilder_ == null) {
          binding_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          bindingBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Scope_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (bindingBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            binding_ = java.util.Collections.unmodifiableList(binding_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.binding_ = binding_;
        } else {
          result.binding_ = bindingBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (bindingBuilder_ == null) {
          if (!other.binding_.isEmpty()) {
            if (binding_.isEmpty()) {
              binding_ = other.binding_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBindingIsMutable();
              binding_.addAll(other.binding_);
            }
            onChanged();
          }
        } else {
          if (!other.binding_.isEmpty()) {
            if (bindingBuilder_.isEmpty()) {
              bindingBuilder_.dispose();
              bindingBuilder_ = null;
              binding_ = other.binding_;
              bitField0_ = (bitField0_ & ~0x00000002);
              bindingBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBindingFieldBuilder() : null;
            } else {
              bindingBuilder_.addAllMessages(other.binding_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * A human-readable name of the scope, such as "global" or "local".
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A human-readable name of the scope, such as "global" or "local".
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A human-readable name of the scope, such as "global" or "local".
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable name of the scope, such as "global" or "local".
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable name of the scope, such as "global" or "local".
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value> binding_ =
        java.util.Collections.emptyList();
      private void ensureBindingIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          binding_ = new java.util.ArrayList<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value>(binding_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder> bindingBuilder_;

      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value> getBindingList() {
        if (bindingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(binding_);
        } else {
          return bindingBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public int getBindingCount() {
        if (bindingBuilder_ == null) {
          return binding_.size();
        } else {
          return bindingBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value getBinding(int index) {
        if (bindingBuilder_ == null) {
          return binding_.get(index);
        } else {
          return bindingBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public Builder setBinding(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value value) {
        if (bindingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBindingIsMutable();
          binding_.set(index, value);
          onChanged();
        } else {
          bindingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public Builder setBinding(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder builderForValue) {
        if (bindingBuilder_ == null) {
          ensureBindingIsMutable();
          binding_.set(index, builderForValue.build());
          onChanged();
        } else {
          bindingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public Builder addBinding(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value value) {
        if (bindingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBindingIsMutable();
          binding_.add(value);
          onChanged();
        } else {
          bindingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public Builder addBinding(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value value) {
        if (bindingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBindingIsMutable();
          binding_.add(index, value);
          onChanged();
        } else {
          bindingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public Builder addBinding(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder builderForValue) {
        if (bindingBuilder_ == null) {
          ensureBindingIsMutable();
          binding_.add(builderForValue.build());
          onChanged();
        } else {
          bindingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public Builder addBinding(
          int index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder builderForValue) {
        if (bindingBuilder_ == null) {
          ensureBindingIsMutable();
          binding_.add(index, builderForValue.build());
          onChanged();
        } else {
          bindingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public Builder addAllBinding(
          java.lang.Iterable<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value> values) {
        if (bindingBuilder_ == null) {
          ensureBindingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, binding_);
          onChanged();
        } else {
          bindingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public Builder clearBinding() {
        if (bindingBuilder_ == null) {
          binding_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          bindingBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public Builder removeBinding(int index) {
        if (bindingBuilder_ == null) {
          ensureBindingIsMutable();
          binding_.remove(index);
          onChanged();
        } else {
          bindingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder getBindingBuilder(
          int index) {
        return getBindingFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder getBindingOrBuilder(
          int index) {
        if (bindingBuilder_ == null) {
          return binding_.get(index);  } else {
          return bindingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public java.util.List<? extends com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder> 
           getBindingOrBuilderList() {
        if (bindingBuilder_ != null) {
          return bindingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(binding_);
        }
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder addBindingBuilder() {
        return getBindingFieldBuilder().addBuilder(
            com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.getDefaultInstance());
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder addBindingBuilder(
          int index) {
        return getBindingFieldBuilder().addBuilder(
            index, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.getDefaultInstance());
      }
      /**
       * <pre>
       * The variable bindings that are defined in this scope.
       * </pre>
       *
       * <code>repeated .skylark_debugging.Value binding = 2;</code>
       */
      public java.util.List<com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder> 
           getBindingBuilderList() {
        return getBindingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder> 
          getBindingFieldBuilder() {
        if (bindingBuilder_ == null) {
          bindingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder>(
                  binding_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          binding_ = null;
        }
        return bindingBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.Scope)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.Scope)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Scope>
        PARSER = new com.google.protobuf.AbstractParser<Scope>() {
      @java.lang.Override
      public Scope parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Scope(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Scope> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Scope> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Scope getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PausedThreadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.PausedThread)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The identifier of the thread.
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     * A descriptive name for the thread that can be displayed in the debugger's
     * UI.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * A descriptive name for the thread that can be displayed in the debugger's
     * UI.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>.skylark_debugging.PauseReason pause_reason = 3;</code>
     */
    int getPauseReasonValue();
    /**
     * <code>.skylark_debugging.PauseReason pause_reason = 3;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseReason getPauseReason();

    /**
     * <pre>
     * The location in Skylark code of the next statement or expression that will
     * be executed.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 4;</code>
     */
    boolean hasLocation();
    /**
     * <pre>
     * The location in Skylark code of the next statement or expression that will
     * be executed.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 4;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location getLocation();
    /**
     * <pre>
     * The location in Skylark code of the next statement or expression that will
     * be executed.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 4;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder getLocationOrBuilder();

    /**
     * <pre>
     * An error that occurred while evaluating a breakpoint condition. Present if
     * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
     * </pre>
     *
     * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
     */
    boolean hasConditionalBreakpointError();
    /**
     * <pre>
     * An error that occurred while evaluating a breakpoint condition. Present if
     * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
     * </pre>
     *
     * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error getConditionalBreakpointError();
    /**
     * <pre>
     * An error that occurred while evaluating a breakpoint condition. Present if
     * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
     * </pre>
     *
     * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
     */
    com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder getConditionalBreakpointErrorOrBuilder();
  }
  /**
   * <pre>
   * Information about a paused Skylark thread.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.PausedThread}
   */
  public  static final class PausedThread extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.PausedThread)
      PausedThreadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PausedThread.newBuilder() to construct.
    private PausedThread(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PausedThread() {
      id_ = 0L;
      name_ = "";
      pauseReason_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PausedThread(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              pauseReason_ = rawValue;
              break;
            }
            case 34: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder subBuilder = null;
              if (location_ != null) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder subBuilder = null;
              if (conditionalBreakpointError_ != null) {
                subBuilder = conditionalBreakpointError_.toBuilder();
              }
              conditionalBreakpointError_ = input.readMessage(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(conditionalBreakpointError_);
                conditionalBreakpointError_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PausedThread_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PausedThread_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * The identifier of the thread.
     * </pre>
     *
     * <code>int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * A descriptive name for the thread that can be displayed in the debugger's
     * UI.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A descriptive name for the thread that can be displayed in the debugger's
     * UI.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PAUSE_REASON_FIELD_NUMBER = 3;
    private int pauseReason_;
    /**
     * <code>.skylark_debugging.PauseReason pause_reason = 3;</code>
     */
    public int getPauseReasonValue() {
      return pauseReason_;
    }
    /**
     * <code>.skylark_debugging.PauseReason pause_reason = 3;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseReason getPauseReason() {
      @SuppressWarnings("deprecation")
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseReason result = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseReason.valueOf(pauseReason_);
      return result == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseReason.UNRECOGNIZED : result;
    }

    public static final int LOCATION_FIELD_NUMBER = 4;
    private com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location location_;
    /**
     * <pre>
     * The location in Skylark code of the next statement or expression that will
     * be executed.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 4;</code>
     */
    public boolean hasLocation() {
      return location_ != null;
    }
    /**
     * <pre>
     * The location in Skylark code of the next statement or expression that will
     * be executed.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 4;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location getLocation() {
      return location_ == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance() : location_;
    }
    /**
     * <pre>
     * The location in Skylark code of the next statement or expression that will
     * be executed.
     * </pre>
     *
     * <code>.skylark_debugging.Location location = 4;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder getLocationOrBuilder() {
      return getLocation();
    }

    public static final int CONDITIONAL_BREAKPOINT_ERROR_FIELD_NUMBER = 5;
    private com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error conditionalBreakpointError_;
    /**
     * <pre>
     * An error that occurred while evaluating a breakpoint condition. Present if
     * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
     * </pre>
     *
     * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
     */
    public boolean hasConditionalBreakpointError() {
      return conditionalBreakpointError_ != null;
    }
    /**
     * <pre>
     * An error that occurred while evaluating a breakpoint condition. Present if
     * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
     * </pre>
     *
     * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error getConditionalBreakpointError() {
      return conditionalBreakpointError_ == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.getDefaultInstance() : conditionalBreakpointError_;
    }
    /**
     * <pre>
     * An error that occurred while evaluating a breakpoint condition. Present if
     * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
     * </pre>
     *
     * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
     */
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder getConditionalBreakpointErrorOrBuilder() {
      return getConditionalBreakpointError();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (pauseReason_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseReason.UNSET.getNumber()) {
        output.writeEnum(3, pauseReason_);
      }
      if (location_ != null) {
        output.writeMessage(4, getLocation());
      }
      if (conditionalBreakpointError_ != null) {
        output.writeMessage(5, getConditionalBreakpointError());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (pauseReason_ != com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseReason.UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, pauseReason_);
      }
      if (location_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLocation());
      }
      if (conditionalBreakpointError_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getConditionalBreakpointError());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && getName()
          .equals(other.getName());
      result = result && pauseReason_ == other.pauseReason_;
      result = result && (hasLocation() == other.hasLocation());
      if (hasLocation()) {
        result = result && getLocation()
            .equals(other.getLocation());
      }
      result = result && (hasConditionalBreakpointError() == other.hasConditionalBreakpointError());
      if (hasConditionalBreakpointError()) {
        result = result && getConditionalBreakpointError()
            .equals(other.getConditionalBreakpointError());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + PAUSE_REASON_FIELD_NUMBER;
      hash = (53 * hash) + pauseReason_;
      if (hasLocation()) {
        hash = (37 * hash) + LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLocation().hashCode();
      }
      if (hasConditionalBreakpointError()) {
        hash = (37 * hash) + CONDITIONAL_BREAKPOINT_ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getConditionalBreakpointError().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Information about a paused Skylark thread.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.PausedThread}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.PausedThread)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThreadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PausedThread_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PausedThread_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        name_ = "";

        pauseReason_ = 0;

        if (locationBuilder_ == null) {
          location_ = null;
        } else {
          location_ = null;
          locationBuilder_ = null;
        }
        if (conditionalBreakpointErrorBuilder_ == null) {
          conditionalBreakpointError_ = null;
        } else {
          conditionalBreakpointError_ = null;
          conditionalBreakpointErrorBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_PausedThread_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread(this);
        result.id_ = id_;
        result.name_ = name_;
        result.pauseReason_ = pauseReason_;
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (conditionalBreakpointErrorBuilder_ == null) {
          result.conditionalBreakpointError_ = conditionalBreakpointError_;
        } else {
          result.conditionalBreakpointError_ = conditionalBreakpointErrorBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.pauseReason_ != 0) {
          setPauseReasonValue(other.getPauseReasonValue());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasConditionalBreakpointError()) {
          mergeConditionalBreakpointError(other.getConditionalBreakpointError());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <pre>
       * The identifier of the thread.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * The identifier of the thread.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The identifier of the thread.
       * </pre>
       *
       * <code>int64 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * A descriptive name for the thread that can be displayed in the debugger's
       * UI.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A descriptive name for the thread that can be displayed in the debugger's
       * UI.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A descriptive name for the thread that can be displayed in the debugger's
       * UI.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A descriptive name for the thread that can be displayed in the debugger's
       * UI.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A descriptive name for the thread that can be displayed in the debugger's
       * UI.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int pauseReason_ = 0;
      /**
       * <code>.skylark_debugging.PauseReason pause_reason = 3;</code>
       */
      public int getPauseReasonValue() {
        return pauseReason_;
      }
      /**
       * <code>.skylark_debugging.PauseReason pause_reason = 3;</code>
       */
      public Builder setPauseReasonValue(int value) {
        pauseReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.skylark_debugging.PauseReason pause_reason = 3;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseReason getPauseReason() {
        @SuppressWarnings("deprecation")
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseReason result = com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseReason.valueOf(pauseReason_);
        return result == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseReason.UNRECOGNIZED : result;
      }
      /**
       * <code>.skylark_debugging.PauseReason pause_reason = 3;</code>
       */
      public Builder setPauseReason(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PauseReason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        pauseReason_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.skylark_debugging.PauseReason pause_reason = 3;</code>
       */
      public Builder clearPauseReason() {
        
        pauseReason_ = 0;
        onChanged();
        return this;
      }

      private com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location location_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder> locationBuilder_;
      /**
       * <pre>
       * The location in Skylark code of the next statement or expression that will
       * be executed.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 4;</code>
       */
      public boolean hasLocation() {
        return locationBuilder_ != null || location_ != null;
      }
      /**
       * <pre>
       * The location in Skylark code of the next statement or expression that will
       * be executed.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 4;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location getLocation() {
        if (locationBuilder_ == null) {
          return location_ == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance() : location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The location in Skylark code of the next statement or expression that will
       * be executed.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 4;</code>
       */
      public Builder setLocation(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The location in Skylark code of the next statement or expression that will
       * be executed.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 4;</code>
       */
      public Builder setLocation(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The location in Skylark code of the next statement or expression that will
       * be executed.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 4;</code>
       */
      public Builder mergeLocation(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location value) {
        if (locationBuilder_ == null) {
          if (location_ != null) {
            location_ =
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The location in Skylark code of the next statement or expression that will
       * be executed.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 4;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = null;
          onChanged();
        } else {
          location_ = null;
          locationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The location in Skylark code of the next statement or expression that will
       * be executed.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 4;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder getLocationBuilder() {
        
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The location in Skylark code of the next statement or expression that will
       * be executed.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 4;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_ == null ?
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.getDefaultInstance() : location_;
        }
      }
      /**
       * <pre>
       * The location in Skylark code of the next statement or expression that will
       * be executed.
       * </pre>
       *
       * <code>.skylark_debugging.Location location = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Location.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.LocationOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      private com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error conditionalBreakpointError_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder> conditionalBreakpointErrorBuilder_;
      /**
       * <pre>
       * An error that occurred while evaluating a breakpoint condition. Present if
       * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
       * </pre>
       *
       * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
       */
      public boolean hasConditionalBreakpointError() {
        return conditionalBreakpointErrorBuilder_ != null || conditionalBreakpointError_ != null;
      }
      /**
       * <pre>
       * An error that occurred while evaluating a breakpoint condition. Present if
       * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
       * </pre>
       *
       * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error getConditionalBreakpointError() {
        if (conditionalBreakpointErrorBuilder_ == null) {
          return conditionalBreakpointError_ == null ? com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.getDefaultInstance() : conditionalBreakpointError_;
        } else {
          return conditionalBreakpointErrorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * An error that occurred while evaluating a breakpoint condition. Present if
       * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
       * </pre>
       *
       * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
       */
      public Builder setConditionalBreakpointError(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error value) {
        if (conditionalBreakpointErrorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          conditionalBreakpointError_ = value;
          onChanged();
        } else {
          conditionalBreakpointErrorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * An error that occurred while evaluating a breakpoint condition. Present if
       * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
       * </pre>
       *
       * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
       */
      public Builder setConditionalBreakpointError(
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder builderForValue) {
        if (conditionalBreakpointErrorBuilder_ == null) {
          conditionalBreakpointError_ = builderForValue.build();
          onChanged();
        } else {
          conditionalBreakpointErrorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * An error that occurred while evaluating a breakpoint condition. Present if
       * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
       * </pre>
       *
       * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
       */
      public Builder mergeConditionalBreakpointError(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error value) {
        if (conditionalBreakpointErrorBuilder_ == null) {
          if (conditionalBreakpointError_ != null) {
            conditionalBreakpointError_ =
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.newBuilder(conditionalBreakpointError_).mergeFrom(value).buildPartial();
          } else {
            conditionalBreakpointError_ = value;
          }
          onChanged();
        } else {
          conditionalBreakpointErrorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * An error that occurred while evaluating a breakpoint condition. Present if
       * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
       * </pre>
       *
       * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
       */
      public Builder clearConditionalBreakpointError() {
        if (conditionalBreakpointErrorBuilder_ == null) {
          conditionalBreakpointError_ = null;
          onChanged();
        } else {
          conditionalBreakpointError_ = null;
          conditionalBreakpointErrorBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * An error that occurred while evaluating a breakpoint condition. Present if
       * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
       * </pre>
       *
       * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder getConditionalBreakpointErrorBuilder() {
        
        onChanged();
        return getConditionalBreakpointErrorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * An error that occurred while evaluating a breakpoint condition. Present if
       * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
       * </pre>
       *
       * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
       */
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder getConditionalBreakpointErrorOrBuilder() {
        if (conditionalBreakpointErrorBuilder_ != null) {
          return conditionalBreakpointErrorBuilder_.getMessageOrBuilder();
        } else {
          return conditionalBreakpointError_ == null ?
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.getDefaultInstance() : conditionalBreakpointError_;
        }
      }
      /**
       * <pre>
       * An error that occurred while evaluating a breakpoint condition. Present if
       * and only if pause_reason is CONDITIONAL_BREAKPOINT_ERROR.
       * </pre>
       *
       * <code>.skylark_debugging.Error conditional_breakpoint_error = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder> 
          getConditionalBreakpointErrorFieldBuilder() {
        if (conditionalBreakpointErrorBuilder_ == null) {
          conditionalBreakpointErrorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Error.Builder, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ErrorOrBuilder>(
                  getConditionalBreakpointError(),
                  getParentForChildren(),
                  isClean());
          conditionalBreakpointError_ = null;
        }
        return conditionalBreakpointErrorBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.PausedThread)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.PausedThread)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PausedThread>
        PARSER = new com.google.protobuf.AbstractParser<PausedThread>() {
      @java.lang.Override
      public PausedThread parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PausedThread(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PausedThread> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PausedThread> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.PausedThread getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:skylark_debugging.Value)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A label that describes this value's location or source in a value
     * hierarchy.
     * For example, in a stack frame, the label would be the name of the variable
     * to which the value is bound. For a value that is an element of a list, its
     * its label would be its subscript, such as "[4]". A value that is a field in
     * a struct would use the field's name as its label, and so forth.
     * </pre>
     *
     * <code>string label = 1;</code>
     */
    java.lang.String getLabel();
    /**
     * <pre>
     * A label that describes this value's location or source in a value
     * hierarchy.
     * For example, in a stack frame, the label would be the name of the variable
     * to which the value is bound. For a value that is an element of a list, its
     * its label would be its subscript, such as "[4]". A value that is a field in
     * a struct would use the field's name as its label, and so forth.
     * </pre>
     *
     * <code>string label = 1;</code>
     */
    com.google.protobuf.ByteString
        getLabelBytes();

    /**
     * <pre>
     * A string description of the value.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * A string description of the value.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A string describing the type of the value.
     * This field may be omitted if the value does not correspond to a "real" type
     * as far as the debugging view is concerned; for example, dictionaries will
     * be rendered as sequences of key/value pairs ("entries") but the entries
     * themselves do not have a meaningful type with respect to our rendering.
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * A string describing the type of the value.
     * This field may be omitted if the value does not correspond to a "real" type
     * as far as the debugging view is concerned; for example, dictionaries will
     * be rendered as sequences of key/value pairs ("entries") but the entries
     * themselves do not have a meaningful type with respect to our rendering.
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * Will be false if the value is known to have no children. May sometimes be
     * true if this isn't yet known, in which case GetChildrenResponse#children
     * will be empty.
     * </pre>
     *
     * <code>bool has_children = 4;</code>
     */
    boolean getHasChildren();

    /**
     * <pre>
     * An identifier for this value, used to request its children. The same value
     * may be known by multiple ids. Not set for values without children.
     * </pre>
     *
     * <code>int64 id = 5;</code>
     */
    long getId();
  }
  /**
   * <pre>
   * The debugger representation of a Skylark value.
   * </pre>
   *
   * Protobuf type {@code skylark_debugging.Value}
   */
  public  static final class Value extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:skylark_debugging.Value)
      ValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Value.newBuilder() to construct.
    private Value(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Value() {
      label_ = "";
      description_ = "";
      type_ = "";
      hasChildren_ = false;
      id_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Value(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              label_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 32: {

              hasChildren_ = input.readBool();
              break;
            }
            case 40: {

              id_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Value_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Value_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder.class);
    }

    public static final int LABEL_FIELD_NUMBER = 1;
    private volatile java.lang.Object label_;
    /**
     * <pre>
     * A label that describes this value's location or source in a value
     * hierarchy.
     * For example, in a stack frame, the label would be the name of the variable
     * to which the value is bound. For a value that is an element of a list, its
     * its label would be its subscript, such as "[4]". A value that is a field in
     * a struct would use the field's name as its label, and so forth.
     * </pre>
     *
     * <code>string label = 1;</code>
     */
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        label_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A label that describes this value's location or source in a value
     * hierarchy.
     * For example, in a stack frame, the label would be the name of the variable
     * to which the value is bound. For a value that is an element of a list, its
     * its label would be its subscript, such as "[4]". A value that is a field in
     * a struct would use the field's name as its label, and so forth.
     * </pre>
     *
     * <code>string label = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * A string description of the value.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A string description of the value.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * A string describing the type of the value.
     * This field may be omitted if the value does not correspond to a "real" type
     * as far as the debugging view is concerned; for example, dictionaries will
     * be rendered as sequences of key/value pairs ("entries") but the entries
     * themselves do not have a meaningful type with respect to our rendering.
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A string describing the type of the value.
     * This field may be omitted if the value does not correspond to a "real" type
     * as far as the debugging view is concerned; for example, dictionaries will
     * be rendered as sequences of key/value pairs ("entries") but the entries
     * themselves do not have a meaningful type with respect to our rendering.
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HAS_CHILDREN_FIELD_NUMBER = 4;
    private boolean hasChildren_;
    /**
     * <pre>
     * Will be false if the value is known to have no children. May sometimes be
     * true if this isn't yet known, in which case GetChildrenResponse#children
     * will be empty.
     * </pre>
     *
     * <code>bool has_children = 4;</code>
     */
    public boolean getHasChildren() {
      return hasChildren_;
    }

    public static final int ID_FIELD_NUMBER = 5;
    private long id_;
    /**
     * <pre>
     * An identifier for this value, used to request its children. The same value
     * may be known by multiple ids. Not set for values without children.
     * </pre>
     *
     * <code>int64 id = 5;</code>
     */
    public long getId() {
      return id_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getLabelBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, label_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, type_);
      }
      if (hasChildren_ != false) {
        output.writeBool(4, hasChildren_);
      }
      if (id_ != 0L) {
        output.writeInt64(5, id_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getLabelBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, label_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, type_);
      }
      if (hasChildren_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, hasChildren_);
      }
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, id_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value other = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value) obj;

      boolean result = true;
      result = result && getLabel()
          .equals(other.getLabel());
      result = result && getDescription()
          .equals(other.getDescription());
      result = result && getType()
          .equals(other.getType());
      result = result && (getHasChildren()
          == other.getHasChildren());
      result = result && (getId()
          == other.getId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getLabel().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + HAS_CHILDREN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasChildren());
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The debugger representation of a Skylark value.
     * </pre>
     *
     * Protobuf type {@code skylark_debugging.Value}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:skylark_debugging.Value)
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.ValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Value_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Value_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.class, com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        label_ = "";

        description_ = "";

        type_ = "";

        hasChildren_ = false;

        id_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.internal_static_skylark_debugging_Value_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value getDefaultInstanceForType() {
        return com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value build() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value buildPartial() {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value result = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value(this);
        result.label_ = label_;
        result.description_ = description_;
        result.type_ = type_;
        result.hasChildren_ = hasChildren_;
        result.id_ = id_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value) {
          return mergeFrom((com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value other) {
        if (other == com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value.getDefaultInstance()) return this;
        if (!other.getLabel().isEmpty()) {
          label_ = other.label_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.getHasChildren() != false) {
          setHasChildren(other.getHasChildren());
        }
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object label_ = "";
      /**
       * <pre>
       * A label that describes this value's location or source in a value
       * hierarchy.
       * For example, in a stack frame, the label would be the name of the variable
       * to which the value is bound. For a value that is an element of a list, its
       * its label would be its subscript, such as "[4]". A value that is a field in
       * a struct would use the field's name as its label, and so forth.
       * </pre>
       *
       * <code>string label = 1;</code>
       */
      public java.lang.String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          label_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A label that describes this value's location or source in a value
       * hierarchy.
       * For example, in a stack frame, the label would be the name of the variable
       * to which the value is bound. For a value that is an element of a list, its
       * its label would be its subscript, such as "[4]". A value that is a field in
       * a struct would use the field's name as its label, and so forth.
       * </pre>
       *
       * <code>string label = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLabelBytes() {
        java.lang.Object ref = label_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          label_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A label that describes this value's location or source in a value
       * hierarchy.
       * For example, in a stack frame, the label would be the name of the variable
       * to which the value is bound. For a value that is an element of a list, its
       * its label would be its subscript, such as "[4]". A value that is a field in
       * a struct would use the field's name as its label, and so forth.
       * </pre>
       *
       * <code>string label = 1;</code>
       */
      public Builder setLabel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        label_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A label that describes this value's location or source in a value
       * hierarchy.
       * For example, in a stack frame, the label would be the name of the variable
       * to which the value is bound. For a value that is an element of a list, its
       * its label would be its subscript, such as "[4]". A value that is a field in
       * a struct would use the field's name as its label, and so forth.
       * </pre>
       *
       * <code>string label = 1;</code>
       */
      public Builder clearLabel() {
        
        label_ = getDefaultInstance().getLabel();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A label that describes this value's location or source in a value
       * hierarchy.
       * For example, in a stack frame, the label would be the name of the variable
       * to which the value is bound. For a value that is an element of a list, its
       * its label would be its subscript, such as "[4]". A value that is a field in
       * a struct would use the field's name as its label, and so forth.
       * </pre>
       *
       * <code>string label = 1;</code>
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        label_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * A string description of the value.
       * </pre>
       *
       * <code>string description = 2;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A string description of the value.
       * </pre>
       *
       * <code>string description = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A string description of the value.
       * </pre>
       *
       * <code>string description = 2;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string description of the value.
       * </pre>
       *
       * <code>string description = 2;</code>
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string description of the value.
       * </pre>
       *
       * <code>string description = 2;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * A string describing the type of the value.
       * This field may be omitted if the value does not correspond to a "real" type
       * as far as the debugging view is concerned; for example, dictionaries will
       * be rendered as sequences of key/value pairs ("entries") but the entries
       * themselves do not have a meaningful type with respect to our rendering.
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A string describing the type of the value.
       * This field may be omitted if the value does not correspond to a "real" type
       * as far as the debugging view is concerned; for example, dictionaries will
       * be rendered as sequences of key/value pairs ("entries") but the entries
       * themselves do not have a meaningful type with respect to our rendering.
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A string describing the type of the value.
       * This field may be omitted if the value does not correspond to a "real" type
       * as far as the debugging view is concerned; for example, dictionaries will
       * be rendered as sequences of key/value pairs ("entries") but the entries
       * themselves do not have a meaningful type with respect to our rendering.
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string describing the type of the value.
       * This field may be omitted if the value does not correspond to a "real" type
       * as far as the debugging view is concerned; for example, dictionaries will
       * be rendered as sequences of key/value pairs ("entries") but the entries
       * themselves do not have a meaningful type with respect to our rendering.
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string describing the type of the value.
       * This field may be omitted if the value does not correspond to a "real" type
       * as far as the debugging view is concerned; for example, dictionaries will
       * be rendered as sequences of key/value pairs ("entries") but the entries
       * themselves do not have a meaningful type with respect to our rendering.
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private boolean hasChildren_ ;
      /**
       * <pre>
       * Will be false if the value is known to have no children. May sometimes be
       * true if this isn't yet known, in which case GetChildrenResponse#children
       * will be empty.
       * </pre>
       *
       * <code>bool has_children = 4;</code>
       */
      public boolean getHasChildren() {
        return hasChildren_;
      }
      /**
       * <pre>
       * Will be false if the value is known to have no children. May sometimes be
       * true if this isn't yet known, in which case GetChildrenResponse#children
       * will be empty.
       * </pre>
       *
       * <code>bool has_children = 4;</code>
       */
      public Builder setHasChildren(boolean value) {
        
        hasChildren_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Will be false if the value is known to have no children. May sometimes be
       * true if this isn't yet known, in which case GetChildrenResponse#children
       * will be empty.
       * </pre>
       *
       * <code>bool has_children = 4;</code>
       */
      public Builder clearHasChildren() {
        
        hasChildren_ = false;
        onChanged();
        return this;
      }

      private long id_ ;
      /**
       * <pre>
       * An identifier for this value, used to request its children. The same value
       * may be known by multiple ids. Not set for values without children.
       * </pre>
       *
       * <code>int64 id = 5;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * An identifier for this value, used to request its children. The same value
       * may be known by multiple ids. Not set for values without children.
       * </pre>
       *
       * <code>int64 id = 5;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An identifier for this value, used to request its children. The same value
       * may be known by multiple ids. Not set for values without children.
       * </pre>
       *
       * <code>int64 id = 5;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:skylark_debugging.Value)
    }

    // @@protoc_insertion_point(class_scope:skylark_debugging.Value)
    private static final com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value();
    }

    public static com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Value>
        PARSER = new com.google.protobuf.AbstractParser<Value>() {
      @java.lang.Override
      public Value parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Value(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Value> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Value> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.skylarkdebugging.SkylarkDebuggingProtos.Value getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_DebugRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_DebugRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_SetBreakpointsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_SetBreakpointsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_ContinueExecutionRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_ContinueExecutionRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_EvaluateRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_EvaluateRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_ListFramesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_ListFramesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_StartDebuggingRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_StartDebuggingRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_PauseThreadRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_PauseThreadRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_GetChildrenRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_GetChildrenRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_DebugEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_DebugEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_Error_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_Error_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_SetBreakpointsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_SetBreakpointsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_ContinueExecutionResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_ContinueExecutionResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_EvaluateResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_EvaluateResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_ListFramesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_ListFramesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_StartDebuggingResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_StartDebuggingResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_PauseThreadResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_PauseThreadResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_GetChildrenResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_GetChildrenResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_ThreadPausedEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_ThreadPausedEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_ThreadContinuedEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_ThreadContinuedEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_Breakpoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_Breakpoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_Frame_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_Frame_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_Location_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_Location_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_Scope_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_Scope_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_PausedThread_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_PausedThread_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skylark_debugging_Value_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skylark_debugging_Value_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nVsrc/main/java/com/google/devtools/buil" +
      "d/lib/skylarkdebug/proto/skylark_debuggi" +
      "ng.proto\022\021skylark_debugging\"\372\003\n\014DebugReq" +
      "uest\022\027\n\017sequence_number\030\001 \001(\003\022C\n\017set_bre" +
      "akpoints\030e \001(\0132(.skylark_debugging.SetBr" +
      "eakpointsRequestH\000\022I\n\022continue_execution" +
      "\030f \001(\0132+.skylark_debugging.ContinueExecu" +
      "tionRequestH\000\0226\n\010evaluate\030g \001(\0132\".skylar" +
      "k_debugging.EvaluateRequestH\000\022;\n\013list_fr" +
      "ames\030h \001(\0132$.skylark_debugging.ListFrame" +
      "sRequestH\000\022C\n\017start_debugging\030i \001(\0132(.sk" +
      "ylark_debugging.StartDebuggingRequestH\000\022" +
      "=\n\014pause_thread\030j \001(\0132%.skylark_debuggin" +
      "g.PauseThreadRequestH\000\022=\n\014get_children\030k" +
      " \001(\0132%.skylark_debugging.GetChildrenRequ" +
      "estH\000B\t\n\007payload\"J\n\025SetBreakpointsReques" +
      "t\0221\n\nbreakpoint\030\001 \003(\0132\035.skylark_debuggin" +
      "g.Breakpoint\"\\\n\030ContinueExecutionRequest" +
      "\022\021\n\tthread_id\030\001 \001(\003\022-\n\010stepping\030\002 \001(\0162\033." +
      "skylark_debugging.Stepping\"7\n\017EvaluateRe" +
      "quest\022\021\n\tthread_id\030\001 \001(\003\022\021\n\tstatement\030\002 " +
      "\001(\t\"&\n\021ListFramesRequest\022\021\n\tthread_id\030\001 " +
      "\001(\003\"\027\n\025StartDebuggingRequest\"\'\n\022PauseThr" +
      "eadRequest\022\021\n\tthread_id\030\001 \001(\003\"9\n\022GetChil" +
      "drenRequest\022\021\n\tthread_id\030\001 \001(\003\022\020\n\010value_" +
      "id\030\002 \001(\003\"\260\005\n\nDebugEvent\022\027\n\017sequence_numb" +
      "er\030\001 \001(\003\022)\n\005error\030c \001(\0132\030.skylark_debugg" +
      "ing.ErrorH\000\022D\n\017set_breakpoints\030e \001(\0132).s" +
      "kylark_debugging.SetBreakpointsResponseH" +
      "\000\022J\n\022continue_execution\030f \001(\0132,.skylark_" +
      "debugging.ContinueExecutionResponseH\000\0227\n" +
      "\010evaluate\030g \001(\0132#.skylark_debugging.Eval" +
      "uateResponseH\000\022<\n\013list_frames\030h \001(\0132%.sk" +
      "ylark_debugging.ListFramesResponseH\000\022D\n\017" +
      "start_debugging\030i \001(\0132).skylark_debuggin" +
      "g.StartDebuggingResponseH\000\022>\n\014pause_thre" +
      "ad\030j \001(\0132&.skylark_debugging.PauseThread" +
      "ResponseH\000\022>\n\014get_children\030k \001(\0132&.skyla" +
      "rk_debugging.GetChildrenResponseH\000\022>\n\rth" +
      "read_paused\030\351\007 \001(\0132$.skylark_debugging.T" +
      "hreadPausedEventH\000\022D\n\020thread_continued\030\352" +
      "\007 \001(\0132\'.skylark_debugging.ThreadContinue" +
      "dEventH\000B\t\n\007payload\"\030\n\005Error\022\017\n\007message\030" +
      "\001 \001(\t\"\030\n\026SetBreakpointsResponse\"\033\n\031Conti" +
      "nueExecutionResponse\"<\n\020EvaluateResponse" +
      "\022(\n\006result\030\001 \001(\0132\030.skylark_debugging.Val" +
      "ue\"=\n\022ListFramesResponse\022\'\n\005frame\030\001 \003(\0132" +
      "\030.skylark_debugging.Frame\"\030\n\026StartDebugg" +
      "ingResponse\"\025\n\023PauseThreadResponse\"A\n\023Ge" +
      "tChildrenResponse\022*\n\010children\030\001 \003(\0132\030.sk" +
      "ylark_debugging.Value\"D\n\021ThreadPausedEve" +
      "nt\022/\n\006thread\030\001 \001(\0132\037.skylark_debugging.P" +
      "ausedThread\")\n\024ThreadContinuedEvent\022\021\n\tt" +
      "hread_id\030\001 \001(\003\"^\n\nBreakpoint\022/\n\010location" +
      "\030\001 \001(\0132\033.skylark_debugging.LocationH\000\022\022\n" +
      "\nexpression\030\002 \001(\tB\013\n\tcondition\"v\n\005Frame\022" +
      "\025\n\rfunction_name\030\001 \001(\t\022\'\n\005scope\030\002 \003(\0132\030." +
      "skylark_debugging.Scope\022-\n\010location\030\003 \001(" +
      "\0132\033.skylark_debugging.Location\"D\n\010Locati" +
      "on\022\014\n\004path\030\001 \001(\t\022\023\n\013line_number\030\002 \001(\r\022\025\n" +
      "\rcolumn_number\030\003 \001(\r\"@\n\005Scope\022\014\n\004name\030\001 " +
      "\001(\t\022)\n\007binding\030\002 \003(\0132\030.skylark_debugging" +
      ".Value\"\315\001\n\014PausedThread\022\n\n\002id\030\001 \001(\003\022\014\n\004n" +
      "ame\030\002 \001(\t\0224\n\014pause_reason\030\003 \001(\0162\036.skylar" +
      "k_debugging.PauseReason\022-\n\010location\030\004 \001(" +
      "\0132\033.skylark_debugging.Location\022>\n\034condit" +
      "ional_breakpoint_error\030\005 \001(\0132\030.skylark_d" +
      "ebugging.Error\"[\n\005Value\022\r\n\005label\030\001 \001(\t\022\023" +
      "\n\013description\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\022\024\n\014has" +
      "_children\030\004 \001(\010\022\n\n\002id\030\005 \001(\003*1\n\010Stepping\022" +
      "\010\n\004NONE\020\000\022\010\n\004INTO\020\001\022\010\n\004OVER\020\002\022\007\n\003OUT\020\003*\240" +
      "\001\n\013PauseReason\022\t\n\005UNSET\020\000\022\014\n\010STEPPING\020\001\022" +
      "\026\n\022ALL_THREADS_PAUSED\020\002\022\030\n\024PAUSE_THREAD_" +
      "REQUEST\020\003\022\022\n\016HIT_BREAKPOINT\020\004\022 \n\034CONDITI" +
      "ONAL_BREAKPOINT_ERROR\020\005\022\020\n\014INITIALIZING\020" +
      "\006BH\n.com.google.devtools.build.lib.skyla" +
      "rkdebuggingB\026SkylarkDebuggingProtosb\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_skylark_debugging_DebugRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_skylark_debugging_DebugRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_DebugRequest_descriptor,
        new java.lang.String[] { "SequenceNumber", "SetBreakpoints", "ContinueExecution", "Evaluate", "ListFrames", "StartDebugging", "PauseThread", "GetChildren", "Payload", });
    internal_static_skylark_debugging_SetBreakpointsRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_skylark_debugging_SetBreakpointsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_SetBreakpointsRequest_descriptor,
        new java.lang.String[] { "Breakpoint", });
    internal_static_skylark_debugging_ContinueExecutionRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_skylark_debugging_ContinueExecutionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_ContinueExecutionRequest_descriptor,
        new java.lang.String[] { "ThreadId", "Stepping", });
    internal_static_skylark_debugging_EvaluateRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_skylark_debugging_EvaluateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_EvaluateRequest_descriptor,
        new java.lang.String[] { "ThreadId", "Statement", });
    internal_static_skylark_debugging_ListFramesRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_skylark_debugging_ListFramesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_ListFramesRequest_descriptor,
        new java.lang.String[] { "ThreadId", });
    internal_static_skylark_debugging_StartDebuggingRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_skylark_debugging_StartDebuggingRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_StartDebuggingRequest_descriptor,
        new java.lang.String[] { });
    internal_static_skylark_debugging_PauseThreadRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_skylark_debugging_PauseThreadRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_PauseThreadRequest_descriptor,
        new java.lang.String[] { "ThreadId", });
    internal_static_skylark_debugging_GetChildrenRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_skylark_debugging_GetChildrenRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_GetChildrenRequest_descriptor,
        new java.lang.String[] { "ThreadId", "ValueId", });
    internal_static_skylark_debugging_DebugEvent_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_skylark_debugging_DebugEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_DebugEvent_descriptor,
        new java.lang.String[] { "SequenceNumber", "Error", "SetBreakpoints", "ContinueExecution", "Evaluate", "ListFrames", "StartDebugging", "PauseThread", "GetChildren", "ThreadPaused", "ThreadContinued", "Payload", });
    internal_static_skylark_debugging_Error_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_skylark_debugging_Error_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_Error_descriptor,
        new java.lang.String[] { "Message", });
    internal_static_skylark_debugging_SetBreakpointsResponse_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_skylark_debugging_SetBreakpointsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_SetBreakpointsResponse_descriptor,
        new java.lang.String[] { });
    internal_static_skylark_debugging_ContinueExecutionResponse_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_skylark_debugging_ContinueExecutionResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_ContinueExecutionResponse_descriptor,
        new java.lang.String[] { });
    internal_static_skylark_debugging_EvaluateResponse_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_skylark_debugging_EvaluateResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_EvaluateResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_skylark_debugging_ListFramesResponse_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_skylark_debugging_ListFramesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_ListFramesResponse_descriptor,
        new java.lang.String[] { "Frame", });
    internal_static_skylark_debugging_StartDebuggingResponse_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_skylark_debugging_StartDebuggingResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_StartDebuggingResponse_descriptor,
        new java.lang.String[] { });
    internal_static_skylark_debugging_PauseThreadResponse_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_skylark_debugging_PauseThreadResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_PauseThreadResponse_descriptor,
        new java.lang.String[] { });
    internal_static_skylark_debugging_GetChildrenResponse_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_skylark_debugging_GetChildrenResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_GetChildrenResponse_descriptor,
        new java.lang.String[] { "Children", });
    internal_static_skylark_debugging_ThreadPausedEvent_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_skylark_debugging_ThreadPausedEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_ThreadPausedEvent_descriptor,
        new java.lang.String[] { "Thread", });
    internal_static_skylark_debugging_ThreadContinuedEvent_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_skylark_debugging_ThreadContinuedEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_ThreadContinuedEvent_descriptor,
        new java.lang.String[] { "ThreadId", });
    internal_static_skylark_debugging_Breakpoint_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_skylark_debugging_Breakpoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_Breakpoint_descriptor,
        new java.lang.String[] { "Location", "Expression", "Condition", });
    internal_static_skylark_debugging_Frame_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_skylark_debugging_Frame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_Frame_descriptor,
        new java.lang.String[] { "FunctionName", "Scope", "Location", });
    internal_static_skylark_debugging_Location_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_skylark_debugging_Location_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_Location_descriptor,
        new java.lang.String[] { "Path", "LineNumber", "ColumnNumber", });
    internal_static_skylark_debugging_Scope_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_skylark_debugging_Scope_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_Scope_descriptor,
        new java.lang.String[] { "Name", "Binding", });
    internal_static_skylark_debugging_PausedThread_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_skylark_debugging_PausedThread_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_PausedThread_descriptor,
        new java.lang.String[] { "Id", "Name", "PauseReason", "Location", "ConditionalBreakpointError", });
    internal_static_skylark_debugging_Value_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_skylark_debugging_Value_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skylark_debugging_Value_descriptor,
        new java.lang.String[] { "Label", "Description", "Type", "HasChildren", "Id", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
