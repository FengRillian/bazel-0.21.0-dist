// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/protobuf/android_deploy_info.proto

package com.google.devtools.build.lib.rules.android.deployinfo;

public final class AndroidDeployInfoOuterClass {
  private AndroidDeployInfoOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ArtifactOrBuilder extends
      // @@protoc_insertion_point(interface_extends:blaze.Artifact)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * This path is relative to "bazel info execution_root"
     * </pre>
     *
     * <code>string exec_root_path = 1;</code>
     */
    java.lang.String getExecRootPath();
    /**
     * <pre>
     * This path is relative to "bazel info execution_root"
     * </pre>
     *
     * <code>string exec_root_path = 1;</code>
     */
    com.google.protobuf.ByteString
        getExecRootPathBytes();
  }
  /**
   * Protobuf type {@code blaze.Artifact}
   */
  public  static final class Artifact extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:blaze.Artifact)
      ArtifactOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Artifact.newBuilder() to construct.
    private Artifact(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Artifact() {
      execRootPath_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Artifact(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              execRootPath_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.internal_static_blaze_Artifact_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.internal_static_blaze_Artifact_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.class, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder.class);
    }

    public static final int EXEC_ROOT_PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object execRootPath_;
    /**
     * <pre>
     * This path is relative to "bazel info execution_root"
     * </pre>
     *
     * <code>string exec_root_path = 1;</code>
     */
    public java.lang.String getExecRootPath() {
      java.lang.Object ref = execRootPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        execRootPath_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * This path is relative to "bazel info execution_root"
     * </pre>
     *
     * <code>string exec_root_path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getExecRootPathBytes() {
      java.lang.Object ref = execRootPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        execRootPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getExecRootPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, execRootPath_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getExecRootPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, execRootPath_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact other = (com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact) obj;

      boolean result = true;
      result = result && getExecRootPath()
          .equals(other.getExecRootPath());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EXEC_ROOT_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getExecRootPath().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code blaze.Artifact}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:blaze.Artifact)
        com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.internal_static_blaze_Artifact_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.internal_static_blaze_Artifact_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.class, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        execRootPath_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.internal_static_blaze_Artifact_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getDefaultInstanceForType() {
        return com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact build() {
        com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact buildPartial() {
        com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact result = new com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact(this);
        result.execRootPath_ = execRootPath_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact) {
          return mergeFrom((com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact other) {
        if (other == com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.getDefaultInstance()) return this;
        if (!other.getExecRootPath().isEmpty()) {
          execRootPath_ = other.execRootPath_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object execRootPath_ = "";
      /**
       * <pre>
       * This path is relative to "bazel info execution_root"
       * </pre>
       *
       * <code>string exec_root_path = 1;</code>
       */
      public java.lang.String getExecRootPath() {
        java.lang.Object ref = execRootPath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          execRootPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * This path is relative to "bazel info execution_root"
       * </pre>
       *
       * <code>string exec_root_path = 1;</code>
       */
      public com.google.protobuf.ByteString
          getExecRootPathBytes() {
        java.lang.Object ref = execRootPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          execRootPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * This path is relative to "bazel info execution_root"
       * </pre>
       *
       * <code>string exec_root_path = 1;</code>
       */
      public Builder setExecRootPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        execRootPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This path is relative to "bazel info execution_root"
       * </pre>
       *
       * <code>string exec_root_path = 1;</code>
       */
      public Builder clearExecRootPath() {
        
        execRootPath_ = getDefaultInstance().getExecRootPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This path is relative to "bazel info execution_root"
       * </pre>
       *
       * <code>string exec_root_path = 1;</code>
       */
      public Builder setExecRootPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        execRootPath_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:blaze.Artifact)
    }

    // @@protoc_insertion_point(class_scope:blaze.Artifact)
    private static final com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact();
    }

    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Artifact>
        PARSER = new com.google.protobuf.AbstractParser<Artifact>() {
      @java.lang.Override
      public Artifact parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Artifact(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Artifact> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Artifact> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AndroidDeployInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:blaze.AndroidDeployInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The merged manifest in the resource APK
     * </pre>
     *
     * <code>.blaze.Artifact merged_manifest = 1;</code>
     */
    boolean hasMergedManifest();
    /**
     * <pre>
     * The merged manifest in the resource APK
     * </pre>
     *
     * <code>.blaze.Artifact merged_manifest = 1;</code>
     */
    com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getMergedManifest();
    /**
     * <pre>
     * The merged manifest in the resource APK
     * </pre>
     *
     * <code>.blaze.Artifact merged_manifest = 1;</code>
     */
    com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder getMergedManifestOrBuilder();

    /**
     * <pre>
     * Merged manifests of dependencies
     * </pre>
     *
     * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
     */
    java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> 
        getAdditionalMergedManifestsList();
    /**
     * <pre>
     * Merged manifests of dependencies
     * </pre>
     *
     * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
     */
    com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getAdditionalMergedManifests(int index);
    /**
     * <pre>
     * Merged manifests of dependencies
     * </pre>
     *
     * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
     */
    int getAdditionalMergedManifestsCount();
    /**
     * <pre>
     * Merged manifests of dependencies
     * </pre>
     *
     * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
     */
    java.util.List<? extends com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
        getAdditionalMergedManifestsOrBuilderList();
    /**
     * <pre>
     * Merged manifests of dependencies
     * </pre>
     *
     * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
     */
    com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder getAdditionalMergedManifestsOrBuilder(
        int index);

    /**
     * <pre>
     * If the build supports an external deploy, this will have the APKs.
     * mobile-install does its own deployment, so this list will be empty
     * </pre>
     *
     * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
     */
    java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> 
        getApksToDeployList();
    /**
     * <pre>
     * If the build supports an external deploy, this will have the APKs.
     * mobile-install does its own deployment, so this list will be empty
     * </pre>
     *
     * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
     */
    com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getApksToDeploy(int index);
    /**
     * <pre>
     * If the build supports an external deploy, this will have the APKs.
     * mobile-install does its own deployment, so this list will be empty
     * </pre>
     *
     * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
     */
    int getApksToDeployCount();
    /**
     * <pre>
     * If the build supports an external deploy, this will have the APKs.
     * mobile-install does its own deployment, so this list will be empty
     * </pre>
     *
     * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
     */
    java.util.List<? extends com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
        getApksToDeployOrBuilderList();
    /**
     * <pre>
     * If the build supports an external deploy, this will have the APKs.
     * mobile-install does its own deployment, so this list will be empty
     * </pre>
     *
     * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
     */
    com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder getApksToDeployOrBuilder(
        int index);

    /**
     * <pre>
     * Unused
     * </pre>
     *
     * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
     */
    java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> 
        getDataToDeployList();
    /**
     * <pre>
     * Unused
     * </pre>
     *
     * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
     */
    com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getDataToDeploy(int index);
    /**
     * <pre>
     * Unused
     * </pre>
     *
     * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
     */
    int getDataToDeployCount();
    /**
     * <pre>
     * Unused
     * </pre>
     *
     * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
     */
    java.util.List<? extends com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
        getDataToDeployOrBuilderList();
    /**
     * <pre>
     * Unused
     * </pre>
     *
     * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
     */
    com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder getDataToDeployOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Information about how to deploy and launch the result of an android build
   * </pre>
   *
   * Protobuf type {@code blaze.AndroidDeployInfo}
   */
  public  static final class AndroidDeployInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:blaze.AndroidDeployInfo)
      AndroidDeployInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AndroidDeployInfo.newBuilder() to construct.
    private AndroidDeployInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AndroidDeployInfo() {
      additionalMergedManifests_ = java.util.Collections.emptyList();
      apksToDeploy_ = java.util.Collections.emptyList();
      dataToDeploy_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AndroidDeployInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder subBuilder = null;
              if (mergedManifest_ != null) {
                subBuilder = mergedManifest_.toBuilder();
              }
              mergedManifest_ = input.readMessage(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mergedManifest_);
                mergedManifest_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                additionalMergedManifests_ = new java.util.ArrayList<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact>();
                mutable_bitField0_ |= 0x00000002;
              }
              additionalMergedManifests_.add(
                  input.readMessage(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                apksToDeploy_ = new java.util.ArrayList<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact>();
                mutable_bitField0_ |= 0x00000004;
              }
              apksToDeploy_.add(
                  input.readMessage(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                dataToDeploy_ = new java.util.ArrayList<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact>();
                mutable_bitField0_ |= 0x00000008;
              }
              dataToDeploy_.add(
                  input.readMessage(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          additionalMergedManifests_ = java.util.Collections.unmodifiableList(additionalMergedManifests_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          apksToDeploy_ = java.util.Collections.unmodifiableList(apksToDeploy_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          dataToDeploy_ = java.util.Collections.unmodifiableList(dataToDeploy_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.internal_static_blaze_AndroidDeployInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.internal_static_blaze_AndroidDeployInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo.class, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo.Builder.class);
    }

    private int bitField0_;
    public static final int MERGED_MANIFEST_FIELD_NUMBER = 1;
    private com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact mergedManifest_;
    /**
     * <pre>
     * The merged manifest in the resource APK
     * </pre>
     *
     * <code>.blaze.Artifact merged_manifest = 1;</code>
     */
    public boolean hasMergedManifest() {
      return mergedManifest_ != null;
    }
    /**
     * <pre>
     * The merged manifest in the resource APK
     * </pre>
     *
     * <code>.blaze.Artifact merged_manifest = 1;</code>
     */
    public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getMergedManifest() {
      return mergedManifest_ == null ? com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.getDefaultInstance() : mergedManifest_;
    }
    /**
     * <pre>
     * The merged manifest in the resource APK
     * </pre>
     *
     * <code>.blaze.Artifact merged_manifest = 1;</code>
     */
    public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder getMergedManifestOrBuilder() {
      return getMergedManifest();
    }

    public static final int ADDITIONAL_MERGED_MANIFESTS_FIELD_NUMBER = 2;
    private java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> additionalMergedManifests_;
    /**
     * <pre>
     * Merged manifests of dependencies
     * </pre>
     *
     * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
     */
    public java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> getAdditionalMergedManifestsList() {
      return additionalMergedManifests_;
    }
    /**
     * <pre>
     * Merged manifests of dependencies
     * </pre>
     *
     * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
     */
    public java.util.List<? extends com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
        getAdditionalMergedManifestsOrBuilderList() {
      return additionalMergedManifests_;
    }
    /**
     * <pre>
     * Merged manifests of dependencies
     * </pre>
     *
     * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
     */
    public int getAdditionalMergedManifestsCount() {
      return additionalMergedManifests_.size();
    }
    /**
     * <pre>
     * Merged manifests of dependencies
     * </pre>
     *
     * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
     */
    public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getAdditionalMergedManifests(int index) {
      return additionalMergedManifests_.get(index);
    }
    /**
     * <pre>
     * Merged manifests of dependencies
     * </pre>
     *
     * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
     */
    public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder getAdditionalMergedManifestsOrBuilder(
        int index) {
      return additionalMergedManifests_.get(index);
    }

    public static final int APKS_TO_DEPLOY_FIELD_NUMBER = 3;
    private java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> apksToDeploy_;
    /**
     * <pre>
     * If the build supports an external deploy, this will have the APKs.
     * mobile-install does its own deployment, so this list will be empty
     * </pre>
     *
     * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
     */
    public java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> getApksToDeployList() {
      return apksToDeploy_;
    }
    /**
     * <pre>
     * If the build supports an external deploy, this will have the APKs.
     * mobile-install does its own deployment, so this list will be empty
     * </pre>
     *
     * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
     */
    public java.util.List<? extends com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
        getApksToDeployOrBuilderList() {
      return apksToDeploy_;
    }
    /**
     * <pre>
     * If the build supports an external deploy, this will have the APKs.
     * mobile-install does its own deployment, so this list will be empty
     * </pre>
     *
     * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
     */
    public int getApksToDeployCount() {
      return apksToDeploy_.size();
    }
    /**
     * <pre>
     * If the build supports an external deploy, this will have the APKs.
     * mobile-install does its own deployment, so this list will be empty
     * </pre>
     *
     * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
     */
    public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getApksToDeploy(int index) {
      return apksToDeploy_.get(index);
    }
    /**
     * <pre>
     * If the build supports an external deploy, this will have the APKs.
     * mobile-install does its own deployment, so this list will be empty
     * </pre>
     *
     * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
     */
    public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder getApksToDeployOrBuilder(
        int index) {
      return apksToDeploy_.get(index);
    }

    public static final int DATA_TO_DEPLOY_FIELD_NUMBER = 4;
    private java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> dataToDeploy_;
    /**
     * <pre>
     * Unused
     * </pre>
     *
     * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
     */
    public java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> getDataToDeployList() {
      return dataToDeploy_;
    }
    /**
     * <pre>
     * Unused
     * </pre>
     *
     * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
     */
    public java.util.List<? extends com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
        getDataToDeployOrBuilderList() {
      return dataToDeploy_;
    }
    /**
     * <pre>
     * Unused
     * </pre>
     *
     * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
     */
    public int getDataToDeployCount() {
      return dataToDeploy_.size();
    }
    /**
     * <pre>
     * Unused
     * </pre>
     *
     * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
     */
    public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getDataToDeploy(int index) {
      return dataToDeploy_.get(index);
    }
    /**
     * <pre>
     * Unused
     * </pre>
     *
     * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
     */
    public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder getDataToDeployOrBuilder(
        int index) {
      return dataToDeploy_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mergedManifest_ != null) {
        output.writeMessage(1, getMergedManifest());
      }
      for (int i = 0; i < additionalMergedManifests_.size(); i++) {
        output.writeMessage(2, additionalMergedManifests_.get(i));
      }
      for (int i = 0; i < apksToDeploy_.size(); i++) {
        output.writeMessage(3, apksToDeploy_.get(i));
      }
      for (int i = 0; i < dataToDeploy_.size(); i++) {
        output.writeMessage(4, dataToDeploy_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mergedManifest_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMergedManifest());
      }
      for (int i = 0; i < additionalMergedManifests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, additionalMergedManifests_.get(i));
      }
      for (int i = 0; i < apksToDeploy_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, apksToDeploy_.get(i));
      }
      for (int i = 0; i < dataToDeploy_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, dataToDeploy_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo other = (com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo) obj;

      boolean result = true;
      result = result && (hasMergedManifest() == other.hasMergedManifest());
      if (hasMergedManifest()) {
        result = result && getMergedManifest()
            .equals(other.getMergedManifest());
      }
      result = result && getAdditionalMergedManifestsList()
          .equals(other.getAdditionalMergedManifestsList());
      result = result && getApksToDeployList()
          .equals(other.getApksToDeployList());
      result = result && getDataToDeployList()
          .equals(other.getDataToDeployList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMergedManifest()) {
        hash = (37 * hash) + MERGED_MANIFEST_FIELD_NUMBER;
        hash = (53 * hash) + getMergedManifest().hashCode();
      }
      if (getAdditionalMergedManifestsCount() > 0) {
        hash = (37 * hash) + ADDITIONAL_MERGED_MANIFESTS_FIELD_NUMBER;
        hash = (53 * hash) + getAdditionalMergedManifestsList().hashCode();
      }
      if (getApksToDeployCount() > 0) {
        hash = (37 * hash) + APKS_TO_DEPLOY_FIELD_NUMBER;
        hash = (53 * hash) + getApksToDeployList().hashCode();
      }
      if (getDataToDeployCount() > 0) {
        hash = (37 * hash) + DATA_TO_DEPLOY_FIELD_NUMBER;
        hash = (53 * hash) + getDataToDeployList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Information about how to deploy and launch the result of an android build
     * </pre>
     *
     * Protobuf type {@code blaze.AndroidDeployInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:blaze.AndroidDeployInfo)
        com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.internal_static_blaze_AndroidDeployInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.internal_static_blaze_AndroidDeployInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo.class, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAdditionalMergedManifestsFieldBuilder();
          getApksToDeployFieldBuilder();
          getDataToDeployFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (mergedManifestBuilder_ == null) {
          mergedManifest_ = null;
        } else {
          mergedManifest_ = null;
          mergedManifestBuilder_ = null;
        }
        if (additionalMergedManifestsBuilder_ == null) {
          additionalMergedManifests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          additionalMergedManifestsBuilder_.clear();
        }
        if (apksToDeployBuilder_ == null) {
          apksToDeploy_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          apksToDeployBuilder_.clear();
        }
        if (dataToDeployBuilder_ == null) {
          dataToDeploy_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          dataToDeployBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.internal_static_blaze_AndroidDeployInfo_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo getDefaultInstanceForType() {
        return com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo build() {
        com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo buildPartial() {
        com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo result = new com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (mergedManifestBuilder_ == null) {
          result.mergedManifest_ = mergedManifest_;
        } else {
          result.mergedManifest_ = mergedManifestBuilder_.build();
        }
        if (additionalMergedManifestsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            additionalMergedManifests_ = java.util.Collections.unmodifiableList(additionalMergedManifests_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.additionalMergedManifests_ = additionalMergedManifests_;
        } else {
          result.additionalMergedManifests_ = additionalMergedManifestsBuilder_.build();
        }
        if (apksToDeployBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            apksToDeploy_ = java.util.Collections.unmodifiableList(apksToDeploy_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.apksToDeploy_ = apksToDeploy_;
        } else {
          result.apksToDeploy_ = apksToDeployBuilder_.build();
        }
        if (dataToDeployBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            dataToDeploy_ = java.util.Collections.unmodifiableList(dataToDeploy_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.dataToDeploy_ = dataToDeploy_;
        } else {
          result.dataToDeploy_ = dataToDeployBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo) {
          return mergeFrom((com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo other) {
        if (other == com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo.getDefaultInstance()) return this;
        if (other.hasMergedManifest()) {
          mergeMergedManifest(other.getMergedManifest());
        }
        if (additionalMergedManifestsBuilder_ == null) {
          if (!other.additionalMergedManifests_.isEmpty()) {
            if (additionalMergedManifests_.isEmpty()) {
              additionalMergedManifests_ = other.additionalMergedManifests_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAdditionalMergedManifestsIsMutable();
              additionalMergedManifests_.addAll(other.additionalMergedManifests_);
            }
            onChanged();
          }
        } else {
          if (!other.additionalMergedManifests_.isEmpty()) {
            if (additionalMergedManifestsBuilder_.isEmpty()) {
              additionalMergedManifestsBuilder_.dispose();
              additionalMergedManifestsBuilder_ = null;
              additionalMergedManifests_ = other.additionalMergedManifests_;
              bitField0_ = (bitField0_ & ~0x00000002);
              additionalMergedManifestsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAdditionalMergedManifestsFieldBuilder() : null;
            } else {
              additionalMergedManifestsBuilder_.addAllMessages(other.additionalMergedManifests_);
            }
          }
        }
        if (apksToDeployBuilder_ == null) {
          if (!other.apksToDeploy_.isEmpty()) {
            if (apksToDeploy_.isEmpty()) {
              apksToDeploy_ = other.apksToDeploy_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureApksToDeployIsMutable();
              apksToDeploy_.addAll(other.apksToDeploy_);
            }
            onChanged();
          }
        } else {
          if (!other.apksToDeploy_.isEmpty()) {
            if (apksToDeployBuilder_.isEmpty()) {
              apksToDeployBuilder_.dispose();
              apksToDeployBuilder_ = null;
              apksToDeploy_ = other.apksToDeploy_;
              bitField0_ = (bitField0_ & ~0x00000004);
              apksToDeployBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getApksToDeployFieldBuilder() : null;
            } else {
              apksToDeployBuilder_.addAllMessages(other.apksToDeploy_);
            }
          }
        }
        if (dataToDeployBuilder_ == null) {
          if (!other.dataToDeploy_.isEmpty()) {
            if (dataToDeploy_.isEmpty()) {
              dataToDeploy_ = other.dataToDeploy_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureDataToDeployIsMutable();
              dataToDeploy_.addAll(other.dataToDeploy_);
            }
            onChanged();
          }
        } else {
          if (!other.dataToDeploy_.isEmpty()) {
            if (dataToDeployBuilder_.isEmpty()) {
              dataToDeployBuilder_.dispose();
              dataToDeployBuilder_ = null;
              dataToDeploy_ = other.dataToDeploy_;
              bitField0_ = (bitField0_ & ~0x00000008);
              dataToDeployBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDataToDeployFieldBuilder() : null;
            } else {
              dataToDeployBuilder_.addAllMessages(other.dataToDeploy_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact mergedManifest_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> mergedManifestBuilder_;
      /**
       * <pre>
       * The merged manifest in the resource APK
       * </pre>
       *
       * <code>.blaze.Artifact merged_manifest = 1;</code>
       */
      public boolean hasMergedManifest() {
        return mergedManifestBuilder_ != null || mergedManifest_ != null;
      }
      /**
       * <pre>
       * The merged manifest in the resource APK
       * </pre>
       *
       * <code>.blaze.Artifact merged_manifest = 1;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getMergedManifest() {
        if (mergedManifestBuilder_ == null) {
          return mergedManifest_ == null ? com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.getDefaultInstance() : mergedManifest_;
        } else {
          return mergedManifestBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The merged manifest in the resource APK
       * </pre>
       *
       * <code>.blaze.Artifact merged_manifest = 1;</code>
       */
      public Builder setMergedManifest(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact value) {
        if (mergedManifestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mergedManifest_ = value;
          onChanged();
        } else {
          mergedManifestBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The merged manifest in the resource APK
       * </pre>
       *
       * <code>.blaze.Artifact merged_manifest = 1;</code>
       */
      public Builder setMergedManifest(
          com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder builderForValue) {
        if (mergedManifestBuilder_ == null) {
          mergedManifest_ = builderForValue.build();
          onChanged();
        } else {
          mergedManifestBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The merged manifest in the resource APK
       * </pre>
       *
       * <code>.blaze.Artifact merged_manifest = 1;</code>
       */
      public Builder mergeMergedManifest(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact value) {
        if (mergedManifestBuilder_ == null) {
          if (mergedManifest_ != null) {
            mergedManifest_ =
              com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.newBuilder(mergedManifest_).mergeFrom(value).buildPartial();
          } else {
            mergedManifest_ = value;
          }
          onChanged();
        } else {
          mergedManifestBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The merged manifest in the resource APK
       * </pre>
       *
       * <code>.blaze.Artifact merged_manifest = 1;</code>
       */
      public Builder clearMergedManifest() {
        if (mergedManifestBuilder_ == null) {
          mergedManifest_ = null;
          onChanged();
        } else {
          mergedManifest_ = null;
          mergedManifestBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The merged manifest in the resource APK
       * </pre>
       *
       * <code>.blaze.Artifact merged_manifest = 1;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder getMergedManifestBuilder() {
        
        onChanged();
        return getMergedManifestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The merged manifest in the resource APK
       * </pre>
       *
       * <code>.blaze.Artifact merged_manifest = 1;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder getMergedManifestOrBuilder() {
        if (mergedManifestBuilder_ != null) {
          return mergedManifestBuilder_.getMessageOrBuilder();
        } else {
          return mergedManifest_ == null ?
              com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.getDefaultInstance() : mergedManifest_;
        }
      }
      /**
       * <pre>
       * The merged manifest in the resource APK
       * </pre>
       *
       * <code>.blaze.Artifact merged_manifest = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
          getMergedManifestFieldBuilder() {
        if (mergedManifestBuilder_ == null) {
          mergedManifestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder>(
                  getMergedManifest(),
                  getParentForChildren(),
                  isClean());
          mergedManifest_ = null;
        }
        return mergedManifestBuilder_;
      }

      private java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> additionalMergedManifests_ =
        java.util.Collections.emptyList();
      private void ensureAdditionalMergedManifestsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          additionalMergedManifests_ = new java.util.ArrayList<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact>(additionalMergedManifests_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> additionalMergedManifestsBuilder_;

      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> getAdditionalMergedManifestsList() {
        if (additionalMergedManifestsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(additionalMergedManifests_);
        } else {
          return additionalMergedManifestsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public int getAdditionalMergedManifestsCount() {
        if (additionalMergedManifestsBuilder_ == null) {
          return additionalMergedManifests_.size();
        } else {
          return additionalMergedManifestsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getAdditionalMergedManifests(int index) {
        if (additionalMergedManifestsBuilder_ == null) {
          return additionalMergedManifests_.get(index);
        } else {
          return additionalMergedManifestsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public Builder setAdditionalMergedManifests(
          int index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact value) {
        if (additionalMergedManifestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdditionalMergedManifestsIsMutable();
          additionalMergedManifests_.set(index, value);
          onChanged();
        } else {
          additionalMergedManifestsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public Builder setAdditionalMergedManifests(
          int index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder builderForValue) {
        if (additionalMergedManifestsBuilder_ == null) {
          ensureAdditionalMergedManifestsIsMutable();
          additionalMergedManifests_.set(index, builderForValue.build());
          onChanged();
        } else {
          additionalMergedManifestsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public Builder addAdditionalMergedManifests(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact value) {
        if (additionalMergedManifestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdditionalMergedManifestsIsMutable();
          additionalMergedManifests_.add(value);
          onChanged();
        } else {
          additionalMergedManifestsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public Builder addAdditionalMergedManifests(
          int index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact value) {
        if (additionalMergedManifestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdditionalMergedManifestsIsMutable();
          additionalMergedManifests_.add(index, value);
          onChanged();
        } else {
          additionalMergedManifestsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public Builder addAdditionalMergedManifests(
          com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder builderForValue) {
        if (additionalMergedManifestsBuilder_ == null) {
          ensureAdditionalMergedManifestsIsMutable();
          additionalMergedManifests_.add(builderForValue.build());
          onChanged();
        } else {
          additionalMergedManifestsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public Builder addAdditionalMergedManifests(
          int index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder builderForValue) {
        if (additionalMergedManifestsBuilder_ == null) {
          ensureAdditionalMergedManifestsIsMutable();
          additionalMergedManifests_.add(index, builderForValue.build());
          onChanged();
        } else {
          additionalMergedManifestsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public Builder addAllAdditionalMergedManifests(
          java.lang.Iterable<? extends com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> values) {
        if (additionalMergedManifestsBuilder_ == null) {
          ensureAdditionalMergedManifestsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, additionalMergedManifests_);
          onChanged();
        } else {
          additionalMergedManifestsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public Builder clearAdditionalMergedManifests() {
        if (additionalMergedManifestsBuilder_ == null) {
          additionalMergedManifests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          additionalMergedManifestsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public Builder removeAdditionalMergedManifests(int index) {
        if (additionalMergedManifestsBuilder_ == null) {
          ensureAdditionalMergedManifestsIsMutable();
          additionalMergedManifests_.remove(index);
          onChanged();
        } else {
          additionalMergedManifestsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder getAdditionalMergedManifestsBuilder(
          int index) {
        return getAdditionalMergedManifestsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder getAdditionalMergedManifestsOrBuilder(
          int index) {
        if (additionalMergedManifestsBuilder_ == null) {
          return additionalMergedManifests_.get(index);  } else {
          return additionalMergedManifestsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public java.util.List<? extends com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
           getAdditionalMergedManifestsOrBuilderList() {
        if (additionalMergedManifestsBuilder_ != null) {
          return additionalMergedManifestsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(additionalMergedManifests_);
        }
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder addAdditionalMergedManifestsBuilder() {
        return getAdditionalMergedManifestsFieldBuilder().addBuilder(
            com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.getDefaultInstance());
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder addAdditionalMergedManifestsBuilder(
          int index) {
        return getAdditionalMergedManifestsFieldBuilder().addBuilder(
            index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.getDefaultInstance());
      }
      /**
       * <pre>
       * Merged manifests of dependencies
       * </pre>
       *
       * <code>repeated .blaze.Artifact additional_merged_manifests = 2;</code>
       */
      public java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder> 
           getAdditionalMergedManifestsBuilderList() {
        return getAdditionalMergedManifestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
          getAdditionalMergedManifestsFieldBuilder() {
        if (additionalMergedManifestsBuilder_ == null) {
          additionalMergedManifestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder>(
                  additionalMergedManifests_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          additionalMergedManifests_ = null;
        }
        return additionalMergedManifestsBuilder_;
      }

      private java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> apksToDeploy_ =
        java.util.Collections.emptyList();
      private void ensureApksToDeployIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          apksToDeploy_ = new java.util.ArrayList<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact>(apksToDeploy_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> apksToDeployBuilder_;

      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> getApksToDeployList() {
        if (apksToDeployBuilder_ == null) {
          return java.util.Collections.unmodifiableList(apksToDeploy_);
        } else {
          return apksToDeployBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public int getApksToDeployCount() {
        if (apksToDeployBuilder_ == null) {
          return apksToDeploy_.size();
        } else {
          return apksToDeployBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getApksToDeploy(int index) {
        if (apksToDeployBuilder_ == null) {
          return apksToDeploy_.get(index);
        } else {
          return apksToDeployBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public Builder setApksToDeploy(
          int index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact value) {
        if (apksToDeployBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureApksToDeployIsMutable();
          apksToDeploy_.set(index, value);
          onChanged();
        } else {
          apksToDeployBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public Builder setApksToDeploy(
          int index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder builderForValue) {
        if (apksToDeployBuilder_ == null) {
          ensureApksToDeployIsMutable();
          apksToDeploy_.set(index, builderForValue.build());
          onChanged();
        } else {
          apksToDeployBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public Builder addApksToDeploy(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact value) {
        if (apksToDeployBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureApksToDeployIsMutable();
          apksToDeploy_.add(value);
          onChanged();
        } else {
          apksToDeployBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public Builder addApksToDeploy(
          int index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact value) {
        if (apksToDeployBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureApksToDeployIsMutable();
          apksToDeploy_.add(index, value);
          onChanged();
        } else {
          apksToDeployBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public Builder addApksToDeploy(
          com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder builderForValue) {
        if (apksToDeployBuilder_ == null) {
          ensureApksToDeployIsMutable();
          apksToDeploy_.add(builderForValue.build());
          onChanged();
        } else {
          apksToDeployBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public Builder addApksToDeploy(
          int index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder builderForValue) {
        if (apksToDeployBuilder_ == null) {
          ensureApksToDeployIsMutable();
          apksToDeploy_.add(index, builderForValue.build());
          onChanged();
        } else {
          apksToDeployBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public Builder addAllApksToDeploy(
          java.lang.Iterable<? extends com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> values) {
        if (apksToDeployBuilder_ == null) {
          ensureApksToDeployIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, apksToDeploy_);
          onChanged();
        } else {
          apksToDeployBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public Builder clearApksToDeploy() {
        if (apksToDeployBuilder_ == null) {
          apksToDeploy_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          apksToDeployBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public Builder removeApksToDeploy(int index) {
        if (apksToDeployBuilder_ == null) {
          ensureApksToDeployIsMutable();
          apksToDeploy_.remove(index);
          onChanged();
        } else {
          apksToDeployBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder getApksToDeployBuilder(
          int index) {
        return getApksToDeployFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder getApksToDeployOrBuilder(
          int index) {
        if (apksToDeployBuilder_ == null) {
          return apksToDeploy_.get(index);  } else {
          return apksToDeployBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public java.util.List<? extends com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
           getApksToDeployOrBuilderList() {
        if (apksToDeployBuilder_ != null) {
          return apksToDeployBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(apksToDeploy_);
        }
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder addApksToDeployBuilder() {
        return getApksToDeployFieldBuilder().addBuilder(
            com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.getDefaultInstance());
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder addApksToDeployBuilder(
          int index) {
        return getApksToDeployFieldBuilder().addBuilder(
            index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.getDefaultInstance());
      }
      /**
       * <pre>
       * If the build supports an external deploy, this will have the APKs.
       * mobile-install does its own deployment, so this list will be empty
       * </pre>
       *
       * <code>repeated .blaze.Artifact apks_to_deploy = 3;</code>
       */
      public java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder> 
           getApksToDeployBuilderList() {
        return getApksToDeployFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
          getApksToDeployFieldBuilder() {
        if (apksToDeployBuilder_ == null) {
          apksToDeployBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder>(
                  apksToDeploy_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          apksToDeploy_ = null;
        }
        return apksToDeployBuilder_;
      }

      private java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> dataToDeploy_ =
        java.util.Collections.emptyList();
      private void ensureDataToDeployIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          dataToDeploy_ = new java.util.ArrayList<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact>(dataToDeploy_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> dataToDeployBuilder_;

      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> getDataToDeployList() {
        if (dataToDeployBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dataToDeploy_);
        } else {
          return dataToDeployBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public int getDataToDeployCount() {
        if (dataToDeployBuilder_ == null) {
          return dataToDeploy_.size();
        } else {
          return dataToDeployBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact getDataToDeploy(int index) {
        if (dataToDeployBuilder_ == null) {
          return dataToDeploy_.get(index);
        } else {
          return dataToDeployBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public Builder setDataToDeploy(
          int index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact value) {
        if (dataToDeployBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataToDeployIsMutable();
          dataToDeploy_.set(index, value);
          onChanged();
        } else {
          dataToDeployBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public Builder setDataToDeploy(
          int index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder builderForValue) {
        if (dataToDeployBuilder_ == null) {
          ensureDataToDeployIsMutable();
          dataToDeploy_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataToDeployBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public Builder addDataToDeploy(com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact value) {
        if (dataToDeployBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataToDeployIsMutable();
          dataToDeploy_.add(value);
          onChanged();
        } else {
          dataToDeployBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public Builder addDataToDeploy(
          int index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact value) {
        if (dataToDeployBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataToDeployIsMutable();
          dataToDeploy_.add(index, value);
          onChanged();
        } else {
          dataToDeployBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public Builder addDataToDeploy(
          com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder builderForValue) {
        if (dataToDeployBuilder_ == null) {
          ensureDataToDeployIsMutable();
          dataToDeploy_.add(builderForValue.build());
          onChanged();
        } else {
          dataToDeployBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public Builder addDataToDeploy(
          int index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder builderForValue) {
        if (dataToDeployBuilder_ == null) {
          ensureDataToDeployIsMutable();
          dataToDeploy_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataToDeployBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public Builder addAllDataToDeploy(
          java.lang.Iterable<? extends com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact> values) {
        if (dataToDeployBuilder_ == null) {
          ensureDataToDeployIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dataToDeploy_);
          onChanged();
        } else {
          dataToDeployBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public Builder clearDataToDeploy() {
        if (dataToDeployBuilder_ == null) {
          dataToDeploy_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          dataToDeployBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public Builder removeDataToDeploy(int index) {
        if (dataToDeployBuilder_ == null) {
          ensureDataToDeployIsMutable();
          dataToDeploy_.remove(index);
          onChanged();
        } else {
          dataToDeployBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder getDataToDeployBuilder(
          int index) {
        return getDataToDeployFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder getDataToDeployOrBuilder(
          int index) {
        if (dataToDeployBuilder_ == null) {
          return dataToDeploy_.get(index);  } else {
          return dataToDeployBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public java.util.List<? extends com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
           getDataToDeployOrBuilderList() {
        if (dataToDeployBuilder_ != null) {
          return dataToDeployBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dataToDeploy_);
        }
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder addDataToDeployBuilder() {
        return getDataToDeployFieldBuilder().addBuilder(
            com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.getDefaultInstance());
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder addDataToDeployBuilder(
          int index) {
        return getDataToDeployFieldBuilder().addBuilder(
            index, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.getDefaultInstance());
      }
      /**
       * <pre>
       * Unused
       * </pre>
       *
       * <code>repeated .blaze.Artifact data_to_deploy = 4;</code>
       */
      public java.util.List<com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder> 
           getDataToDeployBuilderList() {
        return getDataToDeployFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder> 
          getDataToDeployFieldBuilder() {
        if (dataToDeployBuilder_ == null) {
          dataToDeployBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.Artifact.Builder, com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.ArtifactOrBuilder>(
                  dataToDeploy_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          dataToDeploy_ = null;
        }
        return dataToDeployBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:blaze.AndroidDeployInfo)
    }

    // @@protoc_insertion_point(class_scope:blaze.AndroidDeployInfo)
    private static final com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo();
    }

    public static com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AndroidDeployInfo>
        PARSER = new com.google.protobuf.AbstractParser<AndroidDeployInfo>() {
      @java.lang.Override
      public AndroidDeployInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AndroidDeployInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AndroidDeployInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AndroidDeployInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.rules.android.deployinfo.AndroidDeployInfoOuterClass.AndroidDeployInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_blaze_Artifact_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_blaze_Artifact_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_blaze_AndroidDeployInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_blaze_AndroidDeployInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+src/main/protobuf/android_deploy_info." +
      "proto\022\005blaze\"\"\n\010Artifact\022\026\n\016exec_root_pa" +
      "th\030\001 \001(\t\"\305\001\n\021AndroidDeployInfo\022(\n\017merged" +
      "_manifest\030\001 \001(\0132\017.blaze.Artifact\0224\n\033addi" +
      "tional_merged_manifests\030\002 \003(\0132\017.blaze.Ar" +
      "tifact\022\'\n\016apks_to_deploy\030\003 \003(\0132\017.blaze.A" +
      "rtifact\022\'\n\016data_to_deploy\030\004 \003(\0132\017.blaze." +
      "ArtifactB8\n6com.google.devtools.build.li" +
      "b.rules.android.deployinfob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_blaze_Artifact_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_blaze_Artifact_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_blaze_Artifact_descriptor,
        new java.lang.String[] { "ExecRootPath", });
    internal_static_blaze_AndroidDeployInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_blaze_AndroidDeployInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_blaze_AndroidDeployInfo_descriptor,
        new java.lang.String[] { "MergedManifest", "AdditionalMergedManifests", "ApksToDeploy", "DataToDeploy", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
