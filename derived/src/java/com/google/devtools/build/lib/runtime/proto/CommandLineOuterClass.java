// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/protobuf/command_line.proto

package com.google.devtools.build.lib.runtime.proto;

public final class CommandLineOuterClass {
  private CommandLineOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CommandLineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:command_line.CommandLine)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A title for this command line value, to differentiate it from others.
     * In particular, a single invocation may wish to report both the literal and
     * canonical command lines, and this label would be used to differentiate
     * between both versions. This is a string for flexibility.
     * </pre>
     *
     * <code>string command_line_label = 1;</code>
     */
    java.lang.String getCommandLineLabel();
    /**
     * <pre>
     * A title for this command line value, to differentiate it from others.
     * In particular, a single invocation may wish to report both the literal and
     * canonical command lines, and this label would be used to differentiate
     * between both versions. This is a string for flexibility.
     * </pre>
     *
     * <code>string command_line_label = 1;</code>
     */
    com.google.protobuf.ByteString
        getCommandLineLabelBytes();

    /**
     * <pre>
     * A Bazel command line is made of distinct parts. For example,
     *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
     * has the executable "bazel", a startup flag, a command "test", a command
     * flag, and a test target. There could be many more flags and targets, or
     * none (`bazel info` for example), but the basic structure is there. The
     * command line should be broken down into these logical sections here.
     * </pre>
     *
     * <code>repeated .command_line.CommandLineSection sections = 2;</code>
     */
    java.util.List<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection> 
        getSectionsList();
    /**
     * <pre>
     * A Bazel command line is made of distinct parts. For example,
     *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
     * has the executable "bazel", a startup flag, a command "test", a command
     * flag, and a test target. There could be many more flags and targets, or
     * none (`bazel info` for example), but the basic structure is there. The
     * command line should be broken down into these logical sections here.
     * </pre>
     *
     * <code>repeated .command_line.CommandLineSection sections = 2;</code>
     */
    com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection getSections(int index);
    /**
     * <pre>
     * A Bazel command line is made of distinct parts. For example,
     *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
     * has the executable "bazel", a startup flag, a command "test", a command
     * flag, and a test target. There could be many more flags and targets, or
     * none (`bazel info` for example), but the basic structure is there. The
     * command line should be broken down into these logical sections here.
     * </pre>
     *
     * <code>repeated .command_line.CommandLineSection sections = 2;</code>
     */
    int getSectionsCount();
    /**
     * <pre>
     * A Bazel command line is made of distinct parts. For example,
     *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
     * has the executable "bazel", a startup flag, a command "test", a command
     * flag, and a test target. There could be many more flags and targets, or
     * none (`bazel info` for example), but the basic structure is there. The
     * command line should be broken down into these logical sections here.
     * </pre>
     *
     * <code>repeated .command_line.CommandLineSection sections = 2;</code>
     */
    java.util.List<? extends com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSectionOrBuilder> 
        getSectionsOrBuilderList();
    /**
     * <pre>
     * A Bazel command line is made of distinct parts. For example,
     *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
     * has the executable "bazel", a startup flag, a command "test", a command
     * flag, and a test target. There could be many more flags and targets, or
     * none (`bazel info` for example), but the basic structure is there. The
     * command line should be broken down into these logical sections here.
     * </pre>
     *
     * <code>repeated .command_line.CommandLineSection sections = 2;</code>
     */
    com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSectionOrBuilder getSectionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Representation of a Bazel command line.
   * </pre>
   *
   * Protobuf type {@code command_line.CommandLine}
   */
  public  static final class CommandLine extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:command_line.CommandLine)
      CommandLineOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CommandLine.newBuilder() to construct.
    private CommandLine(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CommandLine() {
      commandLineLabel_ = "";
      sections_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CommandLine(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              commandLineLabel_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sections_ = new java.util.ArrayList<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection>();
                mutable_bitField0_ |= 0x00000002;
              }
              sections_.add(
                  input.readMessage(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sections_ = java.util.Collections.unmodifiableList(sections_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_CommandLine_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_CommandLine_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine.class, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine.Builder.class);
    }

    private int bitField0_;
    public static final int COMMAND_LINE_LABEL_FIELD_NUMBER = 1;
    private volatile java.lang.Object commandLineLabel_;
    /**
     * <pre>
     * A title for this command line value, to differentiate it from others.
     * In particular, a single invocation may wish to report both the literal and
     * canonical command lines, and this label would be used to differentiate
     * between both versions. This is a string for flexibility.
     * </pre>
     *
     * <code>string command_line_label = 1;</code>
     */
    public java.lang.String getCommandLineLabel() {
      java.lang.Object ref = commandLineLabel_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commandLineLabel_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A title for this command line value, to differentiate it from others.
     * In particular, a single invocation may wish to report both the literal and
     * canonical command lines, and this label would be used to differentiate
     * between both versions. This is a string for flexibility.
     * </pre>
     *
     * <code>string command_line_label = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCommandLineLabelBytes() {
      java.lang.Object ref = commandLineLabel_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commandLineLabel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SECTIONS_FIELD_NUMBER = 2;
    private java.util.List<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection> sections_;
    /**
     * <pre>
     * A Bazel command line is made of distinct parts. For example,
     *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
     * has the executable "bazel", a startup flag, a command "test", a command
     * flag, and a test target. There could be many more flags and targets, or
     * none (`bazel info` for example), but the basic structure is there. The
     * command line should be broken down into these logical sections here.
     * </pre>
     *
     * <code>repeated .command_line.CommandLineSection sections = 2;</code>
     */
    public java.util.List<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection> getSectionsList() {
      return sections_;
    }
    /**
     * <pre>
     * A Bazel command line is made of distinct parts. For example,
     *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
     * has the executable "bazel", a startup flag, a command "test", a command
     * flag, and a test target. There could be many more flags and targets, or
     * none (`bazel info` for example), but the basic structure is there. The
     * command line should be broken down into these logical sections here.
     * </pre>
     *
     * <code>repeated .command_line.CommandLineSection sections = 2;</code>
     */
    public java.util.List<? extends com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSectionOrBuilder> 
        getSectionsOrBuilderList() {
      return sections_;
    }
    /**
     * <pre>
     * A Bazel command line is made of distinct parts. For example,
     *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
     * has the executable "bazel", a startup flag, a command "test", a command
     * flag, and a test target. There could be many more flags and targets, or
     * none (`bazel info` for example), but the basic structure is there. The
     * command line should be broken down into these logical sections here.
     * </pre>
     *
     * <code>repeated .command_line.CommandLineSection sections = 2;</code>
     */
    public int getSectionsCount() {
      return sections_.size();
    }
    /**
     * <pre>
     * A Bazel command line is made of distinct parts. For example,
     *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
     * has the executable "bazel", a startup flag, a command "test", a command
     * flag, and a test target. There could be many more flags and targets, or
     * none (`bazel info` for example), but the basic structure is there. The
     * command line should be broken down into these logical sections here.
     * </pre>
     *
     * <code>repeated .command_line.CommandLineSection sections = 2;</code>
     */
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection getSections(int index) {
      return sections_.get(index);
    }
    /**
     * <pre>
     * A Bazel command line is made of distinct parts. For example,
     *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
     * has the executable "bazel", a startup flag, a command "test", a command
     * flag, and a test target. There could be many more flags and targets, or
     * none (`bazel info` for example), but the basic structure is there. The
     * command line should be broken down into these logical sections here.
     * </pre>
     *
     * <code>repeated .command_line.CommandLineSection sections = 2;</code>
     */
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSectionOrBuilder getSectionsOrBuilder(
        int index) {
      return sections_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getCommandLineLabelBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, commandLineLabel_);
      }
      for (int i = 0; i < sections_.size(); i++) {
        output.writeMessage(2, sections_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getCommandLineLabelBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, commandLineLabel_);
      }
      for (int i = 0; i < sections_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sections_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine other = (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine) obj;

      boolean result = true;
      result = result && getCommandLineLabel()
          .equals(other.getCommandLineLabel());
      result = result && getSectionsList()
          .equals(other.getSectionsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMMAND_LINE_LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getCommandLineLabel().hashCode();
      if (getSectionsCount() > 0) {
        hash = (37 * hash) + SECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getSectionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Representation of a Bazel command line.
     * </pre>
     *
     * Protobuf type {@code command_line.CommandLine}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:command_line.CommandLine)
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_CommandLine_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_CommandLine_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine.class, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSectionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        commandLineLabel_ = "";

        if (sectionsBuilder_ == null) {
          sections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sectionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_CommandLine_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine getDefaultInstanceForType() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine build() {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine buildPartial() {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine result = new com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.commandLineLabel_ = commandLineLabel_;
        if (sectionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            sections_ = java.util.Collections.unmodifiableList(sections_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sections_ = sections_;
        } else {
          result.sections_ = sectionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine) {
          return mergeFrom((com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine other) {
        if (other == com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine.getDefaultInstance()) return this;
        if (!other.getCommandLineLabel().isEmpty()) {
          commandLineLabel_ = other.commandLineLabel_;
          onChanged();
        }
        if (sectionsBuilder_ == null) {
          if (!other.sections_.isEmpty()) {
            if (sections_.isEmpty()) {
              sections_ = other.sections_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSectionsIsMutable();
              sections_.addAll(other.sections_);
            }
            onChanged();
          }
        } else {
          if (!other.sections_.isEmpty()) {
            if (sectionsBuilder_.isEmpty()) {
              sectionsBuilder_.dispose();
              sectionsBuilder_ = null;
              sections_ = other.sections_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sectionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSectionsFieldBuilder() : null;
            } else {
              sectionsBuilder_.addAllMessages(other.sections_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object commandLineLabel_ = "";
      /**
       * <pre>
       * A title for this command line value, to differentiate it from others.
       * In particular, a single invocation may wish to report both the literal and
       * canonical command lines, and this label would be used to differentiate
       * between both versions. This is a string for flexibility.
       * </pre>
       *
       * <code>string command_line_label = 1;</code>
       */
      public java.lang.String getCommandLineLabel() {
        java.lang.Object ref = commandLineLabel_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commandLineLabel_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A title for this command line value, to differentiate it from others.
       * In particular, a single invocation may wish to report both the literal and
       * canonical command lines, and this label would be used to differentiate
       * between both versions. This is a string for flexibility.
       * </pre>
       *
       * <code>string command_line_label = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCommandLineLabelBytes() {
        java.lang.Object ref = commandLineLabel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commandLineLabel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A title for this command line value, to differentiate it from others.
       * In particular, a single invocation may wish to report both the literal and
       * canonical command lines, and this label would be used to differentiate
       * between both versions. This is a string for flexibility.
       * </pre>
       *
       * <code>string command_line_label = 1;</code>
       */
      public Builder setCommandLineLabel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        commandLineLabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A title for this command line value, to differentiate it from others.
       * In particular, a single invocation may wish to report both the literal and
       * canonical command lines, and this label would be used to differentiate
       * between both versions. This is a string for flexibility.
       * </pre>
       *
       * <code>string command_line_label = 1;</code>
       */
      public Builder clearCommandLineLabel() {
        
        commandLineLabel_ = getDefaultInstance().getCommandLineLabel();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A title for this command line value, to differentiate it from others.
       * In particular, a single invocation may wish to report both the literal and
       * canonical command lines, and this label would be used to differentiate
       * between both versions. This is a string for flexibility.
       * </pre>
       *
       * <code>string command_line_label = 1;</code>
       */
      public Builder setCommandLineLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        commandLineLabel_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection> sections_ =
        java.util.Collections.emptyList();
      private void ensureSectionsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sections_ = new java.util.ArrayList<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection>(sections_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.Builder, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSectionOrBuilder> sectionsBuilder_;

      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public java.util.List<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection> getSectionsList() {
        if (sectionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sections_);
        } else {
          return sectionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public int getSectionsCount() {
        if (sectionsBuilder_ == null) {
          return sections_.size();
        } else {
          return sectionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection getSections(int index) {
        if (sectionsBuilder_ == null) {
          return sections_.get(index);
        } else {
          return sectionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public Builder setSections(
          int index, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection value) {
        if (sectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSectionsIsMutable();
          sections_.set(index, value);
          onChanged();
        } else {
          sectionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public Builder setSections(
          int index, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.Builder builderForValue) {
        if (sectionsBuilder_ == null) {
          ensureSectionsIsMutable();
          sections_.set(index, builderForValue.build());
          onChanged();
        } else {
          sectionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public Builder addSections(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection value) {
        if (sectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSectionsIsMutable();
          sections_.add(value);
          onChanged();
        } else {
          sectionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public Builder addSections(
          int index, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection value) {
        if (sectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSectionsIsMutable();
          sections_.add(index, value);
          onChanged();
        } else {
          sectionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public Builder addSections(
          com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.Builder builderForValue) {
        if (sectionsBuilder_ == null) {
          ensureSectionsIsMutable();
          sections_.add(builderForValue.build());
          onChanged();
        } else {
          sectionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public Builder addSections(
          int index, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.Builder builderForValue) {
        if (sectionsBuilder_ == null) {
          ensureSectionsIsMutable();
          sections_.add(index, builderForValue.build());
          onChanged();
        } else {
          sectionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public Builder addAllSections(
          java.lang.Iterable<? extends com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection> values) {
        if (sectionsBuilder_ == null) {
          ensureSectionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sections_);
          onChanged();
        } else {
          sectionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public Builder clearSections() {
        if (sectionsBuilder_ == null) {
          sections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sectionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public Builder removeSections(int index) {
        if (sectionsBuilder_ == null) {
          ensureSectionsIsMutable();
          sections_.remove(index);
          onChanged();
        } else {
          sectionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.Builder getSectionsBuilder(
          int index) {
        return getSectionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSectionOrBuilder getSectionsOrBuilder(
          int index) {
        if (sectionsBuilder_ == null) {
          return sections_.get(index);  } else {
          return sectionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public java.util.List<? extends com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSectionOrBuilder> 
           getSectionsOrBuilderList() {
        if (sectionsBuilder_ != null) {
          return sectionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sections_);
        }
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.Builder addSectionsBuilder() {
        return getSectionsFieldBuilder().addBuilder(
            com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.getDefaultInstance());
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.Builder addSectionsBuilder(
          int index) {
        return getSectionsFieldBuilder().addBuilder(
            index, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.getDefaultInstance());
      }
      /**
       * <pre>
       * A Bazel command line is made of distinct parts. For example,
       *    `bazel --nomaster_bazelrc test --nocache_test_results //foo:aTest`
       * has the executable "bazel", a startup flag, a command "test", a command
       * flag, and a test target. There could be many more flags and targets, or
       * none (`bazel info` for example), but the basic structure is there. The
       * command line should be broken down into these logical sections here.
       * </pre>
       *
       * <code>repeated .command_line.CommandLineSection sections = 2;</code>
       */
      public java.util.List<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.Builder> 
           getSectionsBuilderList() {
        return getSectionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.Builder, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSectionOrBuilder> 
          getSectionsFieldBuilder() {
        if (sectionsBuilder_ == null) {
          sectionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.Builder, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSectionOrBuilder>(
                  sections_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          sections_ = null;
        }
        return sectionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:command_line.CommandLine)
    }

    // @@protoc_insertion_point(class_scope:command_line.CommandLine)
    private static final com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine();
    }

    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CommandLine>
        PARSER = new com.google.protobuf.AbstractParser<CommandLine>() {
      @java.lang.Override
      public CommandLine parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommandLine(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CommandLine> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CommandLine> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLine getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CommandLineSectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:command_line.CommandLineSection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name of this section, such as "startup_option" or "command".
     * </pre>
     *
     * <code>string section_label = 1;</code>
     */
    java.lang.String getSectionLabel();
    /**
     * <pre>
     * The name of this section, such as "startup_option" or "command".
     * </pre>
     *
     * <code>string section_label = 1;</code>
     */
    com.google.protobuf.ByteString
        getSectionLabelBytes();

    /**
     * <pre>
     * Sections with non-options, such as the list of targets or the command,
     * should use simple string chunks.
     * </pre>
     *
     * <code>.command_line.ChunkList chunk_list = 2;</code>
     */
    boolean hasChunkList();
    /**
     * <pre>
     * Sections with non-options, such as the list of targets or the command,
     * should use simple string chunks.
     * </pre>
     *
     * <code>.command_line.ChunkList chunk_list = 2;</code>
     */
    com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList getChunkList();
    /**
     * <pre>
     * Sections with non-options, such as the list of targets or the command,
     * should use simple string chunks.
     * </pre>
     *
     * <code>.command_line.ChunkList chunk_list = 2;</code>
     */
    com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkListOrBuilder getChunkListOrBuilder();

    /**
     * <pre>
     * Startup and command options are lists of options and belong here.
     * </pre>
     *
     * <code>.command_line.OptionList option_list = 3;</code>
     */
    boolean hasOptionList();
    /**
     * <pre>
     * Startup and command options are lists of options and belong here.
     * </pre>
     *
     * <code>.command_line.OptionList option_list = 3;</code>
     */
    com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList getOptionList();
    /**
     * <pre>
     * Startup and command options are lists of options and belong here.
     * </pre>
     *
     * <code>.command_line.OptionList option_list = 3;</code>
     */
    com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionListOrBuilder getOptionListOrBuilder();

    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.SectionTypeCase getSectionTypeCase();
  }
  /**
   * <pre>
   * A section of the Bazel command line.
   * </pre>
   *
   * Protobuf type {@code command_line.CommandLineSection}
   */
  public  static final class CommandLineSection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:command_line.CommandLineSection)
      CommandLineSectionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CommandLineSection.newBuilder() to construct.
    private CommandLineSection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CommandLineSection() {
      sectionLabel_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CommandLineSection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              sectionLabel_ = s;
              break;
            }
            case 18: {
              com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.Builder subBuilder = null;
              if (sectionTypeCase_ == 2) {
                subBuilder = ((com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) sectionType_).toBuilder();
              }
              sectionType_ =
                  input.readMessage(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) sectionType_);
                sectionType_ = subBuilder.buildPartial();
              }
              sectionTypeCase_ = 2;
              break;
            }
            case 26: {
              com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.Builder subBuilder = null;
              if (sectionTypeCase_ == 3) {
                subBuilder = ((com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) sectionType_).toBuilder();
              }
              sectionType_ =
                  input.readMessage(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) sectionType_);
                sectionType_ = subBuilder.buildPartial();
              }
              sectionTypeCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_CommandLineSection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_CommandLineSection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.class, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.Builder.class);
    }

    private int sectionTypeCase_ = 0;
    private java.lang.Object sectionType_;
    public enum SectionTypeCase
        implements com.google.protobuf.Internal.EnumLite {
      CHUNK_LIST(2),
      OPTION_LIST(3),
      SECTIONTYPE_NOT_SET(0);
      private final int value;
      private SectionTypeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SectionTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static SectionTypeCase forNumber(int value) {
        switch (value) {
          case 2: return CHUNK_LIST;
          case 3: return OPTION_LIST;
          case 0: return SECTIONTYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SectionTypeCase
    getSectionTypeCase() {
      return SectionTypeCase.forNumber(
          sectionTypeCase_);
    }

    public static final int SECTION_LABEL_FIELD_NUMBER = 1;
    private volatile java.lang.Object sectionLabel_;
    /**
     * <pre>
     * The name of this section, such as "startup_option" or "command".
     * </pre>
     *
     * <code>string section_label = 1;</code>
     */
    public java.lang.String getSectionLabel() {
      java.lang.Object ref = sectionLabel_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sectionLabel_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of this section, such as "startup_option" or "command".
     * </pre>
     *
     * <code>string section_label = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSectionLabelBytes() {
      java.lang.Object ref = sectionLabel_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sectionLabel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHUNK_LIST_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Sections with non-options, such as the list of targets or the command,
     * should use simple string chunks.
     * </pre>
     *
     * <code>.command_line.ChunkList chunk_list = 2;</code>
     */
    public boolean hasChunkList() {
      return sectionTypeCase_ == 2;
    }
    /**
     * <pre>
     * Sections with non-options, such as the list of targets or the command,
     * should use simple string chunks.
     * </pre>
     *
     * <code>.command_line.ChunkList chunk_list = 2;</code>
     */
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList getChunkList() {
      if (sectionTypeCase_ == 2) {
         return (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) sectionType_;
      }
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.getDefaultInstance();
    }
    /**
     * <pre>
     * Sections with non-options, such as the list of targets or the command,
     * should use simple string chunks.
     * </pre>
     *
     * <code>.command_line.ChunkList chunk_list = 2;</code>
     */
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkListOrBuilder getChunkListOrBuilder() {
      if (sectionTypeCase_ == 2) {
         return (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) sectionType_;
      }
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.getDefaultInstance();
    }

    public static final int OPTION_LIST_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Startup and command options are lists of options and belong here.
     * </pre>
     *
     * <code>.command_line.OptionList option_list = 3;</code>
     */
    public boolean hasOptionList() {
      return sectionTypeCase_ == 3;
    }
    /**
     * <pre>
     * Startup and command options are lists of options and belong here.
     * </pre>
     *
     * <code>.command_line.OptionList option_list = 3;</code>
     */
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList getOptionList() {
      if (sectionTypeCase_ == 3) {
         return (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) sectionType_;
      }
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.getDefaultInstance();
    }
    /**
     * <pre>
     * Startup and command options are lists of options and belong here.
     * </pre>
     *
     * <code>.command_line.OptionList option_list = 3;</code>
     */
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionListOrBuilder getOptionListOrBuilder() {
      if (sectionTypeCase_ == 3) {
         return (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) sectionType_;
      }
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSectionLabelBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sectionLabel_);
      }
      if (sectionTypeCase_ == 2) {
        output.writeMessage(2, (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) sectionType_);
      }
      if (sectionTypeCase_ == 3) {
        output.writeMessage(3, (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) sectionType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSectionLabelBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sectionLabel_);
      }
      if (sectionTypeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) sectionType_);
      }
      if (sectionTypeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) sectionType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection other = (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection) obj;

      boolean result = true;
      result = result && getSectionLabel()
          .equals(other.getSectionLabel());
      result = result && getSectionTypeCase().equals(
          other.getSectionTypeCase());
      if (!result) return false;
      switch (sectionTypeCase_) {
        case 2:
          result = result && getChunkList()
              .equals(other.getChunkList());
          break;
        case 3:
          result = result && getOptionList()
              .equals(other.getOptionList());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SECTION_LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getSectionLabel().hashCode();
      switch (sectionTypeCase_) {
        case 2:
          hash = (37 * hash) + CHUNK_LIST_FIELD_NUMBER;
          hash = (53 * hash) + getChunkList().hashCode();
          break;
        case 3:
          hash = (37 * hash) + OPTION_LIST_FIELD_NUMBER;
          hash = (53 * hash) + getOptionList().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A section of the Bazel command line.
     * </pre>
     *
     * Protobuf type {@code command_line.CommandLineSection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:command_line.CommandLineSection)
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_CommandLineSection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_CommandLineSection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.class, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sectionLabel_ = "";

        sectionTypeCase_ = 0;
        sectionType_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_CommandLineSection_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection getDefaultInstanceForType() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection build() {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection buildPartial() {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection result = new com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection(this);
        result.sectionLabel_ = sectionLabel_;
        if (sectionTypeCase_ == 2) {
          if (chunkListBuilder_ == null) {
            result.sectionType_ = sectionType_;
          } else {
            result.sectionType_ = chunkListBuilder_.build();
          }
        }
        if (sectionTypeCase_ == 3) {
          if (optionListBuilder_ == null) {
            result.sectionType_ = sectionType_;
          } else {
            result.sectionType_ = optionListBuilder_.build();
          }
        }
        result.sectionTypeCase_ = sectionTypeCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection) {
          return mergeFrom((com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection other) {
        if (other == com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection.getDefaultInstance()) return this;
        if (!other.getSectionLabel().isEmpty()) {
          sectionLabel_ = other.sectionLabel_;
          onChanged();
        }
        switch (other.getSectionTypeCase()) {
          case CHUNK_LIST: {
            mergeChunkList(other.getChunkList());
            break;
          }
          case OPTION_LIST: {
            mergeOptionList(other.getOptionList());
            break;
          }
          case SECTIONTYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int sectionTypeCase_ = 0;
      private java.lang.Object sectionType_;
      public SectionTypeCase
          getSectionTypeCase() {
        return SectionTypeCase.forNumber(
            sectionTypeCase_);
      }

      public Builder clearSectionType() {
        sectionTypeCase_ = 0;
        sectionType_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object sectionLabel_ = "";
      /**
       * <pre>
       * The name of this section, such as "startup_option" or "command".
       * </pre>
       *
       * <code>string section_label = 1;</code>
       */
      public java.lang.String getSectionLabel() {
        java.lang.Object ref = sectionLabel_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sectionLabel_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of this section, such as "startup_option" or "command".
       * </pre>
       *
       * <code>string section_label = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSectionLabelBytes() {
        java.lang.Object ref = sectionLabel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sectionLabel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of this section, such as "startup_option" or "command".
       * </pre>
       *
       * <code>string section_label = 1;</code>
       */
      public Builder setSectionLabel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sectionLabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of this section, such as "startup_option" or "command".
       * </pre>
       *
       * <code>string section_label = 1;</code>
       */
      public Builder clearSectionLabel() {
        
        sectionLabel_ = getDefaultInstance().getSectionLabel();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of this section, such as "startup_option" or "command".
       * </pre>
       *
       * <code>string section_label = 1;</code>
       */
      public Builder setSectionLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sectionLabel_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.Builder, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkListOrBuilder> chunkListBuilder_;
      /**
       * <pre>
       * Sections with non-options, such as the list of targets or the command,
       * should use simple string chunks.
       * </pre>
       *
       * <code>.command_line.ChunkList chunk_list = 2;</code>
       */
      public boolean hasChunkList() {
        return sectionTypeCase_ == 2;
      }
      /**
       * <pre>
       * Sections with non-options, such as the list of targets or the command,
       * should use simple string chunks.
       * </pre>
       *
       * <code>.command_line.ChunkList chunk_list = 2;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList getChunkList() {
        if (chunkListBuilder_ == null) {
          if (sectionTypeCase_ == 2) {
            return (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) sectionType_;
          }
          return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.getDefaultInstance();
        } else {
          if (sectionTypeCase_ == 2) {
            return chunkListBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Sections with non-options, such as the list of targets or the command,
       * should use simple string chunks.
       * </pre>
       *
       * <code>.command_line.ChunkList chunk_list = 2;</code>
       */
      public Builder setChunkList(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList value) {
        if (chunkListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sectionType_ = value;
          onChanged();
        } else {
          chunkListBuilder_.setMessage(value);
        }
        sectionTypeCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Sections with non-options, such as the list of targets or the command,
       * should use simple string chunks.
       * </pre>
       *
       * <code>.command_line.ChunkList chunk_list = 2;</code>
       */
      public Builder setChunkList(
          com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.Builder builderForValue) {
        if (chunkListBuilder_ == null) {
          sectionType_ = builderForValue.build();
          onChanged();
        } else {
          chunkListBuilder_.setMessage(builderForValue.build());
        }
        sectionTypeCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Sections with non-options, such as the list of targets or the command,
       * should use simple string chunks.
       * </pre>
       *
       * <code>.command_line.ChunkList chunk_list = 2;</code>
       */
      public Builder mergeChunkList(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList value) {
        if (chunkListBuilder_ == null) {
          if (sectionTypeCase_ == 2 &&
              sectionType_ != com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.getDefaultInstance()) {
            sectionType_ = com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.newBuilder((com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) sectionType_)
                .mergeFrom(value).buildPartial();
          } else {
            sectionType_ = value;
          }
          onChanged();
        } else {
          if (sectionTypeCase_ == 2) {
            chunkListBuilder_.mergeFrom(value);
          }
          chunkListBuilder_.setMessage(value);
        }
        sectionTypeCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Sections with non-options, such as the list of targets or the command,
       * should use simple string chunks.
       * </pre>
       *
       * <code>.command_line.ChunkList chunk_list = 2;</code>
       */
      public Builder clearChunkList() {
        if (chunkListBuilder_ == null) {
          if (sectionTypeCase_ == 2) {
            sectionTypeCase_ = 0;
            sectionType_ = null;
            onChanged();
          }
        } else {
          if (sectionTypeCase_ == 2) {
            sectionTypeCase_ = 0;
            sectionType_ = null;
          }
          chunkListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Sections with non-options, such as the list of targets or the command,
       * should use simple string chunks.
       * </pre>
       *
       * <code>.command_line.ChunkList chunk_list = 2;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.Builder getChunkListBuilder() {
        return getChunkListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sections with non-options, such as the list of targets or the command,
       * should use simple string chunks.
       * </pre>
       *
       * <code>.command_line.ChunkList chunk_list = 2;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkListOrBuilder getChunkListOrBuilder() {
        if ((sectionTypeCase_ == 2) && (chunkListBuilder_ != null)) {
          return chunkListBuilder_.getMessageOrBuilder();
        } else {
          if (sectionTypeCase_ == 2) {
            return (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) sectionType_;
          }
          return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Sections with non-options, such as the list of targets or the command,
       * should use simple string chunks.
       * </pre>
       *
       * <code>.command_line.ChunkList chunk_list = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.Builder, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkListOrBuilder> 
          getChunkListFieldBuilder() {
        if (chunkListBuilder_ == null) {
          if (!(sectionTypeCase_ == 2)) {
            sectionType_ = com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.getDefaultInstance();
          }
          chunkListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.Builder, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkListOrBuilder>(
                  (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) sectionType_,
                  getParentForChildren(),
                  isClean());
          sectionType_ = null;
        }
        sectionTypeCase_ = 2;
        onChanged();;
        return chunkListBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.Builder, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionListOrBuilder> optionListBuilder_;
      /**
       * <pre>
       * Startup and command options are lists of options and belong here.
       * </pre>
       *
       * <code>.command_line.OptionList option_list = 3;</code>
       */
      public boolean hasOptionList() {
        return sectionTypeCase_ == 3;
      }
      /**
       * <pre>
       * Startup and command options are lists of options and belong here.
       * </pre>
       *
       * <code>.command_line.OptionList option_list = 3;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList getOptionList() {
        if (optionListBuilder_ == null) {
          if (sectionTypeCase_ == 3) {
            return (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) sectionType_;
          }
          return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.getDefaultInstance();
        } else {
          if (sectionTypeCase_ == 3) {
            return optionListBuilder_.getMessage();
          }
          return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Startup and command options are lists of options and belong here.
       * </pre>
       *
       * <code>.command_line.OptionList option_list = 3;</code>
       */
      public Builder setOptionList(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList value) {
        if (optionListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sectionType_ = value;
          onChanged();
        } else {
          optionListBuilder_.setMessage(value);
        }
        sectionTypeCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Startup and command options are lists of options and belong here.
       * </pre>
       *
       * <code>.command_line.OptionList option_list = 3;</code>
       */
      public Builder setOptionList(
          com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.Builder builderForValue) {
        if (optionListBuilder_ == null) {
          sectionType_ = builderForValue.build();
          onChanged();
        } else {
          optionListBuilder_.setMessage(builderForValue.build());
        }
        sectionTypeCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Startup and command options are lists of options and belong here.
       * </pre>
       *
       * <code>.command_line.OptionList option_list = 3;</code>
       */
      public Builder mergeOptionList(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList value) {
        if (optionListBuilder_ == null) {
          if (sectionTypeCase_ == 3 &&
              sectionType_ != com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.getDefaultInstance()) {
            sectionType_ = com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.newBuilder((com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) sectionType_)
                .mergeFrom(value).buildPartial();
          } else {
            sectionType_ = value;
          }
          onChanged();
        } else {
          if (sectionTypeCase_ == 3) {
            optionListBuilder_.mergeFrom(value);
          }
          optionListBuilder_.setMessage(value);
        }
        sectionTypeCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Startup and command options are lists of options and belong here.
       * </pre>
       *
       * <code>.command_line.OptionList option_list = 3;</code>
       */
      public Builder clearOptionList() {
        if (optionListBuilder_ == null) {
          if (sectionTypeCase_ == 3) {
            sectionTypeCase_ = 0;
            sectionType_ = null;
            onChanged();
          }
        } else {
          if (sectionTypeCase_ == 3) {
            sectionTypeCase_ = 0;
            sectionType_ = null;
          }
          optionListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Startup and command options are lists of options and belong here.
       * </pre>
       *
       * <code>.command_line.OptionList option_list = 3;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.Builder getOptionListBuilder() {
        return getOptionListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Startup and command options are lists of options and belong here.
       * </pre>
       *
       * <code>.command_line.OptionList option_list = 3;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionListOrBuilder getOptionListOrBuilder() {
        if ((sectionTypeCase_ == 3) && (optionListBuilder_ != null)) {
          return optionListBuilder_.getMessageOrBuilder();
        } else {
          if (sectionTypeCase_ == 3) {
            return (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) sectionType_;
          }
          return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Startup and command options are lists of options and belong here.
       * </pre>
       *
       * <code>.command_line.OptionList option_list = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.Builder, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionListOrBuilder> 
          getOptionListFieldBuilder() {
        if (optionListBuilder_ == null) {
          if (!(sectionTypeCase_ == 3)) {
            sectionType_ = com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.getDefaultInstance();
          }
          optionListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.Builder, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionListOrBuilder>(
                  (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) sectionType_,
                  getParentForChildren(),
                  isClean());
          sectionType_ = null;
        }
        sectionTypeCase_ = 3;
        onChanged();;
        return optionListBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:command_line.CommandLineSection)
    }

    // @@protoc_insertion_point(class_scope:command_line.CommandLineSection)
    private static final com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection();
    }

    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CommandLineSection>
        PARSER = new com.google.protobuf.AbstractParser<CommandLineSection>() {
      @java.lang.Override
      public CommandLineSection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommandLineSection(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CommandLineSection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CommandLineSection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.CommandLineSection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChunkListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:command_line.ChunkList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string chunk = 1;</code>
     */
    java.util.List<java.lang.String>
        getChunkList();
    /**
     * <code>repeated string chunk = 1;</code>
     */
    int getChunkCount();
    /**
     * <code>repeated string chunk = 1;</code>
     */
    java.lang.String getChunk(int index);
    /**
     * <code>repeated string chunk = 1;</code>
     */
    com.google.protobuf.ByteString
        getChunkBytes(int index);
  }
  /**
   * <pre>
   * Wrapper to allow a list of strings in the "oneof" section_type.
   * </pre>
   *
   * Protobuf type {@code command_line.ChunkList}
   */
  public  static final class ChunkList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:command_line.ChunkList)
      ChunkListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChunkList.newBuilder() to construct.
    private ChunkList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChunkList() {
      chunk_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                chunk_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              chunk_.add(s);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          chunk_ = chunk_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_ChunkList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_ChunkList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.class, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.Builder.class);
    }

    public static final int CHUNK_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList chunk_;
    /**
     * <code>repeated string chunk = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getChunkList() {
      return chunk_;
    }
    /**
     * <code>repeated string chunk = 1;</code>
     */
    public int getChunkCount() {
      return chunk_.size();
    }
    /**
     * <code>repeated string chunk = 1;</code>
     */
    public java.lang.String getChunk(int index) {
      return chunk_.get(index);
    }
    /**
     * <code>repeated string chunk = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChunkBytes(int index) {
      return chunk_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < chunk_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, chunk_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < chunk_.size(); i++) {
          dataSize += computeStringSizeNoTag(chunk_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getChunkList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList other = (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) obj;

      boolean result = true;
      result = result && getChunkList()
          .equals(other.getChunkList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getChunkCount() > 0) {
        hash = (37 * hash) + CHUNK_FIELD_NUMBER;
        hash = (53 * hash) + getChunkList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Wrapper to allow a list of strings in the "oneof" section_type.
     * </pre>
     *
     * Protobuf type {@code command_line.ChunkList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:command_line.ChunkList)
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_ChunkList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_ChunkList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.class, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        chunk_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_ChunkList_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList getDefaultInstanceForType() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList build() {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList buildPartial() {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList result = new com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          chunk_ = chunk_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.chunk_ = chunk_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) {
          return mergeFrom((com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList other) {
        if (other == com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList.getDefaultInstance()) return this;
        if (!other.chunk_.isEmpty()) {
          if (chunk_.isEmpty()) {
            chunk_ = other.chunk_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureChunkIsMutable();
            chunk_.addAll(other.chunk_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList chunk_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureChunkIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          chunk_ = new com.google.protobuf.LazyStringArrayList(chunk_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string chunk = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getChunkList() {
        return chunk_.getUnmodifiableView();
      }
      /**
       * <code>repeated string chunk = 1;</code>
       */
      public int getChunkCount() {
        return chunk_.size();
      }
      /**
       * <code>repeated string chunk = 1;</code>
       */
      public java.lang.String getChunk(int index) {
        return chunk_.get(index);
      }
      /**
       * <code>repeated string chunk = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChunkBytes(int index) {
        return chunk_.getByteString(index);
      }
      /**
       * <code>repeated string chunk = 1;</code>
       */
      public Builder setChunk(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChunkIsMutable();
        chunk_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string chunk = 1;</code>
       */
      public Builder addChunk(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChunkIsMutable();
        chunk_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string chunk = 1;</code>
       */
      public Builder addAllChunk(
          java.lang.Iterable<java.lang.String> values) {
        ensureChunkIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, chunk_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string chunk = 1;</code>
       */
      public Builder clearChunk() {
        chunk_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string chunk = 1;</code>
       */
      public Builder addChunkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureChunkIsMutable();
        chunk_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:command_line.ChunkList)
    }

    // @@protoc_insertion_point(class_scope:command_line.ChunkList)
    private static final com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList();
    }

    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChunkList>
        PARSER = new com.google.protobuf.AbstractParser<ChunkList>() {
      @java.lang.Override
      public ChunkList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChunkList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.ChunkList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OptionListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:command_line.OptionList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .command_line.Option option = 1;</code>
     */
    java.util.List<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option> 
        getOptionList();
    /**
     * <code>repeated .command_line.Option option = 1;</code>
     */
    com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option getOption(int index);
    /**
     * <code>repeated .command_line.Option option = 1;</code>
     */
    int getOptionCount();
    /**
     * <code>repeated .command_line.Option option = 1;</code>
     */
    java.util.List<? extends com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionOrBuilder> 
        getOptionOrBuilderList();
    /**
     * <code>repeated .command_line.Option option = 1;</code>
     */
    com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionOrBuilder getOptionOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Wrapper to allow a list of options in the "oneof" section_type.
   * </pre>
   *
   * Protobuf type {@code command_line.OptionList}
   */
  public  static final class OptionList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:command_line.OptionList)
      OptionListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OptionList.newBuilder() to construct.
    private OptionList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OptionList() {
      option_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OptionList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                option_ = new java.util.ArrayList<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option>();
                mutable_bitField0_ |= 0x00000001;
              }
              option_.add(
                  input.readMessage(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          option_ = java.util.Collections.unmodifiableList(option_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_OptionList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_OptionList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.class, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.Builder.class);
    }

    public static final int OPTION_FIELD_NUMBER = 1;
    private java.util.List<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option> option_;
    /**
     * <code>repeated .command_line.Option option = 1;</code>
     */
    public java.util.List<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option> getOptionList() {
      return option_;
    }
    /**
     * <code>repeated .command_line.Option option = 1;</code>
     */
    public java.util.List<? extends com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionOrBuilder> 
        getOptionOrBuilderList() {
      return option_;
    }
    /**
     * <code>repeated .command_line.Option option = 1;</code>
     */
    public int getOptionCount() {
      return option_.size();
    }
    /**
     * <code>repeated .command_line.Option option = 1;</code>
     */
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option getOption(int index) {
      return option_.get(index);
    }
    /**
     * <code>repeated .command_line.Option option = 1;</code>
     */
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionOrBuilder getOptionOrBuilder(
        int index) {
      return option_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < option_.size(); i++) {
        output.writeMessage(1, option_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < option_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, option_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList other = (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) obj;

      boolean result = true;
      result = result && getOptionList()
          .equals(other.getOptionList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOptionCount() > 0) {
        hash = (37 * hash) + OPTION_FIELD_NUMBER;
        hash = (53 * hash) + getOptionList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Wrapper to allow a list of options in the "oneof" section_type.
     * </pre>
     *
     * Protobuf type {@code command_line.OptionList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:command_line.OptionList)
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_OptionList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_OptionList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.class, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOptionFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (optionBuilder_ == null) {
          option_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          optionBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_OptionList_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList getDefaultInstanceForType() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList build() {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList buildPartial() {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList result = new com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList(this);
        int from_bitField0_ = bitField0_;
        if (optionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            option_ = java.util.Collections.unmodifiableList(option_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.option_ = option_;
        } else {
          result.option_ = optionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) {
          return mergeFrom((com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList other) {
        if (other == com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList.getDefaultInstance()) return this;
        if (optionBuilder_ == null) {
          if (!other.option_.isEmpty()) {
            if (option_.isEmpty()) {
              option_ = other.option_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOptionIsMutable();
              option_.addAll(other.option_);
            }
            onChanged();
          }
        } else {
          if (!other.option_.isEmpty()) {
            if (optionBuilder_.isEmpty()) {
              optionBuilder_.dispose();
              optionBuilder_ = null;
              option_ = other.option_;
              bitField0_ = (bitField0_ & ~0x00000001);
              optionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOptionFieldBuilder() : null;
            } else {
              optionBuilder_.addAllMessages(other.option_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option> option_ =
        java.util.Collections.emptyList();
      private void ensureOptionIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          option_ = new java.util.ArrayList<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option>(option_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.Builder, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionOrBuilder> optionBuilder_;

      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public java.util.List<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option> getOptionList() {
        if (optionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(option_);
        } else {
          return optionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public int getOptionCount() {
        if (optionBuilder_ == null) {
          return option_.size();
        } else {
          return optionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option getOption(int index) {
        if (optionBuilder_ == null) {
          return option_.get(index);
        } else {
          return optionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public Builder setOption(
          int index, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option value) {
        if (optionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOptionIsMutable();
          option_.set(index, value);
          onChanged();
        } else {
          optionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public Builder setOption(
          int index, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.Builder builderForValue) {
        if (optionBuilder_ == null) {
          ensureOptionIsMutable();
          option_.set(index, builderForValue.build());
          onChanged();
        } else {
          optionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public Builder addOption(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option value) {
        if (optionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOptionIsMutable();
          option_.add(value);
          onChanged();
        } else {
          optionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public Builder addOption(
          int index, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option value) {
        if (optionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOptionIsMutable();
          option_.add(index, value);
          onChanged();
        } else {
          optionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public Builder addOption(
          com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.Builder builderForValue) {
        if (optionBuilder_ == null) {
          ensureOptionIsMutable();
          option_.add(builderForValue.build());
          onChanged();
        } else {
          optionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public Builder addOption(
          int index, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.Builder builderForValue) {
        if (optionBuilder_ == null) {
          ensureOptionIsMutable();
          option_.add(index, builderForValue.build());
          onChanged();
        } else {
          optionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public Builder addAllOption(
          java.lang.Iterable<? extends com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option> values) {
        if (optionBuilder_ == null) {
          ensureOptionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, option_);
          onChanged();
        } else {
          optionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public Builder clearOption() {
        if (optionBuilder_ == null) {
          option_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          optionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public Builder removeOption(int index) {
        if (optionBuilder_ == null) {
          ensureOptionIsMutable();
          option_.remove(index);
          onChanged();
        } else {
          optionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.Builder getOptionBuilder(
          int index) {
        return getOptionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionOrBuilder getOptionOrBuilder(
          int index) {
        if (optionBuilder_ == null) {
          return option_.get(index);  } else {
          return optionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public java.util.List<? extends com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionOrBuilder> 
           getOptionOrBuilderList() {
        if (optionBuilder_ != null) {
          return optionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(option_);
        }
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.Builder addOptionBuilder() {
        return getOptionFieldBuilder().addBuilder(
            com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.getDefaultInstance());
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.Builder addOptionBuilder(
          int index) {
        return getOptionFieldBuilder().addBuilder(
            index, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.getDefaultInstance());
      }
      /**
       * <code>repeated .command_line.Option option = 1;</code>
       */
      public java.util.List<com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.Builder> 
           getOptionBuilderList() {
        return getOptionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.Builder, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionOrBuilder> 
          getOptionFieldBuilder() {
        if (optionBuilder_ == null) {
          optionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.Builder, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionOrBuilder>(
                  option_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          option_ = null;
        }
        return optionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:command_line.OptionList)
    }

    // @@protoc_insertion_point(class_scope:command_line.OptionList)
    private static final com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList();
    }

    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OptionList>
        PARSER = new com.google.protobuf.AbstractParser<OptionList>() {
      @java.lang.Override
      public OptionList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OptionList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OptionList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OptionList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:command_line.Option)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * How the option looks with the option and its value combined. Depending on
     * the purpose of this command line report, this could be the canonical
     * form, or the way that the flag was set.
     * Some examples: this might be `--foo=bar` form, or `--foo bar` with a space;
     * for boolean flags, `--nobaz` is accepted on top of `--baz=false` and other
     * negating values, or for a positive value, the unqualified `--baz` form
     * is also accepted. This could also be a short `-b`, if the flag has an
     * abbreviated form.
     * </pre>
     *
     * <code>string combined_form = 1;</code>
     */
    java.lang.String getCombinedForm();
    /**
     * <pre>
     * How the option looks with the option and its value combined. Depending on
     * the purpose of this command line report, this could be the canonical
     * form, or the way that the flag was set.
     * Some examples: this might be `--foo=bar` form, or `--foo bar` with a space;
     * for boolean flags, `--nobaz` is accepted on top of `--baz=false` and other
     * negating values, or for a positive value, the unqualified `--baz` form
     * is also accepted. This could also be a short `-b`, if the flag has an
     * abbreviated form.
     * </pre>
     *
     * <code>string combined_form = 1;</code>
     */
    com.google.protobuf.ByteString
        getCombinedFormBytes();

    /**
     * <pre>
     * The canonical name of the option, without the preceding dashes.
     * </pre>
     *
     * <code>string option_name = 2;</code>
     */
    java.lang.String getOptionName();
    /**
     * <pre>
     * The canonical name of the option, without the preceding dashes.
     * </pre>
     *
     * <code>string option_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getOptionNameBytes();

    /**
     * <pre>
     * The value of the flag, or unset for flags that do not take values.
     * Especially for boolean flags, this should be in canonical form, the
     * combined_form field above gives room for showing the flag as it was set
     * if that is preferred.
     * </pre>
     *
     * <code>string option_value = 3;</code>
     */
    java.lang.String getOptionValue();
    /**
     * <pre>
     * The value of the flag, or unset for flags that do not take values.
     * Especially for boolean flags, this should be in canonical form, the
     * combined_form field above gives room for showing the flag as it was set
     * if that is preferred.
     * </pre>
     *
     * <code>string option_value = 3;</code>
     */
    com.google.protobuf.ByteString
        getOptionValueBytes();

    /**
     * <pre>
     * This flag's tagged effects. See OptionEffectTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
     */
    java.util.List<com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag> getEffectTagsList();
    /**
     * <pre>
     * This flag's tagged effects. See OptionEffectTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
     */
    int getEffectTagsCount();
    /**
     * <pre>
     * This flag's tagged effects. See OptionEffectTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
     */
    com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag getEffectTags(int index);
    /**
     * <pre>
     * This flag's tagged effects. See OptionEffectTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
     */
    java.util.List<java.lang.Integer>
    getEffectTagsValueList();
    /**
     * <pre>
     * This flag's tagged effects. See OptionEffectTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
     */
    int getEffectTagsValue(int index);

    /**
     * <pre>
     * Metadata about the flag. See OptionMetadataTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
     */
    java.util.List<com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag> getMetadataTagsList();
    /**
     * <pre>
     * Metadata about the flag. See OptionMetadataTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
     */
    int getMetadataTagsCount();
    /**
     * <pre>
     * Metadata about the flag. See OptionMetadataTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
     */
    com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag getMetadataTags(int index);
    /**
     * <pre>
     * Metadata about the flag. See OptionMetadataTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
     */
    java.util.List<java.lang.Integer>
    getMetadataTagsValueList();
    /**
     * <pre>
     * Metadata about the flag. See OptionMetadataTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
     */
    int getMetadataTagsValue(int index);
  }
  /**
   * <pre>
   * A single command line option.
   * This represents the option itself, but does not take into account the type of
   * option or how the parser interpreted it. If this option is part of a command
   * line that represents the actual input that Bazel received, it would, for
   * example, include expansion flags as they are. However, if this option
   * represents the canonical form of the command line, with the values as Bazel
   * understands them, then the expansion flag, which has no value, would not
   * appear, and the flags it expands to would.
   * </pre>
   *
   * Protobuf type {@code command_line.Option}
   */
  public  static final class Option extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:command_line.Option)
      OptionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Option.newBuilder() to construct.
    private Option(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Option() {
      combinedForm_ = "";
      optionName_ = "";
      optionValue_ = "";
      effectTags_ = java.util.Collections.emptyList();
      metadataTags_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Option(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              combinedForm_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              optionName_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              optionValue_ = s;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                effectTags_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              effectTags_.add(rawValue);
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  effectTags_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000008;
                }
                effectTags_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                metadataTags_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              metadataTags_.add(rawValue);
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  metadataTags_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000010;
                }
                metadataTags_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          effectTags_ = java.util.Collections.unmodifiableList(effectTags_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          metadataTags_ = java.util.Collections.unmodifiableList(metadataTags_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_Option_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_Option_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.class, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.Builder.class);
    }

    private int bitField0_;
    public static final int COMBINED_FORM_FIELD_NUMBER = 1;
    private volatile java.lang.Object combinedForm_;
    /**
     * <pre>
     * How the option looks with the option and its value combined. Depending on
     * the purpose of this command line report, this could be the canonical
     * form, or the way that the flag was set.
     * Some examples: this might be `--foo=bar` form, or `--foo bar` with a space;
     * for boolean flags, `--nobaz` is accepted on top of `--baz=false` and other
     * negating values, or for a positive value, the unqualified `--baz` form
     * is also accepted. This could also be a short `-b`, if the flag has an
     * abbreviated form.
     * </pre>
     *
     * <code>string combined_form = 1;</code>
     */
    public java.lang.String getCombinedForm() {
      java.lang.Object ref = combinedForm_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        combinedForm_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * How the option looks with the option and its value combined. Depending on
     * the purpose of this command line report, this could be the canonical
     * form, or the way that the flag was set.
     * Some examples: this might be `--foo=bar` form, or `--foo bar` with a space;
     * for boolean flags, `--nobaz` is accepted on top of `--baz=false` and other
     * negating values, or for a positive value, the unqualified `--baz` form
     * is also accepted. This could also be a short `-b`, if the flag has an
     * abbreviated form.
     * </pre>
     *
     * <code>string combined_form = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCombinedFormBytes() {
      java.lang.Object ref = combinedForm_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        combinedForm_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPTION_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object optionName_;
    /**
     * <pre>
     * The canonical name of the option, without the preceding dashes.
     * </pre>
     *
     * <code>string option_name = 2;</code>
     */
    public java.lang.String getOptionName() {
      java.lang.Object ref = optionName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        optionName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The canonical name of the option, without the preceding dashes.
     * </pre>
     *
     * <code>string option_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOptionNameBytes() {
      java.lang.Object ref = optionName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        optionName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPTION_VALUE_FIELD_NUMBER = 3;
    private volatile java.lang.Object optionValue_;
    /**
     * <pre>
     * The value of the flag, or unset for flags that do not take values.
     * Especially for boolean flags, this should be in canonical form, the
     * combined_form field above gives room for showing the flag as it was set
     * if that is preferred.
     * </pre>
     *
     * <code>string option_value = 3;</code>
     */
    public java.lang.String getOptionValue() {
      java.lang.Object ref = optionValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        optionValue_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The value of the flag, or unset for flags that do not take values.
     * Especially for boolean flags, this should be in canonical form, the
     * combined_form field above gives room for showing the flag as it was set
     * if that is preferred.
     * </pre>
     *
     * <code>string option_value = 3;</code>
     */
    public com.google.protobuf.ByteString
        getOptionValueBytes() {
      java.lang.Object ref = optionValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        optionValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EFFECT_TAGS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> effectTags_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag> effectTags_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag>() {
              public com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag result = com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag.valueOf(from);
                return result == null ? com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * This flag's tagged effects. See OptionEffectTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
     */
    public java.util.List<com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag> getEffectTagsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag>(effectTags_, effectTags_converter_);
    }
    /**
     * <pre>
     * This flag's tagged effects. See OptionEffectTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
     */
    public int getEffectTagsCount() {
      return effectTags_.size();
    }
    /**
     * <pre>
     * This flag's tagged effects. See OptionEffectTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
     */
    public com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag getEffectTags(int index) {
      return effectTags_converter_.convert(effectTags_.get(index));
    }
    /**
     * <pre>
     * This flag's tagged effects. See OptionEffectTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
     */
    public java.util.List<java.lang.Integer>
    getEffectTagsValueList() {
      return effectTags_;
    }
    /**
     * <pre>
     * This flag's tagged effects. See OptionEffectTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
     */
    public int getEffectTagsValue(int index) {
      return effectTags_.get(index);
    }
    private int effectTagsMemoizedSerializedSize;

    public static final int METADATA_TAGS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> metadataTags_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag> metadataTags_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag>() {
              public com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag result = com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag.valueOf(from);
                return result == null ? com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * Metadata about the flag. See OptionMetadataTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
     */
    public java.util.List<com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag> getMetadataTagsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag>(metadataTags_, metadataTags_converter_);
    }
    /**
     * <pre>
     * Metadata about the flag. See OptionMetadataTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
     */
    public int getMetadataTagsCount() {
      return metadataTags_.size();
    }
    /**
     * <pre>
     * Metadata about the flag. See OptionMetadataTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
     */
    public com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag getMetadataTags(int index) {
      return metadataTags_converter_.convert(metadataTags_.get(index));
    }
    /**
     * <pre>
     * Metadata about the flag. See OptionMetadataTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
     */
    public java.util.List<java.lang.Integer>
    getMetadataTagsValueList() {
      return metadataTags_;
    }
    /**
     * <pre>
     * Metadata about the flag. See OptionMetadataTag's java documentation for
     * details.
     * </pre>
     *
     * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
     */
    public int getMetadataTagsValue(int index) {
      return metadataTags_.get(index);
    }
    private int metadataTagsMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getCombinedFormBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, combinedForm_);
      }
      if (!getOptionNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, optionName_);
      }
      if (!getOptionValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, optionValue_);
      }
      if (getEffectTagsList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(effectTagsMemoizedSerializedSize);
      }
      for (int i = 0; i < effectTags_.size(); i++) {
        output.writeEnumNoTag(effectTags_.get(i));
      }
      if (getMetadataTagsList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(metadataTagsMemoizedSerializedSize);
      }
      for (int i = 0; i < metadataTags_.size(); i++) {
        output.writeEnumNoTag(metadataTags_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getCombinedFormBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, combinedForm_);
      }
      if (!getOptionNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, optionName_);
      }
      if (!getOptionValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, optionValue_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < effectTags_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(effectTags_.get(i));
        }
        size += dataSize;
        if (!getEffectTagsList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }effectTagsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < metadataTags_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(metadataTags_.get(i));
        }
        size += dataSize;
        if (!getMetadataTagsList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }metadataTagsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option)) {
        return super.equals(obj);
      }
      com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option other = (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option) obj;

      boolean result = true;
      result = result && getCombinedForm()
          .equals(other.getCombinedForm());
      result = result && getOptionName()
          .equals(other.getOptionName());
      result = result && getOptionValue()
          .equals(other.getOptionValue());
      result = result && effectTags_.equals(other.effectTags_);
      result = result && metadataTags_.equals(other.metadataTags_);
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMBINED_FORM_FIELD_NUMBER;
      hash = (53 * hash) + getCombinedForm().hashCode();
      hash = (37 * hash) + OPTION_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getOptionName().hashCode();
      hash = (37 * hash) + OPTION_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getOptionValue().hashCode();
      if (getEffectTagsCount() > 0) {
        hash = (37 * hash) + EFFECT_TAGS_FIELD_NUMBER;
        hash = (53 * hash) + effectTags_.hashCode();
      }
      if (getMetadataTagsCount() > 0) {
        hash = (37 * hash) + METADATA_TAGS_FIELD_NUMBER;
        hash = (53 * hash) + metadataTags_.hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A single command line option.
     * This represents the option itself, but does not take into account the type of
     * option or how the parser interpreted it. If this option is part of a command
     * line that represents the actual input that Bazel received, it would, for
     * example, include expansion flags as they are. However, if this option
     * represents the canonical form of the command line, with the values as Bazel
     * understands them, then the expansion flag, which has no value, would not
     * appear, and the flags it expands to would.
     * </pre>
     *
     * Protobuf type {@code command_line.Option}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:command_line.Option)
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.OptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_Option_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_Option_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.class, com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.Builder.class);
      }

      // Construct using com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        combinedForm_ = "";

        optionName_ = "";

        optionValue_ = "";

        effectTags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        metadataTags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.internal_static_command_line_Option_descriptor;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option getDefaultInstanceForType() {
        return com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option build() {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option buildPartial() {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option result = new com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.combinedForm_ = combinedForm_;
        result.optionName_ = optionName_;
        result.optionValue_ = optionValue_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          effectTags_ = java.util.Collections.unmodifiableList(effectTags_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.effectTags_ = effectTags_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          metadataTags_ = java.util.Collections.unmodifiableList(metadataTags_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.metadataTags_ = metadataTags_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option) {
          return mergeFrom((com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option other) {
        if (other == com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option.getDefaultInstance()) return this;
        if (!other.getCombinedForm().isEmpty()) {
          combinedForm_ = other.combinedForm_;
          onChanged();
        }
        if (!other.getOptionName().isEmpty()) {
          optionName_ = other.optionName_;
          onChanged();
        }
        if (!other.getOptionValue().isEmpty()) {
          optionValue_ = other.optionValue_;
          onChanged();
        }
        if (!other.effectTags_.isEmpty()) {
          if (effectTags_.isEmpty()) {
            effectTags_ = other.effectTags_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureEffectTagsIsMutable();
            effectTags_.addAll(other.effectTags_);
          }
          onChanged();
        }
        if (!other.metadataTags_.isEmpty()) {
          if (metadataTags_.isEmpty()) {
            metadataTags_ = other.metadataTags_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureMetadataTagsIsMutable();
            metadataTags_.addAll(other.metadataTags_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object combinedForm_ = "";
      /**
       * <pre>
       * How the option looks with the option and its value combined. Depending on
       * the purpose of this command line report, this could be the canonical
       * form, or the way that the flag was set.
       * Some examples: this might be `--foo=bar` form, or `--foo bar` with a space;
       * for boolean flags, `--nobaz` is accepted on top of `--baz=false` and other
       * negating values, or for a positive value, the unqualified `--baz` form
       * is also accepted. This could also be a short `-b`, if the flag has an
       * abbreviated form.
       * </pre>
       *
       * <code>string combined_form = 1;</code>
       */
      public java.lang.String getCombinedForm() {
        java.lang.Object ref = combinedForm_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          combinedForm_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * How the option looks with the option and its value combined. Depending on
       * the purpose of this command line report, this could be the canonical
       * form, or the way that the flag was set.
       * Some examples: this might be `--foo=bar` form, or `--foo bar` with a space;
       * for boolean flags, `--nobaz` is accepted on top of `--baz=false` and other
       * negating values, or for a positive value, the unqualified `--baz` form
       * is also accepted. This could also be a short `-b`, if the flag has an
       * abbreviated form.
       * </pre>
       *
       * <code>string combined_form = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCombinedFormBytes() {
        java.lang.Object ref = combinedForm_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          combinedForm_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * How the option looks with the option and its value combined. Depending on
       * the purpose of this command line report, this could be the canonical
       * form, or the way that the flag was set.
       * Some examples: this might be `--foo=bar` form, or `--foo bar` with a space;
       * for boolean flags, `--nobaz` is accepted on top of `--baz=false` and other
       * negating values, or for a positive value, the unqualified `--baz` form
       * is also accepted. This could also be a short `-b`, if the flag has an
       * abbreviated form.
       * </pre>
       *
       * <code>string combined_form = 1;</code>
       */
      public Builder setCombinedForm(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        combinedForm_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * How the option looks with the option and its value combined. Depending on
       * the purpose of this command line report, this could be the canonical
       * form, or the way that the flag was set.
       * Some examples: this might be `--foo=bar` form, or `--foo bar` with a space;
       * for boolean flags, `--nobaz` is accepted on top of `--baz=false` and other
       * negating values, or for a positive value, the unqualified `--baz` form
       * is also accepted. This could also be a short `-b`, if the flag has an
       * abbreviated form.
       * </pre>
       *
       * <code>string combined_form = 1;</code>
       */
      public Builder clearCombinedForm() {
        
        combinedForm_ = getDefaultInstance().getCombinedForm();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * How the option looks with the option and its value combined. Depending on
       * the purpose of this command line report, this could be the canonical
       * form, or the way that the flag was set.
       * Some examples: this might be `--foo=bar` form, or `--foo bar` with a space;
       * for boolean flags, `--nobaz` is accepted on top of `--baz=false` and other
       * negating values, or for a positive value, the unqualified `--baz` form
       * is also accepted. This could also be a short `-b`, if the flag has an
       * abbreviated form.
       * </pre>
       *
       * <code>string combined_form = 1;</code>
       */
      public Builder setCombinedFormBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        combinedForm_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object optionName_ = "";
      /**
       * <pre>
       * The canonical name of the option, without the preceding dashes.
       * </pre>
       *
       * <code>string option_name = 2;</code>
       */
      public java.lang.String getOptionName() {
        java.lang.Object ref = optionName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          optionName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The canonical name of the option, without the preceding dashes.
       * </pre>
       *
       * <code>string option_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getOptionNameBytes() {
        java.lang.Object ref = optionName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          optionName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The canonical name of the option, without the preceding dashes.
       * </pre>
       *
       * <code>string option_name = 2;</code>
       */
      public Builder setOptionName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        optionName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The canonical name of the option, without the preceding dashes.
       * </pre>
       *
       * <code>string option_name = 2;</code>
       */
      public Builder clearOptionName() {
        
        optionName_ = getDefaultInstance().getOptionName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The canonical name of the option, without the preceding dashes.
       * </pre>
       *
       * <code>string option_name = 2;</code>
       */
      public Builder setOptionNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        optionName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object optionValue_ = "";
      /**
       * <pre>
       * The value of the flag, or unset for flags that do not take values.
       * Especially for boolean flags, this should be in canonical form, the
       * combined_form field above gives room for showing the flag as it was set
       * if that is preferred.
       * </pre>
       *
       * <code>string option_value = 3;</code>
       */
      public java.lang.String getOptionValue() {
        java.lang.Object ref = optionValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          optionValue_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The value of the flag, or unset for flags that do not take values.
       * Especially for boolean flags, this should be in canonical form, the
       * combined_form field above gives room for showing the flag as it was set
       * if that is preferred.
       * </pre>
       *
       * <code>string option_value = 3;</code>
       */
      public com.google.protobuf.ByteString
          getOptionValueBytes() {
        java.lang.Object ref = optionValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          optionValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The value of the flag, or unset for flags that do not take values.
       * Especially for boolean flags, this should be in canonical form, the
       * combined_form field above gives room for showing the flag as it was set
       * if that is preferred.
       * </pre>
       *
       * <code>string option_value = 3;</code>
       */
      public Builder setOptionValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        optionValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value of the flag, or unset for flags that do not take values.
       * Especially for boolean flags, this should be in canonical form, the
       * combined_form field above gives room for showing the flag as it was set
       * if that is preferred.
       * </pre>
       *
       * <code>string option_value = 3;</code>
       */
      public Builder clearOptionValue() {
        
        optionValue_ = getDefaultInstance().getOptionValue();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value of the flag, or unset for flags that do not take values.
       * Especially for boolean flags, this should be in canonical form, the
       * combined_form field above gives room for showing the flag as it was set
       * if that is preferred.
       * </pre>
       *
       * <code>string option_value = 3;</code>
       */
      public Builder setOptionValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        optionValue_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> effectTags_ =
        java.util.Collections.emptyList();
      private void ensureEffectTagsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          effectTags_ = new java.util.ArrayList<java.lang.Integer>(effectTags_);
          bitField0_ |= 0x00000008;
        }
      }
      /**
       * <pre>
       * This flag's tagged effects. See OptionEffectTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
       */
      public java.util.List<com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag> getEffectTagsList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag>(effectTags_, effectTags_converter_);
      }
      /**
       * <pre>
       * This flag's tagged effects. See OptionEffectTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
       */
      public int getEffectTagsCount() {
        return effectTags_.size();
      }
      /**
       * <pre>
       * This flag's tagged effects. See OptionEffectTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
       */
      public com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag getEffectTags(int index) {
        return effectTags_converter_.convert(effectTags_.get(index));
      }
      /**
       * <pre>
       * This flag's tagged effects. See OptionEffectTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
       */
      public Builder setEffectTags(
          int index, com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEffectTagsIsMutable();
        effectTags_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This flag's tagged effects. See OptionEffectTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
       */
      public Builder addEffectTags(com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEffectTagsIsMutable();
        effectTags_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This flag's tagged effects. See OptionEffectTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
       */
      public Builder addAllEffectTags(
          java.lang.Iterable<? extends com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag> values) {
        ensureEffectTagsIsMutable();
        for (com.google.devtools.common.options.proto.OptionFilters.OptionEffectTag value : values) {
          effectTags_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This flag's tagged effects. See OptionEffectTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
       */
      public Builder clearEffectTags() {
        effectTags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This flag's tagged effects. See OptionEffectTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
       */
      public java.util.List<java.lang.Integer>
      getEffectTagsValueList() {
        return java.util.Collections.unmodifiableList(effectTags_);
      }
      /**
       * <pre>
       * This flag's tagged effects. See OptionEffectTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
       */
      public int getEffectTagsValue(int index) {
        return effectTags_.get(index);
      }
      /**
       * <pre>
       * This flag's tagged effects. See OptionEffectTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
       */
      public Builder setEffectTagsValue(
          int index, int value) {
        ensureEffectTagsIsMutable();
        effectTags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This flag's tagged effects. See OptionEffectTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
       */
      public Builder addEffectTagsValue(int value) {
        ensureEffectTagsIsMutable();
        effectTags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This flag's tagged effects. See OptionEffectTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionEffectTag effect_tags = 4;</code>
       */
      public Builder addAllEffectTagsValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureEffectTagsIsMutable();
        for (int value : values) {
          effectTags_.add(value);
        }
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> metadataTags_ =
        java.util.Collections.emptyList();
      private void ensureMetadataTagsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          metadataTags_ = new java.util.ArrayList<java.lang.Integer>(metadataTags_);
          bitField0_ |= 0x00000010;
        }
      }
      /**
       * <pre>
       * Metadata about the flag. See OptionMetadataTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
       */
      public java.util.List<com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag> getMetadataTagsList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag>(metadataTags_, metadataTags_converter_);
      }
      /**
       * <pre>
       * Metadata about the flag. See OptionMetadataTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
       */
      public int getMetadataTagsCount() {
        return metadataTags_.size();
      }
      /**
       * <pre>
       * Metadata about the flag. See OptionMetadataTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
       */
      public com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag getMetadataTags(int index) {
        return metadataTags_converter_.convert(metadataTags_.get(index));
      }
      /**
       * <pre>
       * Metadata about the flag. See OptionMetadataTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
       */
      public Builder setMetadataTags(
          int index, com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetadataTagsIsMutable();
        metadataTags_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata about the flag. See OptionMetadataTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
       */
      public Builder addMetadataTags(com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetadataTagsIsMutable();
        metadataTags_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata about the flag. See OptionMetadataTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
       */
      public Builder addAllMetadataTags(
          java.lang.Iterable<? extends com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag> values) {
        ensureMetadataTagsIsMutable();
        for (com.google.devtools.common.options.proto.OptionFilters.OptionMetadataTag value : values) {
          metadataTags_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata about the flag. See OptionMetadataTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
       */
      public Builder clearMetadataTags() {
        metadataTags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata about the flag. See OptionMetadataTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
       */
      public java.util.List<java.lang.Integer>
      getMetadataTagsValueList() {
        return java.util.Collections.unmodifiableList(metadataTags_);
      }
      /**
       * <pre>
       * Metadata about the flag. See OptionMetadataTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
       */
      public int getMetadataTagsValue(int index) {
        return metadataTags_.get(index);
      }
      /**
       * <pre>
       * Metadata about the flag. See OptionMetadataTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
       */
      public Builder setMetadataTagsValue(
          int index, int value) {
        ensureMetadataTagsIsMutable();
        metadataTags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata about the flag. See OptionMetadataTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
       */
      public Builder addMetadataTagsValue(int value) {
        ensureMetadataTagsIsMutable();
        metadataTags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata about the flag. See OptionMetadataTag's java documentation for
       * details.
       * </pre>
       *
       * <code>repeated .options.OptionMetadataTag metadata_tags = 5;</code>
       */
      public Builder addAllMetadataTagsValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureMetadataTagsIsMutable();
        for (int value : values) {
          metadataTags_.add(value);
        }
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:command_line.Option)
    }

    // @@protoc_insertion_point(class_scope:command_line.Option)
    private static final com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option();
    }

    public static com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Option>
        PARSER = new com.google.protobuf.AbstractParser<Option>() {
      @java.lang.Override
      public Option parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Option(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Option> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Option> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.devtools.build.lib.runtime.proto.CommandLineOuterClass.Option getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_command_line_CommandLine_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_command_line_CommandLine_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_command_line_CommandLineSection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_command_line_CommandLineSection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_command_line_ChunkList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_command_line_ChunkList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_command_line_OptionList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_command_line_OptionList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_command_line_Option_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_command_line_Option_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$src/main/protobuf/command_line.proto\022\014" +
      "command_line\032&src/main/protobuf/option_f" +
      "ilters.proto\"]\n\013CommandLine\022\032\n\022command_l" +
      "ine_label\030\001 \001(\t\0222\n\010sections\030\002 \003(\0132 .comm" +
      "and_line.CommandLineSection\"\233\001\n\022CommandL" +
      "ineSection\022\025\n\rsection_label\030\001 \001(\t\022-\n\nchu" +
      "nk_list\030\002 \001(\0132\027.command_line.ChunkListH\000" +
      "\022/\n\013option_list\030\003 \001(\0132\030.command_line.Opt" +
      "ionListH\000B\016\n\014section_type\"\032\n\tChunkList\022\r" +
      "\n\005chunk\030\001 \003(\t\"2\n\nOptionList\022$\n\006option\030\001 " +
      "\003(\0132\024.command_line.Option\"\254\001\n\006Option\022\025\n\r" +
      "combined_form\030\001 \001(\t\022\023\n\013option_name\030\002 \001(\t" +
      "\022\024\n\014option_value\030\003 \001(\t\022-\n\013effect_tags\030\004 " +
      "\003(\0162\030.options.OptionEffectTag\0221\n\rmetadat" +
      "a_tags\030\005 \003(\0162\032.options.OptionMetadataTag" +
      "B-\n+com.google.devtools.build.lib.runtim" +
      "e.protob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.devtools.common.options.proto.OptionFilters.getDescriptor(),
        }, assigner);
    internal_static_command_line_CommandLine_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_command_line_CommandLine_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_command_line_CommandLine_descriptor,
        new java.lang.String[] { "CommandLineLabel", "Sections", });
    internal_static_command_line_CommandLineSection_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_command_line_CommandLineSection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_command_line_CommandLineSection_descriptor,
        new java.lang.String[] { "SectionLabel", "ChunkList", "OptionList", "SectionType", });
    internal_static_command_line_ChunkList_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_command_line_ChunkList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_command_line_ChunkList_descriptor,
        new java.lang.String[] { "Chunk", });
    internal_static_command_line_OptionList_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_command_line_OptionList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_command_line_OptionList_descriptor,
        new java.lang.String[] { "Option", });
    internal_static_command_line_Option_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_command_line_Option_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_command_line_Option_descriptor,
        new java.lang.String[] { "CombinedForm", "OptionName", "OptionValue", "EffectTags", "MetadataTags", });
    com.google.devtools.common.options.proto.OptionFilters.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
