// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/remoteexecution/v1test/remote_execution.proto

package com.google.devtools.remoteexecution.v1test;

public interface ActionResultOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.remoteexecution.v1test.ActionResult)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The output files of the action. For each output file requested, if the
   * corresponding file existed after the action completed, a single entry will
   * be present in the output list.
   * If the action does not produce the requested output, or produces a
   * directory where a regular file is expected or vice versa, then that output
   * will be omitted from the list. The server is free to arrange the output
   * list as desired; clients MUST NOT assume that the output list is sorted.
   * </pre>
   *
   * <code>repeated .google.devtools.remoteexecution.v1test.OutputFile output_files = 2;</code>
   */
  java.util.List<com.google.devtools.remoteexecution.v1test.OutputFile> 
      getOutputFilesList();
  /**
   * <pre>
   * The output files of the action. For each output file requested, if the
   * corresponding file existed after the action completed, a single entry will
   * be present in the output list.
   * If the action does not produce the requested output, or produces a
   * directory where a regular file is expected or vice versa, then that output
   * will be omitted from the list. The server is free to arrange the output
   * list as desired; clients MUST NOT assume that the output list is sorted.
   * </pre>
   *
   * <code>repeated .google.devtools.remoteexecution.v1test.OutputFile output_files = 2;</code>
   */
  com.google.devtools.remoteexecution.v1test.OutputFile getOutputFiles(int index);
  /**
   * <pre>
   * The output files of the action. For each output file requested, if the
   * corresponding file existed after the action completed, a single entry will
   * be present in the output list.
   * If the action does not produce the requested output, or produces a
   * directory where a regular file is expected or vice versa, then that output
   * will be omitted from the list. The server is free to arrange the output
   * list as desired; clients MUST NOT assume that the output list is sorted.
   * </pre>
   *
   * <code>repeated .google.devtools.remoteexecution.v1test.OutputFile output_files = 2;</code>
   */
  int getOutputFilesCount();
  /**
   * <pre>
   * The output files of the action. For each output file requested, if the
   * corresponding file existed after the action completed, a single entry will
   * be present in the output list.
   * If the action does not produce the requested output, or produces a
   * directory where a regular file is expected or vice versa, then that output
   * will be omitted from the list. The server is free to arrange the output
   * list as desired; clients MUST NOT assume that the output list is sorted.
   * </pre>
   *
   * <code>repeated .google.devtools.remoteexecution.v1test.OutputFile output_files = 2;</code>
   */
  java.util.List<? extends com.google.devtools.remoteexecution.v1test.OutputFileOrBuilder> 
      getOutputFilesOrBuilderList();
  /**
   * <pre>
   * The output files of the action. For each output file requested, if the
   * corresponding file existed after the action completed, a single entry will
   * be present in the output list.
   * If the action does not produce the requested output, or produces a
   * directory where a regular file is expected or vice versa, then that output
   * will be omitted from the list. The server is free to arrange the output
   * list as desired; clients MUST NOT assume that the output list is sorted.
   * </pre>
   *
   * <code>repeated .google.devtools.remoteexecution.v1test.OutputFile output_files = 2;</code>
   */
  com.google.devtools.remoteexecution.v1test.OutputFileOrBuilder getOutputFilesOrBuilder(
      int index);

  /**
   * <pre>
   * The output directories of the action. For each output directory
   * requested,
   * if the corresponding directory existed after the action completed, a
   * single
   * entry will be present in the output list, which will contain the digest
   * of
   * a [Tree][google.devtools.remoteexecution.v1.test.Tree] message containing
   * the directory tree.
   * </pre>
   *
   * <code>repeated .google.devtools.remoteexecution.v1test.OutputDirectory output_directories = 3;</code>
   */
  java.util.List<com.google.devtools.remoteexecution.v1test.OutputDirectory> 
      getOutputDirectoriesList();
  /**
   * <pre>
   * The output directories of the action. For each output directory
   * requested,
   * if the corresponding directory existed after the action completed, a
   * single
   * entry will be present in the output list, which will contain the digest
   * of
   * a [Tree][google.devtools.remoteexecution.v1.test.Tree] message containing
   * the directory tree.
   * </pre>
   *
   * <code>repeated .google.devtools.remoteexecution.v1test.OutputDirectory output_directories = 3;</code>
   */
  com.google.devtools.remoteexecution.v1test.OutputDirectory getOutputDirectories(int index);
  /**
   * <pre>
   * The output directories of the action. For each output directory
   * requested,
   * if the corresponding directory existed after the action completed, a
   * single
   * entry will be present in the output list, which will contain the digest
   * of
   * a [Tree][google.devtools.remoteexecution.v1.test.Tree] message containing
   * the directory tree.
   * </pre>
   *
   * <code>repeated .google.devtools.remoteexecution.v1test.OutputDirectory output_directories = 3;</code>
   */
  int getOutputDirectoriesCount();
  /**
   * <pre>
   * The output directories of the action. For each output directory
   * requested,
   * if the corresponding directory existed after the action completed, a
   * single
   * entry will be present in the output list, which will contain the digest
   * of
   * a [Tree][google.devtools.remoteexecution.v1.test.Tree] message containing
   * the directory tree.
   * </pre>
   *
   * <code>repeated .google.devtools.remoteexecution.v1test.OutputDirectory output_directories = 3;</code>
   */
  java.util.List<? extends com.google.devtools.remoteexecution.v1test.OutputDirectoryOrBuilder> 
      getOutputDirectoriesOrBuilderList();
  /**
   * <pre>
   * The output directories of the action. For each output directory
   * requested,
   * if the corresponding directory existed after the action completed, a
   * single
   * entry will be present in the output list, which will contain the digest
   * of
   * a [Tree][google.devtools.remoteexecution.v1.test.Tree] message containing
   * the directory tree.
   * </pre>
   *
   * <code>repeated .google.devtools.remoteexecution.v1test.OutputDirectory output_directories = 3;</code>
   */
  com.google.devtools.remoteexecution.v1test.OutputDirectoryOrBuilder getOutputDirectoriesOrBuilder(
      int index);

  /**
   * <pre>
   * The exit code of the command.
   * </pre>
   *
   * <code>int32 exit_code = 4;</code>
   */
  int getExitCode();

  /**
   * <pre>
   * The standard output buffer of the action. The server will determine, based
   * on the size of the buffer, whether to return it in raw form or to return
   * a digest in `stdout_digest` that points to the buffer. If neither is set,
   * then the buffer is empty. The client SHOULD NOT assume it will get one of
   * the raw buffer or a digest on any given request and should be prepared to
   * handle either.
   * </pre>
   *
   * <code>bytes stdout_raw = 5;</code>
   */
  com.google.protobuf.ByteString getStdoutRaw();

  /**
   * <pre>
   * The digest for a blob containing the standard output of the action, which
   * can be retrieved from the
   * [ContentAddressableStorage][google.devtools.remoteexecution.v1test.ContentAddressableStorage].
   * See `stdout_raw` for when this will be set.
   * </pre>
   *
   * <code>.google.devtools.remoteexecution.v1test.Digest stdout_digest = 6;</code>
   */
  boolean hasStdoutDigest();
  /**
   * <pre>
   * The digest for a blob containing the standard output of the action, which
   * can be retrieved from the
   * [ContentAddressableStorage][google.devtools.remoteexecution.v1test.ContentAddressableStorage].
   * See `stdout_raw` for when this will be set.
   * </pre>
   *
   * <code>.google.devtools.remoteexecution.v1test.Digest stdout_digest = 6;</code>
   */
  com.google.devtools.remoteexecution.v1test.Digest getStdoutDigest();
  /**
   * <pre>
   * The digest for a blob containing the standard output of the action, which
   * can be retrieved from the
   * [ContentAddressableStorage][google.devtools.remoteexecution.v1test.ContentAddressableStorage].
   * See `stdout_raw` for when this will be set.
   * </pre>
   *
   * <code>.google.devtools.remoteexecution.v1test.Digest stdout_digest = 6;</code>
   */
  com.google.devtools.remoteexecution.v1test.DigestOrBuilder getStdoutDigestOrBuilder();

  /**
   * <pre>
   * The standard error buffer of the action. The server will determine, based
   * on the size of the buffer, whether to return it in raw form or to return
   * a digest in `stderr_digest` that points to the buffer. If neither is set,
   * then the buffer is empty. The client SHOULD NOT assume it will get one of
   * the raw buffer or a digest on any given request and should be prepared to
   * handle either.
   * </pre>
   *
   * <code>bytes stderr_raw = 7;</code>
   */
  com.google.protobuf.ByteString getStderrRaw();

  /**
   * <pre>
   * The digest for a blob containing the standard error of the action, which
   * can be retrieved from the
   * [ContentAddressableStorage][google.devtools.remoteexecution.v1test.ContentAddressableStorage].
   * See `stderr_raw` for when this will be set.
   * </pre>
   *
   * <code>.google.devtools.remoteexecution.v1test.Digest stderr_digest = 8;</code>
   */
  boolean hasStderrDigest();
  /**
   * <pre>
   * The digest for a blob containing the standard error of the action, which
   * can be retrieved from the
   * [ContentAddressableStorage][google.devtools.remoteexecution.v1test.ContentAddressableStorage].
   * See `stderr_raw` for when this will be set.
   * </pre>
   *
   * <code>.google.devtools.remoteexecution.v1test.Digest stderr_digest = 8;</code>
   */
  com.google.devtools.remoteexecution.v1test.Digest getStderrDigest();
  /**
   * <pre>
   * The digest for a blob containing the standard error of the action, which
   * can be retrieved from the
   * [ContentAddressableStorage][google.devtools.remoteexecution.v1test.ContentAddressableStorage].
   * See `stderr_raw` for when this will be set.
   * </pre>
   *
   * <code>.google.devtools.remoteexecution.v1test.Digest stderr_digest = 8;</code>
   */
  com.google.devtools.remoteexecution.v1test.DigestOrBuilder getStderrDigestOrBuilder();
}
